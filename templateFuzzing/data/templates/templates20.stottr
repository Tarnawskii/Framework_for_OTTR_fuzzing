@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix foot: <http://example.org/football#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { zipMin |  123 ( ++ ( 123 , ( ""z"" ) ) ,, ) ,  ) } ;
ottr:IRI [  ] :: {  } .
http://example.com/:Annotation [ zipMax |  List<<xsd:date>>badPrefix:string ?B# ] @@ <unclosedIRI ( _:blank invalid |  ) , @@ ex: ++ ++ "string"^^^xsd:string "w*~D*" :: BASE .
://noScheme [ ++ ++ xsd:dateTimeStamp , , t-pnd:Punned-Class-ObjectProperty  ?! xsd:hexBinary "string" = "string" , ] :noPrefix :: { ottr:Triple(?s, owl:Template2, ?@) } .
ex::doubleColon [ ] :: { bad::IRI(LUB, _:b2) o-rdf:Type(_:blank, xsd::doubleColon) , ottr:Triple(??  "malformed"^^bad:datatype) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?Lt, "invalid"^^<unclosedIRI) , }
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noType :: ( xsd:invalidType ) .
ottr:Type [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple   rdfs:Literal ,  @@  ?var (  ) , :: { ottr:Triple(?8, <unclosedIRI, 1..2) ( 
ex:Invalid Space [ List<List<<xsd:integer>>ottr: ?.t> ?': , , cross xsd:short 123 ] :: { ottr:Triple(?2, badPrefix:Footballer, http://invalid) } .
ottr:IRI [ ] ; { "-*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation :: BASE .
123 [ badPrefix:string ] "string" :: { ottr:Triple(_:blank ex: 1..2) ( } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  :noPrefix (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ xsd:foaf:name ?Bb ,  ] @ bad::IRI false ^^ :noType , ++ ++ ( "string" ) ) invalid |  :: { ex::doubleColon(xsd::doubleColon, ?}) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var ?? t-pnd:Punned-Class-ObjectProperty ! xsd:gMonth , @@ ://noScheme (  ) , @@ ottr:IRI (  ) :: { o-rdf:Type(_:blank, 23.14.15) , ex::doubleColon(_:blank, _:b2)  } ,
o-rdf:Template2 [ ?! xsd:invalidType  , owl:Class "a" , @@ List :: { cross |  owl:Triple ( _:blank ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: { ex:Invalid Space(_:blank, xsd::doubleColon) } .
ottr:IRI [ ] :: BASE .
foot:Triple ?!  = invalid^^type , @@ wrong ://noScheme ( ++ ++ ( 23.14.15 , ?+!<O ) ,, ) @@ <unclosedIRI ( ++ ( ( , ) ,, ) ) ) :: { o-rdf:Type(?|g, ?') , ?var } .
http://invalid [ ! :noType "string" ,  ] "unclosed :: { ottr:Triple(:noPrefix ex: -4+) , } .
bad::IRI [  ?p , ,  ] @@ ex::doubleColon  ) :: { ottr:Triple(_:blank, xsd:Footballer, none)  } .
 [ invalid |  LUB<<List<xsd:positiveInteger>>> 123 xsd:gMonth List ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  123 ( _:b2 ^^ ottr: zipMax |  ) : { cross |  123 ( false xsd:invalidType ) } ...
http://example.com/:Template2 "2+"  @@ badPrefix:Type ( ""q"" ^^ badPrefix:string , _:blank "B*EV*" ) :: { bad::IRI(?o, :Annotation) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Footballer [  ?l = _:b2 , , ?!! rdfs:Literal ?var ] zipMin |  @@ ottr:IRI (  ) ^^ LUB ,, :: { "(*" 
ex:Invalid Space [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 ( _:blank  ) } .
<unclosedIRI [ List<List<NEList<ottr:ex: ?r>>> ?' , ] :: { ottr:Triple(?bA o-rdf:Template2 "malformed"^^bad:datatype) , } .
bad::IRI [  @@ zipMax |  ://noScheme (  ) ; :: { ottr:Triple(_:blank, , ?J) ) } .
:noPrefix :: { http://invalid(ex:Invalid Space, ottr:) , o-rdf:Type(?;)K+, 1..2) ex::doubleColon(?j, ""I*@~*"") } .
"string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ottr:Template1 ( ++ ++ ( "string"^^^xsd:string ) ) ++ 23.14.15 , badPrefix:string ) , @@ cross :Annotation (  ) : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
ex:Invalid Space [ ++ List<xsd:unsignedInt>xsd:invalidType "string" = "unclosed ] :noType :: (  ) .
123 [ ! xsd:dateTime , ? xsd:gYearMonth , ,  ] @@ cross ex:Template1 ( ?/ty ) :: { bad::IRI(?<\5, "2023-01-01"^^xsd:date) , } (
123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1  @@  ?O[ ) :: BASE
ottr:IRI [ ++ ++   , , ?var ?UY , @@ ex:Invalid Space ++ ++ ?l , xsd::doubleColon ( :: { o-rdf:Type("string", http://example.com/:Invalid Space) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(_:blank, ex:) } .
://noScheme [ "#+" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { List } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: {  } .
<unclosedIRI [ ?!! xsd:byte ] @@ ?var (  ) , @@ http://invalid (  ) :: { ottr:Triple(?\, http://invalid, ?M) ottr:Triple(_:blank ex:Invalid Space "unclosed) ; 
owl:Type [ NEList<<LUB<owl:NamedIndividual>>>xsd:invalidType ottr: , ! LUB 123 List<"unclosed> ?g^on rdfs:Resource "string" , ] { invalid |  xsd:Template2 ( ++ ""R*"" ,, ) } .
123 [  ] LUB :: { ottr:Triple(ex::doubleColon, , ?var) , }
bad::IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ex:(?g, badPrefix:Footballer) , } .
ottr:IRI [ ] :: { o-rdf:Type(_:blank, ?_}9|) ottr:Triple(?c>6p' foot:Template2 _:b2) , "+" } .
<unclosedIRI [  ] ; { :noPrefix ++ ++ 123 zipMin |  } 
ex:Invalid Space xsd:dayTimeDuration ?]! zipMax |  LUB<xsd:short>xsd::doubleColon "string" , @ http://invalid ( ++ (  ) ) , _:blank true ,, ) :: {  
"string" [ ++ xsd:Name , ? xsd:nonPositiveInteger 123 =  , , LUB<List> ?t ] { ://noScheme(?$, 1..2) } .
http://example.com/:Annotation [ ?!! xsd:unsignedInt 123 = "value"^^invalid   owl:AnnotationProperty  @@ invalid |  123 (  ) , @@ 123  :: BASE
ottr:IRI [ bad:date ?9 ,   xsd:date ?;sEW = "unclosed ] xsd::doubleColon :: { ?var ( ex:Invalid Space ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "g*" 
:noPrefix [ ? LUB<rdfs:Datatype> , ] :: BASE .
owl:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ || bad::IRI ( ++ ( "string"^^^xsd:string , ( "string" ) ,, ) ) , _:blank  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { ex:(_:blank, ?G) ) } .
://noScheme ?? 123 = invalid^^type , ,  @@ ex::doubleColon ""V+""  :: {  } .
<unclosedIRI [ ] :: { ottr:Triple(ottr: http://invalid 123) o-rdf:Type(?"&C,, "unclosed) , } ;
"string" [ ++ invalid    :: { ottr:Triple(?=., http://example.com/:Type, none) } ...
:noPrefix [  zipMax |  @@ 123  :: ( ://noScheme(_:blank, _:b2) , ottr:Triple(_:blank ex::doubleColon "2023-01-01"^^xsd:date) , ) .
badPrefix:Invalid Space [ List<<xsd:unsignedShort>>ottr: xsd:invalidType , , ?! xsd:byte "o+" ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] ": {  } ...
"string" [ List<://noScheme> ?? ,  :noType ?ne , ] :: BASE .
 [ invalid |  xsd:negativeInteger 123 @@ bad::IRI List ; :: { ottr:Triple(?l foot:Footballer ?H) ex::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB, ex:Invalid Space, ex:) } .
http://invalid [  ] @@ cross ex:Template1 ( ?O ) :: { <unclosedIRI ( ( ?var 1 ,, ) cross ) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ://noScheme(_:blank, "invalid"^^://noScheme) ) } .
123 :: BASE
o-rdf:Type ++ ++ "string"  @@ zipMax |  "string" ( _:blank  ) @@ ottr:IRI (  ) :: { o-rdf:Type(?N\, none) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(invalid, ://noScheme, ex:) ( }
ex:Template2 [ ] :: { ex::doubleColon(_:blank, ?!@) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ List<xsd:long "X+"> ?p , ] 123 :: BASE .
ottr:IRI  @@ http://invalid ( 23.14.15 ^^ LUB cross ) , @@ ex:Invalid Space _:blank ++ ++ ?SoB , (  ) :: { o-rdf:Type(?[i, "2023-01-01"^^xsd:date) , } .
<unclosedIRI [ ++   ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ invalid |  bad::IRI ( ottr: ) :: { ottr:Triple(?Rm ottr:Footballer "malformed"^^bad:datatype) } .
:noPrefix [ ?! NEList<<LUB<owl:Class>>>xsd:invalidType , , xsd:NMTOKEN "string" , xsd::doubleColon @@  ?var (  ) :: { cross |   ( ++ invalid term ,, ) } .
badPrefix:Triple :: { ottr:Triple(?*bs, o-rdf:Type, false) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
xsd:Template1 [ ? owl:ObjectProperty 123 = "value"^^invalid ] :: { "unclosed 
owl:Annotation [ zipMin |  rdf:XMLLiteral ?^: ] { ottr:Triple(?T, http://example.com/:Invalid Space, _:b2) ; } .
o-rdf:Triple :: ( ottr:Triple(List bad::IRI "unclosed) , ) .
123 [ ?? List<xsd:gDay> "string" = "unclosed , ++ ++ xsd:base64Binary ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?a, ?~) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 xsd:normalizedString ex::doubleColon , ,   :: BASE .
ottr:IRI [ "c+" ] ?var :: { ex: ( ( invalid term ,, ) , (  ) ) ^^ badPrefix:string  ) } .
http://invalid [ ! ?[f = ( 1..2 , :noType ,,  @@ <unclosedIRI ++ ++ "2023-01-01"^^xsd:date , @@ zipMin |  ://noScheme ( xsd::doubleColon ) :: { ottr: } .
"string" [ ?! invalid 123 , ] @@ zipMax |  :noPrefix (  ) :: { o-rdf:Type(_:blank, "unclosed) ottr:Triple(_:blank, :Invalid Space, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { http://invalid(?b, ""t*"") ) } 
foot:Footballer [ ] :: {  }
xsd:Template2 [ "string" ?J , ++ xsd:gMonth  = "malformed"^^bad:datatype wrong xsd:nonNegativeInteger ?( xsd:int ?M , List<List<NEList< xsd:unsignedLong "string" = "value"^^invalid>>> ?Z ,   xsd:date ?| = invalid^^type ? xsd:float "string" = 23.14.15 , ] { http://invalid(?', "invalid"^^:noPrefix) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ://noScheme(?Y<, ?~) , ottr:Triple(_:blank, xsd:Annotation, ) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template1 [ ? LUB  , ] "|*" :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid |  @@ ?var ( ++ ++ ( "2023-01-01"^^xsd:date ,  ) ) :: { ottr:Triple("string" <unclosedIRI 23.14.15)  } .
ex:Invalid Space :: { cross |  http://invalid ( ?CO _:blank ,, ) } .
bad::IRI [ xsd:invalidType ] :: { o-rdf:Type(?/6, -3+) , } .
ex::doubleColon [ ?! NEList<<LUB<xsd:gMonthDay>>>xsd::doubleColon 123 = "malformed"^^bad:datatype ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr:IRI List ,  @@ ex: ?X ) :: { :noPrefix(?5, _:b1) 
ottr:Template2 [ ] : {  } 
:Invalid Space zipMin |  xsd:negativeInteger "string" ++ rdf:XMLLiteral , ,  @@ ?var  , :: BASE
?var [ ] :: { o-rdf:Type(?b, "5+") ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] zipMax |  @@ ex: ( ex::doubleColon ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Annotation [ none:foot:clubHistory ?]DE@ ] "string" :: {  } .
http://invalid :: { ottr:Triple(ottr: ://noScheme "unclosed) , } .
<unclosedIRI ++ ++ ?VS = 23.14.15 , badPrefix:string @@ :noPrefix ++ (  )  , :: { bad::IRI(_:blank, ?Z) :noType } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?jBn, xsd:Template1, 23.14.15) , zipMin |  ex:Invalid Space (  ) } .
123 [ xsd:decimal  List<<owl:rational>>invalid  , ] :: BASE
:Invalid Space [   xsd::doubleColon 123 , , ?!! xsd:time ++ xsd:byte , ,  @ ottr:IRI  :: { o-rdf:Type(?-q, none) 
123 :: BASE .
ex:Invalid Space [ ] :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ?? xsd:token "string" = "malformed"^^bad:datatype , , ? NEList<xsd:date>LUB ?iM = "value"^^invalid ,   :: BASE
:Type [ ! 123 = ( bad::IRI ) , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "n+" :: { ottr:Triple(_:blank owl:Invalid Space ?ga) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [ xsd::doubleColon @@ zipMin |  ex::doubleColon ( 23.14.15 ^^  (  ) ) invalid |  ) ; :: { :noPrefix  } .
http://invalid [ cross |  xsd:NCName  ] @@ ://noScheme (  ) :: { ex:(xsd:invalidType, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, none)  
?var [ ++ xsd:unsignedByte xsd:nonPositiveInteger ?L ] @@ http://example.com/:Template2 ( "%" ) :: { ottr:Triple(?$6, http://invalid, ottr:) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?U ex::doubleColon invalid) , ottr:Triple(123, http://example.com/:Invalid Space, ?vOg) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ cross |  bad::IRI ( (  ) ^^ ottr: _:blank invalid |  ) :: { http://invalid } .
ottr:IRI :: BASE .
:noPrefix  @@ ?var "|*" :: { <unclosedIRI(_:blank, abc.-5+) , } .
://noScheme [ ] :: { o-rdf:Type(?], ottr:Type) ex: ( ++ ++ ( ?%r/ ) ) , invalid term ) } .
ex:Invalid Space [  ?N) , ] @@ zipMax |  "string" (  ) @@  ottr:IRI (  ) :: { (?J[, "unclosed) ; } .
:Template2 [ rdfs:Datatype  , "string" ?R~ , ,  List<ottr:IRI>:noType  = "malformed"^^bad:datatype ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
badPrefix:Template1 [ LUB ] xsd::doubleColon :: {  }
owl:Annotation ?!! xsd:gMonth 123  ++ ++ "string"  ,   xsd:hexBinary @ cross |  123 (  ) :: BASE
owl:Annotation [ ! List<xsd:anyURI>xsd:invalidType 123 = 23.14.15  ] "X*v,*" :: { LUB 
ottr:IRI [ List<List<NEList<ex:>>> ?HVM` ] @@ 123 :: { ottr:Triple(_:blank ex:Invalid Space ?6e) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ xsd:gYearMonth List , ?! ?^< = invalid^^type , , "string" ?Z} , ] :: BASE .
://noScheme badPrefix:string @@  ( http://invalid ) @@ ex::doubleColon _:blank :: { cross |  ?var (  ) } .
bad::IRI [ ] :: { o-rdf:Type(?/7, none) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noType, :Invalid Space, 23.14.15) <unclosedIRI(?[l{m, xsd::doubleColon) } .
badPrefix:Template1 :: {  } )
http://example.com/:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?d, ex:Footballer, invalid) , }
"string" [ ++ xsd:Name @@ zipMin |  ex::doubleColon (  ) , ; { bad::IRI(?%, "malformed"^^bad:datatype) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ List<<owl:DatatypeProperty>>xsd:invalidType ?{D , List<++ owl:rational "string" = 23.14.15> ?% , ,  ] @ :noPrefix (  ) :: { LUB } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?!r#Vi, badPrefix:Invalid Space, 1..2) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Footballer [ ! xsd:NCName ++ ++ xsd:unsignedInt 123 = "value"^^invalid ,  :: { ottr:Triple(_:blank <unclosedIRI "string")  } .
ex::doubleColon "d+" @@ ://noScheme  @@ zipMax |  http://invalid ( _:blank cross ) :: { o-rdf:Type(badPrefix:string, ?2&) ) } .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ foot:foot:clubHistory ?B ] { ex:Invalid Space(?x, foot:Template1) , cross |  123 ( ++ ++ (  ) ) ,, ) } .
xsd:Triple : { o-rdf:Type(?hw7, "unclosed) } 
ex:Type [ ? ?q-v = ?~ , , ?!! :noType ?n , , xsd:time ",*" , ] xsd::doubleColon :: { o-rdf:Type(?_, "2023-01-01"^^xsd:date) ; 
ottr:Annotation [ ] :: { badPrefix:string 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  @@ || 123 ( ++ http://example.com/:Invalid Space cross |  ) @@  ++ ++ ( ( ?var 1 ) ) ,, ) , bad::IRI :: BASE .
:noPrefix :: {  } .
ex::doubleColon [ NEList<"string"> ?# xsd:date ?pO , , ?? xsd:float , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { ://noScheme ( _:blank  ) } .
<unclosedIRI NEList<xsd:double>xsd:invalidType 123 @@ LUB :: { ottr:Triple(?d ex:Template2 xsd::doubleColon) , } .
ex: [ ottr: ] @@  ?var ( ?}N ^^ :noType ,, ) ) :: { ottr:Triple(_:blank, ex:Invalid Space, ?A) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("7", -3+) , http://invalid(?\, false) } .
o-rdf:Template1 [   "string"  , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
owl:Footballer [ ++ ++ xsd:positiveInteger  ]  :: { ://noScheme(?=, "malformed"^^bad:datatype) ottr:Triple(_:blank ex:Invalid Space "2023-01-01"^^xsd:date) ; } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ ?v = "value"^^invalid xsd:time "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { xsd:invalidType } .
"string" [ ] :: { ottr:Triple(_:blank ex:Annotation ?c2) 
ottr:Type [ zipMin |  List<LUB<ottr:Bot>xsd::doubleColon> ?'x:; , ] ex::doubleColon :: BASE .
<unclosedIRI [ ?!! owl:AnnotationProperty ] cross @@ ://noScheme ++ _:b2  :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?r, http://invalid, 123) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI "7*" @@ LUB :: { ex:(?8`, 5+.-8+) , o-rdf:Type(invalid, :Template1) ; } .
:noPrefix :: BASE
ex:Invalid Space [ ?var ?^j ,  ] :: {   ( ottr: ) }
foot:Invalid Space   xsd:short   , ,   +: { ://noScheme(?6, "2023-01-01"^^xsd:date) , } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ++ xsd:decimal ] @@ zipMin |  123 (  ) , :: { ottr:Triple(invalid ex::doubleColon _:b1) ottr:IRI _:blank  } .
ottr:Annotation [ !  ?G , "string" ] "i*a?*" :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
  LUB<<List<xsd:dateTime>>>LUB 123 , ,  @@ cross |  ex: (  ) @@ ://noScheme ( _:blank invalid |  ) :: BASE .
<unclosedIRI :: { o-rdf:Type(?[w3, ?F) } .
bad::IRI [   "string" = (    xsd:token  = "unclosed , @@ || http://invalid ( invalid term ) :: { ottr:Triple(_:blank, owl:Template1, :noPrefix) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?O, _:b2) ,  } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] *: { List } .
o-rdf:Footballer [ ] :: BASE
ex:Type [ LUB<xsd:base64Binary> ?6 ] @@ ottr: :: { ottr:Triple(?H, xsd:Triple, true) ) }
"string" [ ?!! "string" = 23.14.15 , ,  ] :: { ottr:Triple(_:blank <unclosedIRI ?J8) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: BASE .
ottr:IRI [ ++ ++ xsd:float  = "value"^^invalid xsd:unsignedShort 123 ,  ]  :: {  }
ottr:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  ://noScheme ( "string"^^^xsd:string zipMin |  ) , @@ http://invalid ++ (  ) ) , ++ ++ ( ?f ,, ) :: { ex:Invalid Space(, invalid) , } .
ex::doubleColon  List ?FHL1 @@ cross |  ?var ( _:blank ,, ) @@ bad::IRI ( 7+ ^^   ) :: { ":+" } .
ex: [ NEList<xsd:date>xsd::doubleColon badPrefix:string , ] 123 :: { o-rdf:Type(?t, -4+.abc) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template2 [ ] :: { ottr:Triple(?;, ex:Annotation, "malformed"^^bad:datatype) , || foot:Footballer ( :noType ) 
badPrefix:Triple [ "unclosed ]  :: { ottr:Triple(_:blank, owl:Invalid Space, 23.14.15) o-rdf:Type(_:blank, "unclosed) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?rN, :noPrefix, xsd:invalidType) ) } .
?var [ ?! xsd:byte 123 = invalid^^type , zipMin |  xsd:duration  , ,  ] {  } .
badPrefix:Triple [ ] :: BASE .
://noScheme [ ex:Invalid Space ] "`" :: { cross |  ottr:IRI ( ( (  ) ,, ) ) ^^ :noType ,, ) } .
ex::doubleColon [ bad:foaf:name ?@ ] @@ ex:  @@ http://invalid (  ) :: { o-rdf:Type(_:blank, _:b2) , ottr:Triple(123 :Invalid Space ?w) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ wrong  ( ?3P7 ++ ++ abc.4+ zipMax |  ) :: { ottr: } .
http://invalid   :: { <unclosedIRI(_:blank, _:b1) http://invalid(_:blank, "unclosed) , } (
"string" [  List<xsd:double> "string" = ( List ,,  , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
o-rdf:Footballer : { ottr:Triple(?Gu, xsd:Template1, invalid) ; } ..
http://example.com/:Template1 [ "string" ] ://noScheme : { ex:Invalid Space(badPrefix:string, "unclosed) } 
123 [ ++ invalid  ( ?/ ,  ) ,, ?v1 , @ ottr:IRI ( _:blank zipMax |  ) :: { ottr:Triple(_:blank, http://invalid, ottr:Template2) , } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ NEList<<LUB<xsd:token>>>List 123 , ?! "string"  ] :: { ottr:Triple(?R xsd:Annotation ?(A) , } .
bad::IRI :: { o-rdf:Type(?+, "malformed"^^bad:datatype) cross |  <unclosedIRI ( abc ^^ :noType  ) } .
?var ?var ?M5t, , ,  @@ xsd:invalidType :: { ex::doubleColon(?B!{, _:b1) ,  }
o-rdf:Footballer ?? xsd:unsignedLong ! rdfs:Datatype 123  , , ++ ++ xsd:gDay @@ ottr:IRI  @@ zipMin |  ex:Triple (  ) :: ( o-rdf:Type(?), _:b2) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?? rdf:HTML  = 23.14.15 ,  xsd:hexBinary "string"  , ,  ]  :: { ottr:Triple(ex: ex::doubleColon ?U) } .
123 [ ottr:o-rdf:Template2 ?l7 , ] @@ ottr:IRI ?{T0 ) :: { cross |  ex:Template1 ( _:blank invalid |  ) }
http://invalid [ ] :: BASE .
ex:Invalid Space "string" @@ bad::IRI _:b1 :: {  } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  ( ++ ++ ( ( invalid term , ?A ,, ) ) )  ) :: { "S*GR*" } .
?var [ NEList<<LUB<xsd:short>>>xsd::doubleColon LUB owl:AnnotationProperty 123 ] :: { ottr:Triple(_:blank, foot:Triple, _:b2) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
://noScheme [  xsd:gYearMonth ?\Z , ++ ++ ?@8J = invalid ++ xsd:gMonth ] { o-rdf:Type(?v, :noType) , } .
owl:Type :: { o-rdf:Type(_:blank, "unclosed) , :noPrefix(?), "malformed"^^bad:datatype) ottr:Triple(_:blank <unclosedIRI "2023-01-01"^^xsd:date) ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix xsd:foot:clubHistory ?yJ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  owl:Type ( ++ "unclosed ,  ) ) :: { ?var }
ottr:IRI :: { ottr:Triple(?rd xsd:Footballer ?D) , } .
123 [ List<++ ++ NEList<xsd:unsignedLong>:noType ?3 = "unclosed> ?+ , "V" ] :: BASE .
bad::IRI [ ] :: { ottr:Triple(ex:, ex:Invalid Space, LUB) http://invalid(_:blank, "2023-01-01"^^xsd:date) , o-rdf:Type(?Um, ottr:Annotation) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [   ottr:IRI , ] {  } .
<unclosedIRI [ ?!!  = 123 @@ "string" ( ++ ++ ( ( , ) ) ) _:blank ) , @@ "string" List :: { ://noScheme(?/}6, 1..2) } ;
http://example.com/:Triple [  ] invalid : { cross |   ( "string" ^^ xsd:invalidType ,, ) } 
badPrefix:Template2 [ ++ badPrefix:string ?G , , ? xsd:dayTimeDuration "string"  , ?! xsd:duration , ] @ zipMax |  foot:Template1 ( (  ) invalid |  ) :: ( o-rdf:Type(?B, _:b2) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template1 [ ] :: { ottr:Triple("string" http://example.com/:Triple none) 
ex::doubleColon [ ++ "string"  , , ?? NEList<xsd:anyURI>  = 23.14.15 wrong xsd:negativeInteger ?(4 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [  @@ ?var ( "unclosed ) :: { <unclosedIRI(_:blank, bad::IRI) , } .
 xsd:invalidType @@  ex: (  ) ( :: { ://noScheme false ,, } .
http://invalid [ ?! :noType 123 , ] xsd::doubleColon :: { ottr:Triple(?C, :noPrefix, _:b1) , o-rdf:Type(?r`S_, ?J) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?HtVy, "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: { ottr: }
badPrefix:Invalid Space [ 123 ?MWG ] {  } .
ottr:Type [ ++ ++ xsd:integer , , ? xsd:int ]  :: { <unclosedIRI(?3j, "malformed"^^bad:datatype) ; } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Annotation [  ] ?var :: { :noPrefix(:noType, ?UV) , } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { "L*" } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ex:) , } .
123 [ ] :: { ottr:Triple(?!vF <unclosedIRI "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
  xsd:NCName  @@ http://invalid ( LUB ) :: { o-rdf:Type(_:blank, _:b2) ottr:Triple(?,, foot:Invalid Space, 23.14.15) } .
bad::IRI [ NEList<?var ?.>> ?_ , ] cross |  @@ "string" :Type ^^ xsd::doubleColon :: ( invalid |  ://noScheme ( ++ ( , ) zipMin |  ) ) .
ex:Invalid Space [ badPrefix:string @@ List : {  } .
o-rdf:Template2 ?!  = ?% , , ++ ++ List<<xsd:unsignedByte>>ottr: 123 = "malformed"^^bad:datatype , ?  "string"  :: BASE
://noScheme [ LUB<List<xsd:gYear>> ?/ ] bad::IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ List<<xsd:hexBinary>>xsd::doubleColon "string" = invalid^^type , ] { o-rdf:Type(_:blank, ?{_) ; } .
xsd:Template2 [ ] :: { ottr:Triple(_:blank <unclosedIRI "d*}k*") , ottr:Triple(_:blank, owl:Type, _:b1) ex::doubleColon(_:blank, "2023-01-01"^^xsd:date) , } .
123 invalid  :: { :noPrefix("string", "malformed"^^bad:datatype) } .
http://invalid [ ++ ++ badPrefix:string ?0 , ,  @ zipMin |  ex:Invalid Space ( ?var 1 ^^  ) :: {  } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  List :: BASE
ex: [ xsd:NMTOKEN "unclosed xsd:nonPositiveInteger 123 ,   123 = ?ql , , ?? xsd:unsignedShort  = "unclosed , none:ex: ?+ , ] :: { :noType }
ex:Annotation ; { badPrefix:Footballer ( ++ ++ (  ) ) , ++ ( "invalid"^^ex::doubleColon , ?2 )  ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" :: { ottr:Triple(?ZK, :noPrefix, "2023-01-01"^^xsd:date) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: BASE
ottr:IRI xsd:invalidType @@ ex:Invalid Space ( "malformed"^^bad:datatype ^^ invalid ++ invalid term wrong ) @@ ://noScheme _:blank ,, :: { zipMin |  ottr:Type ( ++ ++ ( "string" ,, ) ) } .
ex: [  ?F , ,   xsd::doubleColon ?4s , ]  :: { "d+" } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  http://invalid ( ( _:b1 ) ) ,  ) :: { o-rdf:Type(<unclosedIRI, 123) } .
 [ List<rdfs:Datatype>LUB 123 ] (: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ] badPrefix:string :: ( ottr:Triple(_:blank foot:Annotation ?kP) , ) .
o-rdf:Invalid Space cross |  xsd:long  , ++ xsd:nonPositiveInteger ? ?1'I = ?O?:nu62W bad:foaf:name ?H xsd:boolean "r*" , ?!! owl:ObjectProperty ?X = "value"^^invalid , ++ ++ xsd:float   ,  xsd:decimal  @@ :noType :: { (?7, ""}*oA*"") ) 
bad::IRI [ "string" ?e , , ! LUB<xsd:integer>badPrefix:string , List<List<( ( "unclosed ,, ) ,  ) )>> ?~. , @ ?var  ^^ List ,, :: { ottr:Triple("S", ex:, ?}6) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer [ ] :: BASE .
ottr:IRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  rdf:XMLLiteral "string" = 23.14.15  ] @@ ex:Invalid Space  , @@ <unclosedIRI (  ) :: { ottr:Triple(?; http://example.com/:Type 23.14.15) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme :noPrefix @@ invalid |  xsd:Invalid Space ( _:blank zipMax |  ) :: { ex::doubleColon(_:blank, 123) , } .
badPrefix:Template1 [ ++ ++ ?T\ = "malformed"^^bad:datatype ] xsd::doubleColon :: { o-rdf:Type(?3, none)  ottr:IRI ( _:blank ,  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?( ottr:Template2 "",+"") ( }
foot:Annotation ? xsd:gYearMonth 123 = "unclosed , zipMin |  @@ cross |  o-rdf:Triple ( ( , ) ) :: { xsd:invalidType } ;
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme  , @@ cross 123 (  ) :: { http://invalid(?j, ?var) , } .
o-rdf:Invalid Space [ owl:ObjectProperty ottr:  ] :: ( ottr:Triple(_:blank, ex::doubleColon, "malformed"^^bad:datatype) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ++ ++ List<xsd:negativeInteger>badPrefix:string ?8v? = "value"^^invalid ] @ ex: ( ++ ++ (  ) ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: {  } .
<unclosedIRI [ rdf:HTML 123 , ,  @@ zipMin |  "string" (  ) ( :: { ottr:Triple("unclosed foot:Annotation ?To{) } .
bad::IRI [ invalid ] { :noType } .
ottr:IRI [  xsd:gMonth ,  ?" , ]  :: { o-rdf:Type(_:blank, "unclosed) ,  ex: (  ) } ,
badPrefix:Template2 [ ] ; { ottr:Triple(?3i ex:Type none) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?@ foot:Invalid Space :noPrefix) , } .
:Footballer [ ++ ++ ottr:IRI "string" = "malformed"^^bad:datatype , ,  xsd:time ,  ] { ex::doubleColon  } .
"string" ottr:://noScheme ?uyA5' ,  :: { ottr:Triple(invalid, ex:Invalid Space, ?r7c[) } .
bad::IRI [   List<<xsd:byte>>ottr: ?2!J = invalid^^type "0*|N*" ] 123 :: {  } .
ex: [ cross |  rdf:XMLLiteral  @ wrong  ( (  ) )  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, abc) ) } .
<unclosedIRI [ ] :: { :noType 
?var [ ?! xsd:gYear ] invalid |  @@ ottr:IRI (  ) :: { bad::IRI(_:blank, "unclosed) , ex:Invalid Space(_:blank, "2023-01-01"^^xsd:date)  }
ex:Template2 [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ rdfs:Literal , ?!! ottr:Bot , ,  ] "G*D1*" :: { ex:(?t, ?j&) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ NEList<<LUB<owl:rational>>>invalid ?% , @@ :noPrefix ( 123 ) ^^ ottr: ,, ; :: {  } .
http://invalid [ ?? "string" =  "string" ] :: { ottr:Triple(<unclosedIRI, ex:Invalid Space, _:b2) ) } .
://noScheme xsd:positiveInteger  zipMin |  @@  ( ++ ++ ( invalid term ,, ) ) , "unclosed ) :: { xsd::doubleColon } .
bad::IRI :: { o-rdf:Type(_:blank, badPrefix:string) , ottr:Triple(?U ottr:Footballer "malformed"^^bad:datatype) } 
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  :Template1 (  ) , @@ invalid |  owl:Type ( "s" ) :: { ex::doubleColon(?P=, _:b1) , } (
foot:Invalid Space [ ?! LUB ?^~ ] {  badPrefix:Annotation ( _:blank wrong ) } .
ottr:IRI [ owl:rational 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ottr:Triple(_:blank badPrefix:Type false) , o-rdf:Type(?7l, ?H) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: BASE .
"string" List<:noPrefix> ?:W , ++ ++ NEList<<LUB<xsd:anyURI>>>xsd::doubleColon ?}d = invalid^^type "[*" @@ ottr: :: {  } )
http://invalid [ ottr:IRI "string" , ] invalid :: { bad::IRI(ex::doubleColon, xsd:invalidType) xsd:Footballer ( invalid term ,, ) ) ^^  } .
<unclosedIRI [ ] :: { ottr:Triple(?=Co, , "unclosed) , } .
ex: [ || xsd:integer 123 ] { ://noScheme(?e, 4+) ( } .
?var [  ] ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?h , , ?! xsd:duration ,  @@ invalid |  foot:Annotation ( :noType ) @@ ?var (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "<+" 
ex::doubleColon [ rdf:XMLLiteral List @@ ottr:IRI (  ) :: BASE .
http://example.com/:Template1 [ zipMin |  xsd:duration 123 , ,  ] { ex:(_:blank, _:b1) ,  } .
?var [ ?? ?B_  List<rdfs:Literal>  , "M" ] :: { 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ++ ++ owl:AnnotationProperty "string" = "value"^^invalid , ] :noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { ottr:Triple(LUB, ottr:Type, ?&) o-rdf:Type(?W, xsd:invalidType) , } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ http://invalid ++ ?iS3 , (  ) ) ^^ xsd::doubleColon ,, , @@ invalid |  "string" ( :noType ) :: { ottr:Triple(?s <unclosedIRI ""8*"") , } .
://noScheme ++ xsd:nonNegativeInteger 123  cross |  @@ zipMax |   (  ) :: {  ex:Invalid Space ( ++ ++ _:b2 ) } )
foot:Footballer :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?l?, ex:Invalid Space, 23.14.15) }
:noPrefix xsd:yearMonthDuration "string" "2" @@ cross "string" ( o-rdf:Triple zipMax |  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2 [  ottr: ?TU ] :: BASE .
ottr:IRI [ ?? 123 = "malformed"^^bad:datatype , @ ex: ( ++  , invalid term ^^ List ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] <unclosedIRI :: { http://invalid ++ ++ (  ) ) _:blank ,, } .
ex:Invalid Space :: { (_:blank, ?Qta) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid |  123 (  ) :: {  } .
?var [ ] :: { ottr:Triple("string", ex::doubleColon, _:b1) ) }
badPrefix:Type [ ? xsd:Name , , cross |  xsd:dateTimeStamp "string" ,  ] { ottr:Triple(_:blank ex:Footballer :noType) } .
ottr:IRI :: { 123 } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  @@ wrong ?var ( "unclosed ^^ xsd:invalidType _:blank zipMax |  ) @@ foot:Annotation ( "string" ,  ) ,, :: BASE .
:noPrefix [ ++ ++ xsd::doubleColon ?n/ , NEList<bad::IRI> ?k , ] "o" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space zipMin |  LUB<xsd:byte>List 123 @@   ( :noType ) , @@ <unclosedIRI ( ++ ++ ( 23.14.15 ) ) , ++ "string"^^^xsd:string ) :: { o-rdf:Type(ottr:, ?HGU) } .
http://invalid [ xsd:dateTimeStamp  , , LUB ] @@ cross |  "string" (  ) :: { ottr:Triple(_:blank, ://noScheme, "1+") ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ] :: { invalid |  ex: ( invalid ) } .
xsd:Template2 [ ?? xsd:anyURI  ] :: { ottr:Triple(_:blank <unclosedIRI _:b2) http://invalid(_:blank, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, none) , 
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?)D :: { ottr:Triple(?dYp,s8^, o-rdf:Invalid Space, _:b1) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  owl:ObjectProperty ,  ] ex: :: {  } .
badPrefix:Annotation [ NEList<owl:DatatypeProperty>:noType "string" , , "5*" ] { o-rdf:Type(?G, xsd::doubleColon) , } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ http://invalid ++ ++ "2023-01-01"^^xsd:date , _:blank :: BASE .
://noScheme [ ] :: { || <unclosedIRI ( ?f}1^R ,, ) } .
ex:Invalid Space [ NEList<ottr:> ?t ] :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(badPrefix:string o-rdf:Invalid Space "unclosed) } .
bad::IRI :: { ottr:Triple(_:blank, :noPrefix, ?>ryu) ( } .
ex::doubleColon [  zipMax |  @@  ( _:blank  ) !: { bad::IRI(?n, _:b1) , (_:blank, _:b2)  } ...
123 ? xsd:float  = invalid^^type ?! xsd:double 123  , @ invalid |  ?var (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string"  @@ cross |  ex:Invalid Space ( ++ ++ ( ?b ,, ) zipMin |  ) ; :: { ex::doubleColon(ex:Invalid Space, 23.14.15) , } .
ottr:IRI [ List<<owl:rational>> :noType @ ://noScheme _:blank ,, :: { o-rdf:Type(_:blank, 123) "unclosed }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ invalid |  xsd:integer 123 , , badPrefix:string ] :: { ottr:Triple(?<QMWo http://invalid ?UI) , } .
 [ ?! xsd:positiveInteger  = invalid^^type , ] LUB :: {  } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: BASE
?var [ ++ xsd:gYearMonth , ? "string"   ?8 , , ! rdfs:Datatype ,  ] { ex: ( ++ (  ) ) , _:b1 ) } .
xsd:Triple [ ] :: { ottr:Triple(?3, o-rdf:Annotation, "unclosed) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?!! xsd:token   ,  ] @@ invalid |  ?var (  ) , @@ ottr:IRI (  ) :: BASE .
http://example.com/:Triple [ LUB<owl:ObjectProperty> ?M ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ex::doubleColon [ ] :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , ottr:Triple(?S{, bad::IRI, ?6$}|"') } .
http://invalid [ xsd:unsignedInt :noType ottr: ] "O" :: { ex:Invalid Space(<unclosedIRI, "string") ) } .
ex: :: { :noPrefix ++ ( ( 123 ,, ) ) ,  ) _:blank , ++ ++ invalid term zipMin |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross 123 ( abc ^^ badPrefix:string ) :: { List }
badPrefix:Template2 [ ? xsd:duration , ,  @@ cross ex:Template1 ( ?. ) ?: { ottr:Triple(_:blank http://invalid "2023-01-01"^^xsd:date) ottr:Triple(_:blank, ex:Invalid Space, _:b1) , } ...
ex:Invalid Space xsd:boolean ?t= , @@ cross |  :Template1 ( "A*Vh*" ) @@  owl:Footballer ( "unclosed ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (_:blank, "string") , ottr:Triple(?cs ottr:Annotation "invalid"^^ex::doubleColon) ; } .
foot:Type [  ] { ottr:Triple(ottr:, ex:, ?F0) , } .
http://invalid [ ://noScheme ] "(" :: BASE .
ottr:IRI ?? List<<xsd:positiveInteger>>badPrefix:string @@ cross |  bad::IRI ( xsd::doubleColon ) , @@ :noPrefix ""i*58*"" zipMin |  :: { o-rdf:Type(?P, "unclosed) } .
ex:Invalid Space [ ] :: { invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI ( "string"^^^xsd:string ^^ :noType ,, ) } .
?var [ ++ ++ xsd:integer , ,  xsd:short , @@ invalid |  o-rdf:Template1 (  ) ( :: { ottr:Triple(?$C ex::doubleColon false)  } .
xsd:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
owl:Triple [ ?var ?L ?   ,  ]  :: { ex:(?K, _:b1) ) 
?var [ xsd:unsignedShort http://invalid , , LUB<List<LUB<<List<xsd:dateTimeStamp>>>>> ?LT ] :: { o-rdf:Type(_:blank, "string") xsd::doubleColon } .
ottr:IRI "unclosed @@ || ://noScheme (  ) ) :: { ottr:Triple(ex::doubleColon, xsd:Template1, 23.14.15) 
ex:Footballer [ xsd:<unclosedIRI ?B_ ,  ] badPrefix:string :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  (  ) , @@ ex:Invalid Space _:blank ++ ++ (  ) cross |  :: { ottr:Triple(?*' ex: ?^) , } .
:noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?? rdfs:Literal "string" = "value"^^invalid , @ invalid |  ottr:IRI (  ) :: { zipMin |  foot:Template2 ( invalid ) } .
o-rdf:Triple [ ] :: { (?t5A, _:b2) ,  }
owl:Type [ xsd:dayTimeDuration ?[ zipMax |  xsd:Name  ! ottr: 123 , ] { ex:Invalid Space(?m, abc.-4+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?:Yb, ottr:Invalid Space, _:b1) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { :noPrefix(?%, ?;d) , ottr:Triple(_:blank, ottr:Triple, :noType) , } .
123 [ ++ ++ ?W = "value"^^invalid , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://example.com/:Type ( _:blank ( ?var 1 ) , ++ ( none ,, ) ) ) , :: BASE .
ex:Invalid Space [ ?? xsd:unsignedLong  = 123 , xsd:byte ex: ] @@ zipMin |   (  ) , @@ ex::doubleColon  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: {  } .
bad::IRI ++ NEList<<LUB<rdfs:Resource>>>ottr: xsd:long ?x^ , @ wrong http://invalid ( "string" ^^ LUB ,, ) :: { "string" } .
?var [  ] :: {  ://noScheme ( ++ ++ -0+ zipMax |  ) } )
xsd:Annotation [  ] "&*(p*" :: { ottr:Triple(_:blank :noPrefix _:b2) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) 
badPrefix:Template2 List @@ invalid |  foot:Footballer ( xsd:invalidType ) :: { ex:Invalid Space(xsd::doubleColon, owl:Template1) ( } ..
ottr:IRI [ rdf:XMLLiteral 123 , cross |  xsd:dateTimeStamp "string" , @ <unclosedIRI ( ++ ++  (  ) ) ,, ) :: { o-rdf:Type(?var, ?|e) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Annotation   :: ( ottr:Triple(?< ex::doubleColon :noPrefix) , ) .
"string" :: BASE .
://noScheme [ ] :: { ex: "unclosed } .
ex:Invalid Space [ ++ ++ ?[6  ] xsd::doubleColon :: { ottr:Triple(_:blank, http://example.com/:Template2, "2023-01-01"^^xsd:date)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ? LUB<<List<xsd:yearMonthDuration>>>invalid ! xsd:unsignedByte  = 23.14.15 , ,  ] @@ ||  ( ( , ) ^^ xsd:invalidType , _:blank zipMax |  ) :: BASE
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?E, 1..2) , <unclosedIRI(?'~, ""l*"") , } )
123  LUB ?/ @@ invalid |  ottr:Type ( ++ ( owl:Triple ) ) @@ zipMin |  xsd:Template1 (  ) {: { badPrefix:string } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI ?!! LUB<xsd:hexBinary>  @@ || xsd:Template1 ( _:blank 123 ) :: { ottr:Triple(_:blank ex: ?\) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  ?var ( ( ""unclosed" , ( "string"^^^xsd:string ) ,, ) ) ^^ xsd::doubleColon zipMax |  ) :: BASE .
http://invalid [ "string" ?;f2z! , ] 123 :: { :noPrefix(?F/, ex:Invalid Space) , xsd:invalidType } .
ex::doubleColon [ ] :: {  } .
<unclosedIRI [ owl:AnnotationProperty "unclosed , ? ottr:IRI  = 23.14.15 , , invalid ] @@  (  ) @@ zipMin |  :noPrefix (  ) :: { ://noScheme  } .
o-rdf:Footballer [ List<xsd:long ?At> ?_^c ] :: { o-rdf:Type(badPrefix:string, 4+.abc) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?k, :Triple, _:b1) , }
foot:Template2 [ ++ ++ "string"  , ,   xsd:time  xsd:short 123 ] { o-rdf:Type(?[R), _:b2) } .
owl:Annotation :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?s, ottr:Template1, ?d:m) , :noPrefix(_:blank, "3") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ 123 ] {  } .
ex:Footballer :: BASE .
"string" [ ] :: { o-rdf:Type(LUB, none) , } .
ottr:IRI  @@  ex:Invalid Space (  ) :: { ex: ( ++ ++ ( invalid term , ""unclosed" ) ?9[ , ( 6+.abc ,, ) ) ^^ List ,, ) } .
ex::doubleColon [ ?! NEList<xsd:date>ottr: 123 = (  ) ]  :: { ottr:Triple(?S http://invalid _:b2) } .
<unclosedIRI [ ! xsd:yearMonthDuration ,  :: { bad::IRI(?j, _:b1) invalid } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] !: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Triple [ ++ ottr:IRI , ,  ] @@ zipMin |  ottr:IRI (  ) @@ ottr:IRI  :: { ottr:Triple(?2, o-rdf:Annotation, "2023-01-01"^^xsd:date) ( } )
xsd:Invalid Space [ ?var @@ bad::IRI ( , ) ^^ :noType  :: ( ottr:Triple("2*", foot:Type, List) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { wrong 123 ( ++ "invalid"^^ex:Invalid Space , "string" ) } .
:noPrefix [ ++ ++ LUB ?i , owl:Template1 , ( (  ) ) ) ,, ?C] , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
ex: :: { ottr:Triple(?BFer  ?() o-rdf:Type(_:blank, _:b1) , } .
ex::doubleColon [ List<<owl:Class>>   ] <unclosedIRI :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(?!, 23.14.15) , xsd::doubleColon } .
://noScheme [ "string" ?# , ] :: { ex::doubleColon(?M, invalid) 
badPrefix:Triple ?!! 123 = (   @ :Annotation ( ++ ++ _:b2 cross |  ) ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
?var [ ?! owl:real   ,  :: { ottr:Triple(_:blank, ex:Template2, "unclosed) ) } (
"string" ?!! "string"  , , ++ owl:DatatypeProperty 123 = 23.14.15  @@ ottr:IRI  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] @  ottr:Footballer ( ?@u ^^ invalid cross |  ) :: BASE
<unclosedIRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [   xsd:invalidType  @@ http://invalid ( ++ "string"^^^xsd:string , "unclosed ,, ) , @@ zipMin |  :noPrefix ( LUB ) :: {  } .
ex::doubleColon [ cross LUB<<List<ottr:Bot>>>:noType ?- , ] ?var :: { ottr:Triple(?l4 ex:Invalid Space "9") ) } .
123 [ xsd:dayTimeDuration List , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(_:blank, ?Q) , xsd::doubleColon } .
badPrefix:Template2 [ ] :: { o-rdf:Type("&*", 23.14.15) } .
o-rdf:Annotation [ ! xsd:NMTOKEN    ?] ] { zipMax |  xsd:Type (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?{, :Invalid Space, "malformed"^^bad:datatype) ottr:Triple(?i, ex:Triple, http://example.com/:Template1) , } ;
123 [ xsd:dateTime  , , ++ NEList<owl:Class>List ?U< = "value"^^invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { (_:blank, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ owl:DatatypeProperty "unclosed , ] {  } .
http://invalid [  zipMax |  @@ zipMin |  http://example.com/:Annotation ( ://noScheme ) :: BASE .
bad::IRI ++ ++ xsd:positiveInteger ,  @@ ex::doubleColon (  ) ( :: { ottr:Triple(?o} <unclosedIRI ?{) , :noPrefix  } .
?var [ List<LUB> ?OY ] @@ xsd::doubleColon :: { o-rdf:Type(invalid, "string") , } .
ex:Invalid Space [ "W+" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: ( ottr:Triple(?pD, badPrefix:Triple, ""a"") o-rdf:Type(?c, "malformed"^^bad:datatype) ) .
o-rdf:Invalid Space :: { badPrefix:string } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?~, none) ; }
?var [ ] :: ( foot:Triple ( "invalid"^^http://invalid ^^ :noType invalid |  ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI cross |  NEList<<LUB<xsd:float>>>badPrefix:string ?(6 , @@ || bad::IRI ( _:blank ,, ) :: BASE .
ex::doubleColon [ ?!! xsd:dateTime   ,   xsd:duration 123 = "value"^^invalid ?! xsd:NMTOKEN , ,  ] invalid :: {  } .
://noScheme :: { ottr:Triple(?7, xsd:Annotation, true) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex: "string") , } .
:noPrefix [ 123 ?amKy ] @@ ex:Template1 ( ?P< :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ <unclosedIRI  :: { ("1*dF*", ?[&u) ( 
ex:Template1 [ t-pnd:Punned-Class-ObjectProperty xsd::doubleColon ] { ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?8, "unclosed) o-rdf:Type(??T;, _:b1) , ottr:Triple(?p owl:Footballer 23.14.15) ) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 
:Triple [  ] :: BASE .
"string" [ "}" @@ LUB :: { ottr:Triple(_:blank, , :noPrefix) } .
ottr:IRI [ ] :: { ottr:Triple(?QK ex:Template1 ?5) ) } .
ex:Invalid Space :: { o-rdf:Type(badPrefix:string, ""_*!L*"") , ://noScheme(?@, 23.14.15) cross bad::IRI ( ++ ++ "string"^^^xsd:string ) } .
ex::doubleColon [ ++ ++ xsd:invalidType 123 , ] { <unclosedIRI(?)I], invalid) , } .
http://invalid [ foot:foot:clubHistory ?F{  xsd:gYear "string" = "value"^^invalid ]  :: {  }
?var ? xsd:Name ?U  , , ?! rdfs:Datatype ,  @@ http://invalid ( _:blank  ) , @@ ex:  ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
bad::IRI "string" @@ :Invalid Space ( ex:Invalid Space ) , :: { ottr:Triple(?e9 owl:Type LUB) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ?? NEList<<LUB<xsd:gYearMonth>>>:noType ?N = "value"^^invalid , @@ "unclosed :: BASE .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:IRI ?var 1 ^^ xsd::doubleColon  } .
 [ foot:string ?QgbwI ] ex::doubleColon :: { ottr:Triple(invalid, ex:, foot:Footballer) , } .
http://invalid :: { <unclosedIRI(_:blank, ?LZKz))  } .
://noScheme [ cross |  owl:DatatypeProperty  , ,  ] @@  123 ( _:blank ,, ) :: { o-rdf:Type(?F, "malformed"^^bad:datatype) ) 
http://example.com/:Annotation [ ] :: { (?Ur, none) ,  }
o-rdf:Template2 [ ?!! xsd:invalidType "string" , ? xsd:nonPositiveInteger 123 = invalid^^type  ] { :noPrefix(?., "unclosed) ( } .
?var [ ++ List<<xsd:int>>List ?~ =  , , ?? badPrefix:string "string" 123 ] { "unclosed } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ zipMax |  xsd:unsignedShort 123 ,  @@ ottr:IRI ++ ++ ( ?var 1 ,, ) ) _:blank cross |  :: {  } .
http://example.com/:Annotation   ?en = "malformed"^^bad:datatype @ ex::doubleColon ( ?IF ,, ) :: BASE .
ex:Invalid Space [ List<List<>> ?U , ] zipMin |  @@ invalid |  ://noScheme (  ) :: { ottr:Triple(_:blank ex: "unclosed) ottr:Triple(?`, , ?y?) , } .
<unclosedIRI [ ] :: { bad::IRI(:noPrefix, :noType) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { o-rdf:Type(?V, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?_v, ex:Footballer, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
owl:Template1 :: {  ottr:Invalid Space ( ++ _:b2 ,  ) 
xsd:Template2 [ xsd:gYearMonth "(*Df*" , ] .: { ottr:Triple(?5S foot:Type "2023-01-01"^^xsd:date) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  xsd:nonPositiveInteger , NEList<<LUB<rdf:XMLLiteral>>>badPrefix:string  ? owl:rational , ,  @@ "string"  , @@ zipMin |  ex::doubleColon ( (  )  ) :: { "0*" } .
o-rdf:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ex:Invalid Space(123, bad::IRI) , } .
http://invalid [  ] :: BASE .
 :: { o-rdf:Type(_:blank, ?8) } .
<unclosedIRI [ ++ ++ xsd::doubleColon ?7C , ] :noType :: { ottr:Triple(?tj :Template2 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ( List ) } .
ex: [ ] :: {  } .
?var [  ]  :: { ottr:Triple(_:blank, ex::doubleColon, "2023-01-01"^^xsd:date) , :noPrefix(_:blank, "unclosed)  }
badPrefix:Triple ?!! xsd:gMonth 123 = "string" @@ cross ex:Template1 ( ++ ++ ottr:Type , ++ ( ?i , invalid term ) ) ,, ) :: BASE
ottr:IRI [ LUB<<List<xsd:gYearMonth>>>List xsd:invalidType , ] zipMin |  @@ ex::doubleColon ( ++ (  ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("H" foot:Template2 badPrefix:Triple) }
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 } .
ex:Invalid Space [ "string" ?3a  :: { owl:Annotation ?P cross |  } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: invalid @@ cross :noPrefix ( _:blank ++ ++ ( "string"^^^xsd:string ,, ) ) ,  ) ; :: { <unclosedIRI(_:blank, http://invalid) , ottr:Triple(?V, ://noScheme, ?5vQ) ) } .
bad::IRI [ ?? xsd:language , , ++ LUB 123 , ?! "string" = "value"^^invalid  ] xsd::doubleColon :: {  
o-rdf:Template1 [ xsd:long "string" ! xsd:gDay  = "unclosed , ,  ] { o-rdf:Type(_:blank, none) , } .
xsd:Invalid Space :: ( o-rdf:Type(?u, ""$+"") <unclosedIRI(?{, _:b1) ( ) .
"string" [ xsd:integer http://invalid ++ ++ 123  , ] @@ ex: ?w ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , "**" } .
ottr:IRI [  ] ?var :: { :Annotation (  ) } ,
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI ( , ) ^^ ottr: ,, @@ cross |  ex::doubleColon ( ++ "invalid"^^ ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { ottr:Triple(?mk_ http://example.com/:Invalid Space ?6e)  } .
:noPrefix :: { ottr:Triple(:noType, bad::IRI, List) , } .
123 invalid invalid |  @@ zipMax |  123 ( ++ ++ ( ?Fr>58 ,, ) xsd::doubleColon ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
ottr:Template2 [ ? LUB<<List<owl:AnnotationProperty>>>xsd:invalidType "string" = "unclosed , ,   xsd:short ?i = "3+" , xsd:anyURI  ] :: { ex:Invalid Space(?-, _:b2) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Template1 [ foot:invalid ?o ] @ zipMin |  xsd:Triple ( (  ) ) || ) :: { <unclosedIRI(?z72, abc) }
"string" [   LUB 123 NEList<<LUB<xsd:string>>>ottr: ?w._b , , xsd:://noScheme ?mA ,   :: { ottr:Triple(123, xsd:Annotation, badPrefix:string) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Invalid Space [ ] :: { "unclosed } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space [ xsd:language xsd::doubleColon ] bad::IRI :: { ottr:Triple(?[ ex: abc.-2+) ( } .
ex::doubleColon [  ] @@ cross |  http://invalid ( (  ,, ) ^^ :noType  ) :: { o-rdf:Type(_:blank, ?c) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var ?!! xsd:NCName "string" = invalid^^type , @@ <unclosedIRI ++ ++ _:b1 , "R*" , :: ( :noPrefix ( _:blank ,, ) ) .
:Type ?! xsd:anyURI 123  , @@ || ottr:Footballer ( _:blank ) :: { ://noScheme(?x, none) , ottr:Triple(?f8, http://invalid, _:b2) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] "T*" :: {  } .
ottr:IRI [ LUB<List<NEList<xsd:dateTime>ottr:>> ?g ,  @@ ex:Invalid Space  , @@ ?var ( _:blank zipMax |  ) :: BASE .
ex::doubleColon [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |   ( ++ ++ ?:\ ) } .
://noScheme wrong xsd:time "string" @@ cross ex:Invalid Space (  ) :: { 123 } .
ex: [ <unclosedIRI ] :: { http://invalid(_:blank, badPrefix:string) , ottr:Triple(LUB o-rdf:Template1 "malformed"^^bad:datatype) , } .
"string" :: ( o-rdf:Type(?M(, ?#18jyO) ) .
<unclosedIRI [  List  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ zipMin |  foot:Type ( ( , ) ^^ xsd::doubleColon ,, ) :: { ottr:Triple(?RuF, :noPrefix, "unclosed) ( 
owl:Annotation "string" ?{?V ,  :: { ottr:Triple(_:blank, badPrefix:Footballer, "2023-01-01"^^xsd:date) ottr:Triple(_:blank, ://noScheme, 23.14.15) , } ;
ex:Invalid Space [  ] @@ cross |  "string" ( ++ ++ ?+% ,  ) :: { LUB } .
badPrefix:Invalid Space [ rdf:HTML 123 , , ++ owl:ObjectProperty , ?!!   zipMax |  @@ ottr:IRI (  ) :: BASE .
<unclosedIRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon NEList<xsd:gYear>badPrefix:string "string" , @@ http://invalid ?var 1 ,, @@  ://noScheme ( :noPrefix ) :: { ex:("C*a-*", 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank bad::IRI ?)) , } .
 [ "i*" ] xsd::doubleColon :: { ottr:Triple(?J$0FHWy[, :Footballer, xsd:invalidType) , cross ?var ( ( ( "invalid"^^:noPrefix ,  ) ) ) ^^ :noType ++ invalid ) } .
http://example.com/:Template1 [ ++ ++  = 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ottr:Triple [ ] :: { o-rdf:Type(?Qw, _:b2) ottr:Triple(?Gh o-rdf:Type "2023-01-01"^^xsd:date) } (
foot:Annotation List<List<List<"*">>> ?6 , , || xsd:time ?D @@ invalid |  owl:Template2 ( _:blank zipMin |  ) , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
bad::IRI :: (  ) .
123 [ owl:NamedIndividual 123 , ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation ? xsd::doubleColon ?G , , ++ ++ "string" =  "string" @ ottr:IRI ++ "string"^^^xsd:string :: BASE .
<unclosedIRI [ foot:owl:Triple ?% , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ottr: :: { ex:(?_J`, ?v) } .
ex:Invalid Space [  ] "unclosed :: { o-rdf:Type(LUB, badPrefix:string) ottr:Triple(_:blank, :noPrefix, 1..2) , ottr:Triple(?Ue~b ex:Footballer "malformed"^^bad:datatype) ) } .
://noScheme [ invalid |  NEList<<LUB<xsd:token>>>List ?$ ] { http://invalid ( "2023-01-01"^^xsd:date , ++ ++ ( ?QO , (  ) ) ,, ) ,, ) } .
ex::doubleColon [  List<xsd:dateTime> ?0 ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { ottr:Triple(?sZ, ottr:Template2, abc) , } ..
?var [ ] :: { ://noScheme(?1LBo,C, ""l*k\*"") ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex: } .
?var [   owl:DatatypeProperty , ++ LUB<<List<xsd:nonNegativeInteger>>> ?+e = 23.14.15 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid cross xsd:gYearMonth 123 , @ zipMin |  ottr:IRI ( ++ ( invalid term , "string" ,, ) invalid |  ) :: ( ottr:Triple(?/, <unclosedIRI, 123) ) .
foot:Template1 [ ] :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , :noPrefix(List, ??) , } .
 [ List<foot:boolean ?=zm> ?Z xsd:gMonth  ] @@ ://noScheme (  ) :: { ottr:Triple("**Mb*" ottr:Invalid Space none) ) } .
bad::IRI [  @@ cross ex:Template1 ( ?% ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: { ex::doubleColon LUB } ,
"string" [ xsd::doubleColon ] xsd:invalidType :: BASE
:Type ?? ?Kh = ( "y*" ,, ) , @@ invalid : {  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Annotation [ ] : { o-rdf:Type(_:blank, false) , ottr:Triple(?var bad::IRI ?/) } 
ottr:IRI [ cross |  LUB<<List<xsd:dateTimeStamp>>>badPrefix:string  , ] xsd::doubleColon :: BASE .
"string" :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Invalid Space ( "j+" ) :: { :noPrefix(?C'F, <unclosedIRI) , } .
 ?!! owl:real "string" = "malformed"^^bad:datatype @@ ex::doubleColon  , @@ ://noScheme (  ) :: { ottr:Triple(?&, http://example.com/:Invalid Space, _:b2) ; } .
http://invalid [   ?~ = none , LUB ] :: ( ottr: ) .
123 [   :: { ottr:Triple(?1 :Template2 "unclosed) zipMax |  xsd:Triple ( ++ ""6*"" , ( ?var 1 , 123 ,, ) ) ) } (
ex:Footballer ! xsd:positiveInteger  invalid |  @@ zipMin |  http://invalid (  ) :: { ottr:Triple(?n, foot:Template1, "2023-01-01"^^xsd:date) , }
ottr:IRI [ ex::doubleColon ] ""+" :: BASE .
xsd:Annotation [ ?! xsd:double , ] @@ ex: ( List ) , @@ ex:Invalid Space ++ ++ ( -1+.8+ ) ) :: { zipMin |  "string" ( ?var 1 ^^ invalid ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(123  ottr:) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { ://noScheme(?{, none) , ottr:Triple(_:blank, http://example.com/:Invalid Space, ?Bz)  } .
bad::IRI [ ?var ?8FSlGU ,  ] :: { o-rdf:Type(?ot9;, abc) } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName cross |  @@ invalid |  :noPrefix ( ++ ?) cross ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1 [ ++ ++ "string"  , , ?? xsd:yearMonthDuration  @@ zipMax |  ex::doubleColon (  ) ( : { LUB } ...
badPrefix:Template2 [   badPrefix:string  ] { ottr:Triple(?R owl:Type _:b1) , } .
ottr:Footballer [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid } (
ottr:IRI [ invalid |  xsd:dateTime ?l ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ badPrefix:Type ( "string" ) :: { ex:Invalid Space("r+", owl:Footballer) zipMin |  123 ( _:blank ) } .
://noScheme [ ottr: ] ex::doubleColon :: { ottr:Triple(?A! ottr:Triple ) , } .
ex: [ NEList<xsd:decimal>:noType "string"     , ] :: { o-rdf:Type(_:blank, ?c~,) } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid ; { ottr:Triple(?*, bad::IRI, _:b2) ; } ...
?var [ ?! owl:NamedIndividual 123 = "malformed"^^bad:datatype , ++ ++ xsd:float , ,  ] { <unclosedIRI(_:blank, "unclosed) ,  } .
o-rdf:Template2 [ xsd:short List , , List<"m*"> ?NnM , @@ :Invalid Space ( "unclosed ) , @@ cross ex:Annotation ( ( ?3 ) ^^ LUB ++ ++ ?var 1 cross |  ) :: ( http://example.com/:Template1  ) .
ottr:IRI [ ottr:IRI  ] ://noScheme :: { <unclosedIRI(123, ?Q7) } .
o-rdf:Type [ zipMax |  List<<xsd:integer>>ottr: ?{P ,  ] @ ?var ( ++ ?var 1 ,, ) :: BASE .
http://invalid [ "e" ] :: ( ottr:Triple(_:blank ex: _:b1) , o-rdf:Type(?,.B, List) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ++ "string" = 23.14.15 , , xsd:unsignedShort xsd::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ LUB :: { xsd:invalidType } .
ex:Invalid Space [ ] :: { ottr:Triple(?nYD"[, foot:Triple, http://example.com/:Footballer)  } .
:noPrefix [ ? owl:real , @@ zipMin |  123 ( ++ ++ 123 ( (  ) ) , abc.8+ ) ) , @@ "string" invalid ^^ :noType ,  :: { cross |   ( _:blank wrong ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Invalid Space [ ! badPrefix:string ?JA   rdfs:Datatype ?$)'j}= = ?_5 , ]  :: { ottr:Triple(?O, ottr:Template2, _:b2) ) } (
ottr:IRI [ ?! NEList<<LUB<xsd:long>>>badPrefix:string "string" = "value"^^invalid , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Triple [  ?M ++ ++ xsd:yearMonthDuration ] @@ ://noScheme  @@ "string" (  ) :: BASE .
<unclosedIRI [ ex::doubleColon @@ || ex:Invalid Space ( ( ?,< ) ) ^^  _:blank zipMin |  ) ; :: BASE
:noPrefix [ ] :: { ottr:Triple(_:blank, , ?J) , } .
http://invalid :: { ottr:Triple("I+" xsd:Annotation invalid) ,  } .
123 cross |  xsd:NMTOKEN  ,  @ invalid |  bad::IRI ( ?var ) :: { xsd::doubleColon } .
ex:Invalid Space [ ++ ottr:IRI , ,  ] ottr: :: { ex:(_:blank, none)  ?var (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?t, :noType) ) .
badPrefix:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ zipMax |  ?var ( _:blank ,  ) :: { ottr:Triple(?o, foot:Invalid Space, 23.14.15) , } .
ottr:IRI :: { :Template1 ++ ++ 123 ,, } ...
://noScheme [ ++ xsd:invalidType ?@d , @@ 123 (  ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: { ex:Invalid Space(?var, ?_) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank owl:Invalid Space "unclosed) , o-rdf:Type(?`T, ex::doubleColon) "m*&^*" } .
 LUB zipMin |  @@ cross |  bad::IRI ( _:blank "invalid"^^:noPrefix ^^ xsd::doubleColon ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ LUB<xsd:NMTOKEN>badPrefix:string ottr: , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ cross "string" ( "3+" ) :: { ottr:Triple(?:V, <unclosedIRI, -7+.abc) ; } .
foot:Type [  ] {  } .
ex:Annotation [ xsd:hexBinary  , LUB<List<xsd:NCName>> ?; ] invalid :: { <unclosedIRI(?z, 8+) }
ottr:Footballer [ ? xsd:dayTimeDuration "string" = ( _:b1 ,  ) ?!! xsd:gDay   123  , ,  ] :: BASE
?var [ ] :: { ottr:Triple(?7, ex:Invalid Space, ?3X) , } .
http://example.com/:Triple [ LUB<xsd:normalizedString>xsd::doubleColon ottr: ] "%*&^*" :: BASE .
ex: [  ] @@ ex::doubleColon 123 , @@ zipMin |  ottr:IRI ( "string" ^^ List , ++ ++ "string"^^^xsd:string || ) +: {  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid ! xsd:float 123   zipMax |  @@   (  ) :: { bad::IRI ( ++ ( none ,  ) ,, ) } .
://noScheme [ ( "2023-01-01"^^xsd:date ) ) ,, ?f< , @@ :noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ :noType ] :: { ottr:Triple(_:blank foot:Footballer "unclosed) } .
"string" [ xsd:gYearMonth ?,Lh , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ://noScheme("unclosed, invalid)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?E:Z, 23.14.15) ; 
o-rdf:Template2 :: { ottr:Triple(?StVW"o, :Template1, 1..2) , ottr:Triple(?c, ex:Annotation, _:b1) ) }
:Triple :: { invalid |  <unclosedIRI ( ++ ++ ( ?var 1 ) , ++ -5+ || ) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  ] @@ ottr:IRI _:b1 ^^ ottr: _:blank , @@ ex:Invalid Space ( ( ?R4 ,  ) ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [   List<<owl:NamedIndividual>>invalid 123 = "malformed"^^bad:datatype , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(://noScheme, ""unclosed") ; } .
bad::IRI   :: { :noPrefix(_:blank, "unclosed) ottr:Triple(_:blank, ex::doubleColon, none) ,  } .
 [ ?var ] xsd:invalidType :: { ottr:Triple(?` owl:Template2 ?^) } .
http://invalid [  LUB  @@ zipMax |  foot:Annotation (  ) @@  "string" ( "a*" ) :: BASE
http://example.com/:Template1 [ ] ; { List } ..
xsd:Invalid Space [ ?? owl:real , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?cUN, ex:Invalid Space, ) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ? owl:AnnotationProperty ?7b = "unclosed , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
ottr:IRI [ NEList<<LUB<owl:DatatypeProperty>>>xsd::doubleColon ?var , ] bad::IRI .: { http://example.com/:Template2 _:blank , ++ ++ 23.14.15 } ..
<unclosedIRI [ ] :: { ottr:Triple(?g :Footballer ""6"") ( } .
http://invalid :: { ottr:Triple(xsd:invalidType, :noPrefix, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  ?k ] :: { ex:(_:blank, ?\A) , LUB } .
ex::doubleColon [  @  ://noScheme (  ^^ List ++ ( ( , ) ) ) cross ) :: (  ) .
 ?!! xsd:gDay badPrefix:string @@ "string" ( invalid ) :: { o-rdf:Type(?x, "2023-01-01"^^xsd:date) , } ,
xsd:Annotation [ ?! t-pnd:Punned-Class-ObjectProperty , ,  ] zipMin |  @@ ex::doubleColon (  ) :: { o-rdf:Type(_:blank, _:b1) o-rdf:Type(_:blank, _:b2) ) 
:Triple  ottr: ?f , @@ ?var ( ( _:b2 ,, ) ) ^^ invalid ,, ) @@ cross ottr:IRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
:noPrefix [ ++ ++ NEList<<LUB<rdfs:Literal>>>List  :: { ottr:Triple(<unclosedIRI, ex:Invalid Space, ?B{) ; } .
ex::doubleColon [ ] :: { "u*v)*" } .
 [ t-pnd:Punned-Class-ObjectProperty "string" ,  ] :: { o-rdf:Type(_:blank, 1+)  } .
://noScheme [  ] @@ ex: xsd::doubleColon ) :: { ottr:Triple(?3V/p* badPrefix:Template2 xsd:invalidType) , bad::IRI(?", xsd:Template1) , } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "<*" :: ( ottr:Triple(?Oc, o-rdf:Footballer, "2023-01-01"^^xsd:date) ) .
foot:Annotation [ ?!! xsd:language , , ++ xsd:short ?? xsd:time ,  ] {  http://example.com/:Invalid Space (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?t, "invalid"^^bad::IRI) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple [ List<! List<<xsd:time>>xsd::doubleColon "string" = "malformed"^^bad:datatype> ?M zipMin |  @@ invalid |  123 ( (  ) ,  ) :: BASE .
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] :: { ottr:Triple(_:blank, :noPrefix, -6+) , o-rdf:Type(?7B, ?"FWJk4gL[) } .
ex::doubleColon [ ] :: { ottr:Triple("(*T5*" o-rdf:Template1 ://noScheme) , } .
ex:Invalid Space [ "string" ] @@  _:blank ,, ( :: {  } .
bad::IRI [ xsd:date ?m , ] xsd:invalidType :: { http://invalid ( ++ 123 zipMax |  ) } .
<unclosedIRI ?var ?CG cross |  ottr:IRI  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 (  ) @@  ex:Invalid Space (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?hnO, ""unclosed") ; } )
ottr:Type [ ?!! owl:ObjectProperty , ,  ] @@ ottr:IRI  , @@ ?var (  ) :: { ottr:Triple(?} ex:Invalid Space 23.14.15) List }
?var [ invalid |  ottr:Bot 123 ? xsd:positiveInteger ] zipMin |  @@ zipMax |  ottr:IRI ( _:blank cross |  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ "`+" ] "string" :: { o-rdf:Template2 ( ++ ( , ) ) } ,
ex:Invalid Space [ ] :: { ottr:Triple(_:blank, <unclosedIRI, ?-B) ; } .
 LUB<<List<xsd:base64Binary>>>xsd::doubleColon ex::doubleColon , ?! ?93 = "unclosed , @@ :noPrefix  :: { xsd:invalidType } .
http://invalid [ xsd:NCName "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(List, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  @@  ://noScheme ( _:blank  ) ( <: { ex:(_:blank, ) ottr:Triple(_:blank ottr:Type "unclosed) ,  } ..
owl:Footballer :: ( o-rdf:Type(?2, 4+) ) .
ex:Template1 [   badPrefix:string "string" , ,  xsd:long  = invalid^^type ] {  } .
ottr:IRI [ :noPrefix ] ")+" :: { ottr:Triple(LUB foot:Template1 ?var) , } .
"string" [ cross |  owl:Class  ] :: BASE .
http://invalid [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space :: { <unclosedIRI(?Sf#, ?l) ottr:Triple(_:blank, ex:, none) , } .
ex:Invalid Space foot:foaf:name ?5G , @@ xsd::doubleColon :: { o-rdf:Type(?U, xsd:Annotation) , List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme [ ?? ottr:IRI 123 = "malformed"^^bad:datatype  ] @@ ex::doubleColon (  ) , @@ invalid |  123 (  ) :: { bad::IRI ( (  ) ) ) zipMax |  
 [ ! ?K\0 = "string" , , ? :noType ?tP , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Type [  ?j , @ zipMin |  ottr:IRI (  ) ; { ottr:Triple(?? ex:Triple _:b2) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ex::doubleColon (  ) , :: { ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Type [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:IRI [ invalid |  xsd:duration 123 ] invalid :: { ottr:Triple(_:blank badPrefix:Triple 23.14.15) o-rdf:Type(_:blank, none) } .
http://invalid [ NEList<<LUB<xsd:language>>>xsd:invalidType ?: , ] :: { ://noScheme "unclosed } .
ex:Invalid Space  @@ bad::IRI ( ++ ++ "string" 6+ , ++ ( (  ) ) ,, ) ,, ) :: { :noPrefix(?Ex, ?(7n) , 
123 [  xsd:unsignedLong  = 23.14.15 , ,  @@ zipMax |  ?var (  ) , @@ zipMin |  <unclosedIRI ( _:blank cross |  ) : {  } 
 :: BASE
http://example.com/:Template2 [ ! 123  , ://noScheme ] @@  xsd:Footballer (  ) @@  "string" (  ) :: { "string" } (
:Footballer [ ""*" ] :: { ottr:Triple(?-l, bad::IRI, "2023-01-01"^^xsd:date) } .
ottr:IRI [ cross NEList<xsd:date>ottr: ?; List<List<List<123>>> ?h[% , ] badPrefix:string :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ "string" ?@Q , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: {  ?var (  ) } .
ex::doubleColon [ xsd:integer "string" ] @@ || ://noScheme ( ++ "string"^^^xsd:string invalid |  ) :: { ex:Invalid Space } .
http://invalid :: { (xsd:invalidType, ?*$) ; } .
ex: [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix  @ foot:Template2 _:blank xsd::doubleColon :: { o-rdf:Type(_:blank, ) , }
ex:Invalid Space ! owl:AnnotationProperty ,  @@ "string" (  ) :: ( ottr:Triple(_:blank http://example.com/:Triple none) o-rdf:Type(_:blank, "unclosed) ,  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix [  @@ ottr:IRI (  ) @@ ?var _:blank  :: { ottr:Triple(_:blank http://example.com/:Triple none)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space || xsd:byte  , ++ ++ xsd:gDay "string"  , @@ ex::doubleColon (  ) , @@ bad::IRI  :: { o-rdf:Type("string", _:b1) , } ;
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?~, ?m1JKHX) } .
ex: :: { cross |  http://invalid ( ?SFi9# ,, ) } .
://noScheme [ ] :: { ottr:Triple("a", <unclosedIRI, invalid) , } .
123 [ ? LUB<<List<xsd:base64Binary>>>xsd:invalidType ] @@  o-rdf:Template1 (  ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Footballer [ xsd::doubleColon ] LUB :: { ottr: } ...
foot:Template2 [   :: { ottr:Triple(_:blank ex::doubleColon "2023-01-01"^^xsd:date) , ottr:Triple(_:blank, ex:, _:b2) ( }
:Footballer [ "unclosed ] @@ xsd::doubleColon :: { ottr:Triple(_:blank badPrefix:Template2 ?-) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?? List ?+Y< , , 123 ?_y^ ] <unclosedIRI :: BASE .
?var  invalid |  @@ ex::doubleColon ++ (  ) _:blank  :: { ottr:Triple(?P, , "string") ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(:noType, -0+) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ( LUB ) ; :: {  } .
bad::IRI :: { cross |  :noPrefix ( ( , ) ^^ badPrefix:string ,, ) } .
://noScheme [ ?!  = "string" , zipMin |  List<xsd:gYearMonth> 123 , ] { ex:(?F, "malformed"^^bad:datatype) , } .
ottr:Invalid Space [ NEList<xsd:token ?x=|3K&74jtR> ?HC?lihS  xsd:language ?eD = 23.14.15 , ] :: ( "n+" ) .
xsd:Template1 [ ] :: BASE
ottr:IRI [  :noType  ex::doubleColon ] :: { "V*/q*" } ...
ottr:Template2 :: BASE .
123 [ xsd:base64Binary ?BdS , ] @@ <unclosedIRI  @@ ex: (  ) :: { ex:Invalid Space(?-, ?cK,")  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(, foot:Template1, "string") , } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?? xsd:nonNegativeInteger "string" = invalid^^type , , ?var ?WA ] xsd:invalidType :: { o-rdf:Type(_:blank, "unclosed) , ottr:Triple(?{ ://noScheme none) } .
http://invalid  @@ zipMax |  bad::IRI ( 123 ^^ badPrefix:string || ) ( :: BASE
o-rdf:Footballer [ ] :: { cross |  xsd:Invalid Space ( _:blank , ++ ?var 1 ) 
://noScheme ++ xsd:integer ,  @@ zipMin |  ?var (  ) , @@ ?var (  ) :: ( ottr:Triple(_:blank :Triple 23.14.15) ) ) .
"string" [ "n*;,*"  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template2 [ xsd:unsignedShort ex: , ] :: { ottr:Triple(?var, ottr:Invalid Space, List) } .
ottr:IRI [  ] @@ ex:Invalid Space  :: { ottr:Triple(?i? :noPrefix ?:) ) 
 [ ] :: { o-rdf:Type(?[DF, badPrefix:Type) <unclosedIRI(_:blank, "2023-01-01"^^xsd:date) , } .
://noScheme :: { http://invalid(?8Z7, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI 123 ?A , , ? xsd:short 123   @ zipMin |  ex::doubleColon ( _:blank  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { owl:Annotation ( ++ ++ invalid term ,, ) } .
ex:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { invalid } ;
xsd:Triple [ zipMax |  xsd:gDay  ,   ottr: "string"  @@ cross |  ex:Invalid Space (  ) :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI owl:rational ?var , @@ ex:Template1 ( ?{* ; {  } 
ex:Invalid Space [ ?!! invalid "string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Invalid Space ( ://noScheme ) ; :: { "-+" } .
123 [ ] :: BASE .
ex::doubleColon :: { o-rdf:Type(:noType, ?U) ottr:Triple(_:blank, , ottr:) } .
http://invalid [  ] xsd:invalidType :: { ottr:Triple(?l badPrefix:Footballer http://example.com/:Annotation) ) } .
:noPrefix [ List ] :: { invalid |  ex: ( ( "2023-01-01"^^xsd:date ,, ) ^^ xsd::doubleColon ,, ) } .
<unclosedIRI [  ?V , ,  zipMin |  @@ "string" _:blank _:blank  :: ( bad::IRI(?w, _:b1) , ottr:Triple(?7t@ ex:Invalid Space "invalid"^^) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:Template2 ++ ++ xsd:dayTimeDuration 123 = "value"^^invalid , ! NEList<xsd:short> ?! = "unclosed  :: { ottr:Triple(?s/ xsd:Triple "unclosed) ( }
 ~: { ottr:Triple("Q*" ex:Invalid Space ?P<) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ xsd:anyURI ?0k% , , bad::IRI ] "string" :: { :Footballer ++ ++ ( none ,  ,, ) ) } .
ottr:IRI [ ] :: BASE .
http://invalid [ List<ottr:> ?r , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: {  } .
ex::doubleColon [  ] :: {  } .
:noPrefix [ ?var ?f ! LUB<<List<owl:AnnotationProperty>>>:noType 123 = 23.14.15 , ] @@ ex:Invalid Space ( invalid ) :: { o-rdf:Type(?'Vc, _:b2) } .
<unclosedIRI [   LUB "string" ] { ottr:Triple(?h, ex:, "-") , ://noScheme(_:blank, ""unclosed") , } .
badPrefix:Annotation ?? xsd:normalizedString ++ ?J = "unclosed , zipMax |  @@ foot:Template1 ( ( "string"^^^xsd:string ) List ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(?m`^?, owl:Type) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ? xsd:duration ?m = 123 , ] :: { LUB } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: ( ottr:Triple(_:blank, bad::IRI, ?v}) , ://noScheme(<unclosedIRI, 23.14.15) , ) .
http://invalid ottr:foot:clubHistory ?Rg , ,  @@ ex:Annotation (  ) @@  ++ ++ invalid term , "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ List<xsd:int>:noType  ] @@ ex::doubleColon ?_ ) :: { o-rdf:Type(?/kB, "Z") } .
ex:Invalid Space :: {  } .
ex: [ xsd:nonNegativeInteger List , badPrefix:string @@ zipMax |  123 (  ) [: { o-rdf:Type(_:blank, "unclosed) ottr:Triple(_:blank bad::IRI _:b1) , } 
foot:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { cross |  :Invalid Space ( "string" ^^ invalid zipMin |  ) } )
<unclosedIRI [ invalid |  xsd:unsignedInt 123  ]  @@ ?var (  ) :: { ottr:Triple(_:blank <unclosedIRI none) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { "(" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Footballer [ xsd:invalidType ] { ottr:Triple(?i0 :noPrefix "malformed"^^bad:datatype) ) } .
ottr:IRI [  ] :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { <unclosedIRI(_:blank, bad::IRI) , } .
://noScheme [ List<List<owl:real>:noType xsd::doubleColon> ?RnT} , cross |  @@ http://invalid ( ( ?var 1 , _:b1 ,, ) ) ^^ invalid , ++ ++ 123  ) :: {  LUB } .
ex::doubleColon [ ?? xsd:byte "string" = invalid^^type ?!! ?-M = 23.14.15 ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123   owl:NamedIndividual ,  @@ "string" (  ) ; :: { o-rdf:Type(_:blank, none) , ottr:Triple(_:blank, ex:Invalid Space, _:b2)  }
owl:Triple :: BASE
owl:Type [  ] @@ cross ottr:IRI ( _:blank zipMin |  ) @@ ://noScheme ( ?D ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?$xF|, "unclosed) ,  } .
"string" [ ?! LUB<owl:DatatypeProperty>badPrefix:string 123 = "value"^^invalid , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@  ++ "invalid"^^bad::IRI ++ ++ (  ) ,, :: {  :noPrefix (  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: {  } .
ex::doubleColon ?? xsd:invalidType "string" @@ ex: ?eG ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ?var 1 , ( "malformed"^^bad:datatype ) ) ,, ?9 http://invalid ] :: { ottr:Triple(_:blank bad::IRI 7+.-5+) o-rdf:Type(123, ?UqQcu) } .
o-rdf:Invalid Space :: BASE
foot:Annotation [ ++ ++  = ( (   ) , ] LUB :: ( ottr:Triple(?6{, ottr:Footballer, 23.14.15) , ) .
http://example.com/:Template2 [ ?!! rdf:XMLLiteral , , "string" ?> , xsd:int ?`@A ] { o-rdf:Type(?J, "2023-01-01"^^xsd:date) ; } .
ottr:IRI ? LUB<xsd:unsignedInt>badPrefix:string "string" = ?aV @@ ex: :: {  xsd:Annotation (  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("n+" owl:Type 123) } .
 [ ++ ++ xsd:nonPositiveInteger 123 = "value"^^invalid , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  @@ cross http://invalid ( ++ ++ "string"^^^xsd:string zipMin |  ) :: { invalid } .
:noPrefix [ ] :: { ottr:Triple(_:blank, ://noScheme, 0+) , } .
<unclosedIRI :: { o-rdf:Type(?/d, ?}li) , ex::doubleColon(?@Dt, true) , } .
ex:Invalid Space [ ( ?Z ) ) ,, ?SFM%* , ,  :noType  , ] {  } .
?var [ ?? xsd:decimal  ] xsd:invalidType :: { bad::IRI(?j]ku, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Footballer [   "string"  , , ++ xsd:integer ,  ] @@ foot:Template2 (  ) , @@ ex:  ;: { o-rdf:Type(?f, 1..2) ( } ..
ottr:IRI :: { ottr:Triple("string", <unclosedIRI, "invalid"^^://noScheme) , bad::IRI(_:blank, ex:Invalid Space) ( } .
http://invalid [ NEList<<LUB<ottr:IRI>>>xsd::doubleColon "~*" , @@ badPrefix:Triple (  ) ^^ ottr: :noType ; :: {  
?var [ xsd:invalidType ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ?!! xsd:float ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?;<, ?0) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex: (  ) } .
:noPrefix [ ] :: { ottr:Triple(?D ex:Template1 xsd:Template2) , } .
123 [  ] @@ cross |  123 ( ++ ++ ( , ) ) :: BASE
 [ xsd:dateTime 123 , , 123 ?p ,   xsd:gDay ?B. =  ] :: { <unclosedIRI(?gF, 23.14.15) LUB }
foot:Annotation ++ "string" = ( ( "u+"  , abc ,, ) , ?? xsd:gMonthDay  = 23.14.15 @@ "w*6O*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ?var ( "string" ) :: { ottr:Triple(_:blank, bad::IRI, none) } .
:Template1 [ "j*n&*" ] ex: :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ LUB<List<LUB<xsd:dateTimeStamp>ottr:>> ?u ! ?eP = "value"^^invalid @@ ex:Invalid Space _:blank wrong @@  (  ) :: { xsd:invalidType } ,
://noScheme :: { o-rdf:Type(, ?1hUso=}t) , } .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  :noPrefix ( invalid ) } .
123 [ ?! rdfs:Resource , xsd:integer  , ,  ] :: { ottr:Triple(?a owl:Type LUB) ex::doubleColon(?*, 1..2) ( } .
ex:Footballer ?!! t-pnd:Punned-Class-ObjectProperty "string" = 123 , @ invalid |  foot:Annotation ( ++ ++ ""unclosed" , ++ ( ( ?HA , ?var 1 ,, ) ) ) ,, ) :: BASE
http://example.com/:Invalid Space zipMax |  xsd:unsignedLong 123 , ,  @@ zipMin |  ottr:IRI ( _:b2 ) :: { o-rdf:Type(?R"?, "invalid"^^) ,  }
"string" [ ++ xsd:unsignedShort  = ?N , ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  badPrefix:string 123 "Q+" ] :: BASE .
http://example.com/:Annotation :: ( http://invalid ( ?var 1 ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ? xsd:unsignedInt ,  ]  :: { ottr:Triple(ex::doubleColon badPrefix:Triple 23.14.15) o-rdf:Type(_:blank, _:b2) ( } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  <unclosedIRI (  ) ; :: {  } .
bad::IRI [ ] :: { ex:Invalid Space(?B[G, List) , invalid } .
 [ NEList<xsd:long>LUB :noType @@ 123 "**" ; { ottr:Triple(?I, ://noScheme, ?J<) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Template1 ?? xsd:dateTimeStamp "string" = invalid^^type , , List<List<List<++ ++ ?yA = abc.2+>>> ?3v , rdf:XMLLiteral ?m @@ foot:Type ?/E ) :: { o-rdf:Type(?T, :Footballer) , } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://example.com/:Annotation [ ] :: ( ottr:Triple(?>, :noPrefix, :noType) , ) .
123 [ http://invalid ] "unclosed :: { ("string", 23.14.15) } .
<unclosedIRI [ invalid |  List<xsd:Name> ?4Z , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  ottr:IRI (  ) @@ bad::IRI  :: {  } .
://noScheme [ ?! xsd::doubleColon ?E ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon  @ ex:Invalid Space ( ++ "string"^^^xsd:string ) :: { ottr: } .
?var [ ++ ++ List<<xsd:short>>LUB 123 = 23.14.15 , xsd:duration    = "string" ,  :: {  ex: ( List ) 
owl:Footballer :: { ottr:Triple(_:blank foot:Triple ?b!^) ( }
badPrefix:Invalid Space [ 123 ?, , ] { o-rdf:Type(??], "malformed"^^bad:datatype) , ottr:Triple(_:blank, ex::doubleColon, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, none) ) } .
foot:Invalid Space [ ++ xsd:integer , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] bad::IRI :: ( ottr:Triple(List, , "string") ( ) .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [  ] :: { :noPrefix(_:blank, ?() , } .
ottr:IRI [ LUB<<List<xsd:unsignedLong>>>  , ] invalid |  @@ ex: "=*" :: {  } .
ex::doubleColon :: { o-rdf:Type(?S0b.F, "malformed"^^bad:datatype) ottr:Triple(?9 http://example.com/:Footballer -4+) } .
http://invalid [ ! ottr:IRI ??  ? xsd:gMonth "string" = "value"^^invalid , LUB ] { xsd::doubleColon } .
ex:Invalid Space  ?yg> @@ zipMin |  "string" (  ) , @@ zipMax |  ?var (  ) :: { ://noScheme ( 123 ) }
ex:Template2 [  t-pnd:Punned-Class-ObjectProperty 123 ,  ]: { o-rdf:Type(_:blank, _:b2) , o-rdf:Type(_:blank, "unclosed) ; } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ex:Invalid Space(?M, ?Z/Lzk) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ "string" ++ "string" ,, :: BASE .
 [  ] :: { ottr:Triple("8*" ://noScheme "invalid"^^<unclosedIRI) , }
http://invalid [ NEList<<LUB<xsd:base64Binary>>>LUB ?l% ! xsd:nonNegativeInteger  = "malformed"^^bad:datatype ] :noPrefix :: {  } .
bad::IRI [ ] :: { ottr:Triple(_:blank, badPrefix:Type, badPrefix:string) } .
ex: [ xsd:foot:clubHistory ?U , , xsd:invalidType ] @ ?var ( _:b2 (  ) ^^ ottr: , ++ ++ ?var 1 ) :: { 123 } .
ex::doubleColon ?!! xsd:normalizedString ,   123 ,  :: ( o-rdf:Type(?'0,, invalid) , cross |  http://example.com/:Invalid Space ( _:blank zipMax |  ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?_, none) ; 
foot:Triple [ ++ xsd:language ,     , ?? ottr:Bot ] { ex:(_:blank, _:b1) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { ottr:Triple("|", :Triple, ?JX) , } .
xsd:Type [ ! 123 = 23.14.15 , invalid |  @@ 123 ?;=[d _:blank || :: BASE .
 [ LUB<xsd:Name>:noType "string" ] @@ zipMin |  :noPrefix (  ) ) :: { ex:Invalid Space(?vW, <unclosedIRI)  } .
ex::doubleColon :: { o-rdf:Type(?2, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank http://invalid "unclosed) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ( ( 1..2 ) ) ^^ List , badPrefix:string ) } .
ex: [ cross |  xsd:language "string" , ,  ] ottr: :: BASE
?var ?!! xsd:positiveInteger invalid @@ zipMax |  ottr:IRI (  ) @@ bad::IRI  [: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ; } ..
owl:Annotation [ ?var ?` , ? LUB  ++ ++ xsd:date   ,  ]  :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
://noScheme [ cross |  NEList<xsd:double>badPrefix:string ?2 , ] ?var :: { ottr:Triple(?U, ex:, ?m\6') } .
ottr:IRI [ 123 ?p ] @@ "string" (  ) ^^ List @@  ex:Footballer ( ++ ++ 123 ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(ottr:, :noPrefix) ,  (  ) }
ex::doubleColon [ "=*" ] :: { o-rdf:Type(_:blank, ""K*~R*"") , } .
bad::IRI xsd:int LUB , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  http://invalid ( (  ) ) _:blank ,  ) , @@ zipMin |  ex:Invalid Space (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Type [ ? xsd:dateTime "string" = "unclosed ,  @@ cross ottr:Annotation ( ++ o-rdf:Template1 invalid |  ) :: {  } .
badPrefix:Triple : { ottr:Triple(?T foot:Invalid Space 1..2) ( } .
owl:Template2 [ ] :: {  } ,
:noPrefix [   owl:real  ] @@ <unclosedIRI  :: { ottr:Triple(?N, <unclosedIRI, none) ex:(_:blank, 23.14.15) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 LUB<<List<xsd:boolean>>>xsd:invalidType ?Od ,  :: { "string" } .
ottr:IRI [ ex: ] @ zipMin |  foot:Triple ( ( , ) ^^ badPrefix:string  ) :: BASE .
<unclosedIRI [  owl:AnnotationProperty 123 = "unclosed ] "unclosed :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
 [  ] :: {  } .
ex:Invalid Space [ ? "string"  , ,   xsd:short  @@ http://invalid (  ) ( :: { ottr:Triple(, ex::doubleColon, "malformed"^^bad:datatype) } .
:noPrefix [ ] :: { ://noScheme ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(_:blank, List) ) } .
?var :: BASE
owl:Annotation [ ?!! rdfs:Literal   ,  ] @@ LUB : { o-rdf:Type(?aB., ?!}_) , } ...
?var [  ] :: { ottr:Triple(?i :Annotation none) ://noScheme } .
foot:Triple :: { o-rdf:Type("unclosed, ?6]e) , http://invalid(_:blank, "string") }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ 123 ?C , ++ ++ ?P!:\0 = 23.14.15 @@  ( ++ ?var 1 wrong ) , @@ ottr:IRI  :: BASE .
ex::doubleColon [  ] @@ || <unclosedIRI ( http://example.com/:Footballer _:blank , ( ( "string" ,, ) ) , 1..2 ) ^^ LUB ) :: { ottr:Triple(?", ex:, "malformed"^^bad:datatype) , } .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space xsd:dateTime 123 , @@ zipMin |  o-rdf:Template1 ( ++ ++ invalid ,, ) :: ( invalid |  bad::IRI ( invalid ) ) .
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType ; { o-rdf:Type(?cQ, "2023-01-01"^^xsd:date) ( } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Type ++ xsd:float    @ zipMax |  badPrefix:Template2 (  ) :: {  } ;
ottr:IRI [ "string" ] "5" :: BASE .
ex::doubleColon ! ?> = 123  @@ 123 ex: :: { <unclosedIRI(_:blank, List) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer [ ?? xsd:short "string" = "malformed"^^bad:datatype , ] {  ( ( "unclosed , ( , ) ,, ) ) ^^ :noType zipMax |  ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  http://invalid ( ( "2023-01-01"^^xsd:date ) ) , @@ invalid |  bad::IRI ( ++  ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ List<invalid> ?vL ,  @@ zipMin |  ?var ( _:blank  ) :: { o-rdf:Type(?0, none) , ottr:Triple(xsd:invalidType ://noScheme ?k) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:string } .
badPrefix:Template1 [ ++ ++ xsd::doubleColon ?1 , ,  owl:DatatypeProperty cross List<xsd:nonNegativeInteger>LUB ?l rdfs:Resource ?=x:* , ] :: {  } .
o-rdf:Invalid Space ; { ottr:Triple(?b, xsd:Template2, "malformed"^^bad:datatype) ottr:Triple(?y, owl:Annotation, 1..2) } 
ex:Type [ ] :: { o-rdf:Type(?U, 23.14.15) , 
bad::IRI [ ? List<owl:Class>xsd:invalidType ++ ++ owl:ObjectProperty "string" = "value"^^invalid , ] @@ badPrefix:Triple _:blank , _:blank zipMin |  :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { o-rdf:Type(_:blank, false) ; } .
ex:Invalid Space [   ?/ = 123 , xsd:unsignedInt :noPrefix ] "string" :: {  } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?AtB]Qq :: { ex::doubleColon(xsd::doubleColon, "+*@c*") , } .
<unclosedIRI [  ] :: { ottr:Triple(?: o-rdf:Template2 ?$) } .
http://invalid ottr:http://example.com/:Template1 ?j , , ottr:  :: { ottr:Triple(?4, ://noScheme, _:b1) , invalid }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 ( (  ) ^^  ) } (
ex: [ ++ t-pnd:Punned-Class-ObjectProperty   ] { ottr:Triple(?HY, xsd:Annotation, "invalid"^^ex::doubleColon) ex::doubleColon(?#, 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { badPrefix:string } .
ottr:IRI [ xsd:anyURI 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(_:blank, ?') ( } .
ex:Triple :: BASE .
:noPrefix [ ?! List<<xsd:date>>xsd::doubleColon , ] :: { ottr:Triple(?XM6~y, owl:Annotation, 23.14.15) zipMin |  http://invalid ( ( ""*"" , invalid term ) ) ^^ invalid ) } .
 [ ++ ++ xsd:unsignedByte  = "value"^^invalid @@ ex: (  ) , @@ ex::doubleColon _:blank cross |  :: { ex:Invalid Space(_:blank, "unclosed) } .
bad::IRI [ ++ "string"  ,  ] ://noScheme :: { o-rdf:Type(_:blank, none) , ottr:Triple(_:blank <unclosedIRI "2023-01-01"^^xsd:date) , } .
"string" [ rdfs:Resource ?var List ]  :: BASE
badPrefix:Footballer 123 ?b , , ?!! ottr:Bot 123  ! xsd:boolean  @@  "string" ( _:blank ,, ) , :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } )
http://example.com/:Type [ ?! LUB ?3 , , rdf:HTML "unclosed , ] ?var :: BASE .
123 [ ? List<xsd:decimal>List , List<xsd:invalidType> ?Nt  @@ ex:Invalid Space ++ ?var 1 invalid |  ( : {  } ..
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ :noPrefix ( _:blank ,, ) :: { ottr:Triple(ottr:, ://noScheme, <unclosedIRI) , ex::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:   :: { bad::IRI(_:blank, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?R, ?zFd) } .
"string" [ foot:foaf:name ?l ] :: {  http://invalid ( "malformed"^^bad:datatype , :noType ) } .
foot:Invalid Space :: ( ottr:Triple(?9 ottr:Template2 "unclosed) ; ) .
xsd:Annotation [ ] :: { ottr:Triple(?e, :Footballer, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
ex:Triple ?!! xsd:short 123 = invalid^^type cross |  @@ zipMin |  ?var ( (  ) ^^  ) :: { (?=?, "invalid"^^ex:) ) }
http://invalid [ :noType ] @@ ottr:IRI ( none ^^ badPrefix:string ++ ++ ( ( ""v*\a*"" , ?var 1 ,, ) ) ) zipMin |  ) :: { invalid |  badPrefix:Template2 ( ++ ?y% ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] *: { ottr:Triple(?+$V{h6N`, owl:Footballer, ex:Annotation) , } ...
ex:   List<<rdfs:Resource>>xsd:invalidType 123 =  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ex::doubleColon _:blank , "invalid"^^ex:Invalid Space ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ++ ++ "string" = 23.14.15 ,  @@ ://noScheme :: { o-rdf:Type(_:blank, ?'C-p) ) } .
<unclosedIRI [ ] :: {  } .
 [ ++ invalid ?wD ] "string" :: { ottr:Triple(LUB :noPrefix "unclosed) bad::IRI(?PL=, "l") } .
?var [ ?! xsd:unsignedLong , ] :: { http://invalid(?^, false) , xsd::doubleColon } (
ottr:Template1  @@ ottr:IRI  @@ cross |  ex:Invalid Space (  ) :: { ottr:Triple(?d :Triple "2023-01-01"^^xsd:date) , 
?var [ wrong List<NEList<xsd:nonNegativeInteger>badPrefix:string> ?- "unclosed ] @@ ex: ??MX^L invalid |  ; :: { bad::IRI } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ none:owl:Annotation ?J , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { ottr:Footballer (  ) }
ex:Invalid Space [ xsd:token "string"  @@ zipMin |  :noPrefix ( ++ ""3*"" ,, ) :: BASE .
 [ ?? owl:real 123 = "value"^^invalid , ,  ] :: { ottr:Triple(_:blank, http://invalid, _:b1) , o-rdf:Type(_:blank, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?YfSrb9, ?H) , } .
123 [ ] :: BASE
ex::doubleColon ! xsd::doubleColon  , @@ cross ex:Template1 ( ?A8 ) :: { ottr:Triple(ottr: :Triple ) 
ottr:IRI [ ++ "string"    ': { ottr:Triple(_:blank  "unclosed) , } ..
"string" [ xsd:invalidType @@ zipMax |  foot:Annotation ( ++ (  ) ,, ) :: { ex::doubleColon ( ( true , ?@T ) ) "string"^^^xsd:string ^^ List ) } .
ottr:IRI :: BASE
:noPrefix xsd:unsignedByte ://noScheme ,  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  "l+" , :: { o-rdf:Type(_:blank, 123) , } .
bad::IRI [ ?! LUB<xsd:gYearMonth> 123 = "unclosed ] :: { ottr:Triple(?v:, ex:, ?y6) ; } .
<unclosedIRI [  ] invalid :: { ex:Invalid Space(badPrefix:string, _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { ottr:Triple(?SV] xsd:Template2 -3+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } (
:Footballer [ ++ xsd:gMonthDay   owl:AnnotationProperty "string" =  , , ottr:o-rdf:Triple ?Q# , List<"G"> ?.39 @@ ex:Template1 ( ?h :: ( ottr: ) .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ottr:Invalid Space ,  , @@ "string" ( _:blank ,, ) :: { ottr:Triple(?-R, xsd:Annotation, ?K) , o-rdf:Type("[+", "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template2 [ ?!! xsd:boolean "string"  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
://noScheme :: { ottr:Triple(_:blank  ex:) } .
<unclosedIRI [ ?var ?1Y ,  ] 123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI xsd:invalidType @ cross |  ex:Invalid Space ( ++ ++ ( ?Hm ) ) cross ) :: {  } .
ex::doubleColon [ NEList<xsd:duration>List  , ] @@ :noType :: { :noPrefix(?=, none) , } )
http://example.com/:Template1 [ ] :: BASE
owl:Triple ! xsd:anyURI , ,  @@ ottr:IRI (  ) @@ zipMax |  123 (  ) :: (  ?var ( ++ (  ) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?sU) }
ottr:Triple  @@ 123  , @@ invalid |  :noPrefix (  ) :: { o-rdf:Type(_:blank, _:b1) , ottr:Triple(_:blank  xsd::doubleColon) , } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI ( _:blank zipMax |  ) :: BASE .
ex: [ ] :: { http://invalid(?bF;4, "invalid"^^://noScheme) ( } .
ex::doubleColon [ xsd:time "string" , xsd:yearMonthDuration "unclosed ] @ cross |  ?var (  ) :: { ottr:Triple("string", ex:Template2, ""M*"")  } .
ex:Invalid Space [  List<NEList<<LUB<xsd:positiveInteger>>>> ?, , , ?!! ?: = xsd:invalidType , ] <unclosedIRI :: BASE
xsd:Footballer :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation [ cross xsd:decimal  LUB ] { invalid } .
owl:Invalid Space [ ?! xsd:date ,  :noType  ! xsd:string 123 = ?k , , "string" ?n0hGB ++ ++ owl:NamedIndividual ?. = 23.14.15 , ] :: { zipMin |  o-rdf:Type ( ottr: ) 
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(_:blank ://noScheme "2023-01-01"^^xsd:date) bad::IRI(LUB, 123) , } .
"string" [ ! xsd:dayTimeDuration  = 23.14.15 , ?var ?} ] @@ || :Type ( ex:Invalid Space ) , @@ ottr:IRI  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  NEList<<LUB<xsd:gMonth>>>List ?! 123  , ] :: { <unclosedIRI ( ++ ++ ?/8?64\@ ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] "unclosed :: {  } .
 xsd::doubleColon  :: { ottr: } .
:noPrefix [ ] :: BASE
xsd:Template1 :: { ottr:Triple(?s)!, ottr:Annotation, ?NM) } .
ex:Triple [ ++ ++ xsd:language , ,  @@ zipMax |  foot:Footballer ( _:blank cross |  ) :: { o-rdf:Type(_:blank, _:b2) ,  } ,
ex:Annotation ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  ?var ( _:blank , ++ ( _:b1 ) ( ?O! , ( , ) ,, ) ) ^^ LUB ) :: BASE .
ex::doubleColon [ LUB<List<xsd:dateTime>> ?p   :: { ottr:IRI (  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  owl:ObjectProperty "string"  , , xsd:int 123 , ] :: { ottr:Triple(_:blank xsd:Template1 ?}) o-rdf:Type(_:blank, 23.14.15) ) } .
 [  ] :noPrefix :: { ottr:Triple("unclosed, ://noScheme, "string") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { ex:Invalid Space(?y, none) } ;
bad::IRI [ ?!! LUB<xsd:decimal>xsd:invalidType , owl:real List ] @@ 123 ""x*"" ,, ( : { ottr: } .
badPrefix:Template2 [ cross |  xsd:token  ?? rdf:HTML  ] { ottr:Triple(_:blank foot:Footballer "unclosed) ,  } .
"string" [  LUB 123 , ,  @@ bad::IRI (  ) ) ~: { o-rdf:Type(_:blank, ?9M) } ..
:Type :: { 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ++ LUB<<List<owl:DatatypeProperty>>>xsd:invalidType ?v = "malformed"^^bad:datatype , ] List :: {  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@  ++ (  ) ++ ++ ( ""unclosed" ,, ) ) ,  invalid |  :: { http://invalid(ex:, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] @@ || <unclosedIRI (  ) :: { ottr:Triple(_:blank badPrefix:Template1 _:b1) o-rdf:Type(_:blank, "unclosed) ,  } .
?var [ xsd:negativeInteger "string" ? xsd:base64Binary ?I@ = "value"^^invalid , 123 ?4 ] :: {  :noPrefix ( invalid term ^^ invalid ) } (
foot:Triple [ "<*#w*" ] @@ ottr:IRI  @@ wrong ottr:IRI ( xsd::doubleColon ) :: ( ottr:Triple(_:blank, :noPrefix, 23.14.15) ; ) .
ottr:IRI 123  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 [ ! xsd:int , , ++ xsd:NMTOKEN  = "value"^^invalid  @@ ?var ( _:blank _:blank ,  ) :: { ottr:Triple("a*", badPrefix:Invalid Space, ?<) , } .
:noPrefix [ ] :: ( ottr:Triple(?Pz bad::IRI ex:) , <unclosedIRI(_:blank, _:b1) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ++ (  ) ,, } .
ex:Invalid Space [ NEList<xsd:double> :noType , ] :: { LUB } .
 :: { o-rdf:Type(?O1, ""y*DA*"") ex::doubleColon(?W>, true) , } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ++ ++ ?+  ] badPrefix:string :: {  } )
ottr:Annotation [   xsd:negativeInteger "string" = "unclosed , ?!! xsd:time  ] @ zipMin |  xsd:Type ( ++ ++ ( _:b2 ) ) ) :: BASE
ottr:IRI [ ] :: ( ottr:Triple(_:blank, http://example.com/:Footballer, ?#) ottr:Triple(<unclosedIRI ://noScheme "X+") , ) .
?var  ?9T , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ LUB ] @@ badPrefix:Template1 ( ++ "2023-01-01"^^xsd:date ) :: {  } .
http://invalid [ ++ "string"  , , xsd:Name 123 invalid |  @@   :: { ex:Invalid Space(_:blank, "unclosed) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { List } .
:noPrefix [ ++ ++ LUB<owl:AnnotationProperty>xsd::doubleColon xsd:boolean ottr: , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] xsd:invalidType :: { o-rdf:Type(?,., none) ) }
"string" :: BASE
ex::doubleColon [  @@  ottr:IRI (  ) @@ zipMin |  123 (  ) *: { bad::IRI  } .
ex::doubleColon [  123 = ( o-rdf:Template2 ) , ++ xsd:gMonthDay ?VQ = "unclosed ] :: BASE .
"string" ! List<xsd:int>   http://invalid @@ cross |  <unclosedIRI ( ++ (  ) ++ ++ 23.14.15  ) , @@ http://example.com/:Invalid Space ( ( , ) ) :: { ottr:IRI  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { ?var } .
ex: [ ? :noType "string" , ,   xsd:unsignedByte , ] "unclosed :: { ottr:Triple(?M, ex:Invalid Space, none) ) } .
:noPrefix [  ]  :: {  } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |   ( _:blank ,, ) :: { o-rdf:Type(List, ottr:) } .
123 :: { ex::doubleColon(_:blank, ?\) ottr:Triple(_:blank, :Type, "malformed"^^bad:datatype) , ottr:Triple(_:blank badPrefix:Footballer "2023-01-01"^^xsd:date) , }
ex:Annotation [ owl:Class LUB @@ zipMax |  owl:Invalid Space ( ?;n ^^ xsd::doubleColon , ( _:b2 ,, ) ) ^^ xsd:invalidType wrong ) @@ zipMin |  ottr:Template1 ( "=*" ) :: { ottr:Triple(?" xsd:Triple "invalid"^^:noPrefix) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation [ ] :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ List<<xsd:date>>xsd:invalidType invalid , ] ex: :: { ottr:Triple(?Lu  ?tAC) ottr:Triple("K*", o-rdf:Triple, "string") }
ottr:IRI  zipMax |  @@ zipMin |  :noPrefix (  ) :: { ://noScheme(_:blank, "2023-01-01"^^xsd:date) , } .
ex::doubleColon [ List ] :: {  } .
<unclosedIRI [ ++ ++ 123  ?!! xsd:gYearMonth ] @@ ex:Invalid Space (  ) , @@ http://invalid  :: { bad::IRI ( _:blank ,  ) } .
?var :: BASE
owl:Template2 [ List<> ?N7{ , ? LUB ?Q@ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross |  ottr:Template1 ( xsd::doubleColon ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type [   xsd:dateTime ] @@ invalid |  http://invalid (  ) @@ ottr:IRI  :: { bad::IRI(_:blank, 23.14.15) , "unclosed } ;
ottr:IRI [ xsd:float 123 ] @@  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { bad::IRI(?var, ?<) } .
owl:Invalid Space [ ++ ++ rdfs:Resource "string"  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
ex:Invalid Space [ ++ :noType ?2B ,  @@ ://noScheme _:blank ,, , @@ ex::doubleColon (  ^^ xsd::doubleColon invalid term ) :: {  } .
ex: [ ! NEList<xsd:unsignedInt>List , ] http://invalid :: { ottr:Triple(?/, http://example.com/:Type, "f*Zk*") ,   ( ++ _:b1 , ++ ++ ( ( ""o+"" ,, ) ) ) zipMax |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?H <unclosedIRI "2023-01-01"^^xsd:date) :noPrefix(?"S, o-rdf:Template1) ) } .
"string" LUB zipMin |  @@ cross xsd:Triple (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ex:Footballer :: ( ottr: ) .
:Template2   owl:AnnotationProperty  = invalid^^type , , cross |  xsd:int 123 , , ?var ?w6  ?g , @@ invalid |  foot:Annotation ( "unclosed ) :: BASE
ottr:IRI ?? NEList<xsd:gYear>xsd::doubleColon , ? xsd:unsignedInt 123 = "unclosed @@ http://invalid (  ) @@ 123  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (_:blank, ?7) , ottr:Triple(?O4 owl:Triple ?var) , } .
o-rdf:Type [  @@ || :noPrefix ( _:blank 23.14.15  ) , @@ invalid |  <unclosedIRI ( ?! ^^ LUB ,, ) :: { o-rdf:Type(bad::IRI, -1+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ LUB<:noType> ?]p , ] zipMin |  @@ zipMax |  "string" ( ++ ( ?var 1 , (  ) ,, ) ) , "unclosed ) :: { ottr:Triple(xsd:invalidType, ex:Invalid Space, ""c"")  } .
ex: :: { ex::doubleColon(?_, invalid) } .
ottr:Annotation [ !  = invalid^^type List ] invalid :: {  }
badPrefix:Invalid Space [ ++ xsd:hexBinary "string" = "`*" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { cross |  ex:Footballer ( ++ ++ "invalid"^^ ) } .
xsd:Template1 [   ottr: ?/ , , wrong xsd:dateTime ?P , , xsd:dayTimeDuration "a*$Y*" , , xsd:negativeInteger ?9 , ?var ?~ ++ ++ xsd:NCName ?vZ = "malformed"^^bad:datatype , ] :: { ottr:Triple(?G :Template2 _:b1) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI "string" @ ex:Annotation invalid term zipMax |  :: { ottr:Triple("c*" xsd:Triple ) } .
?var [ ++ LUB<rdfs:Resource>:noType 123 = LUB @@ cross |  ://noScheme ( _:blank , ++ ?\ ,, ) :: BASE .
bad::IRI : { ottr:Triple(?&'!goO, http://invalid, "malformed"^^bad:datatype) , } ..
:noPrefix [ xsd:dateTime ottr: ,  ] badPrefix:string :: { ex:Invalid Space(_:blank, ?d) , } .
ex::doubleColon [ ? xsd:nonNegativeInteger  = 23.14.15 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [ ?? "string" = ?<WZ , , xsd:gYear  , ] @@ ex: ( ++ ++ ( ( none ,  ) ) ,, ) ) ; :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?R, _:b2)  } .
123 [ ?! ottr:Bot , ,  ?: ,  ] { ottr:Triple(_:blank ex:Invalid Space 23.14.15) ,  :noPrefix (  ) } .
foot:Template2 [ ] :: { o-rdf:Type(?p, _:b1) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Invalid Space ?! List<<xsd:float>>LUB , , 123 zipMin |  @@ ://noScheme ( ?b{ ^^ xsd:invalidType  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ xsd:dayTimeDuration badPrefix:string , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" :: { ottr:Triple("unclosed, :Type, 1..2) } .
ex:Invalid Space [  ] :noPrefix :: { ex:(?g, ?2G%jq)  } .
bad::IRI [ ?var ?af_   xsd:string "string" =  @@ cross ex:Template1 ( ?) ) :: { ottr:Triple(_:blank  ottr:) ( } .
http://invalid [ ++ xsd::doubleColon 123 , ]  :: { List } .
ex::doubleColon [ ?   ?? rdfs:Resource 123 = "malformed"^^bad:datatype ,  xsd:time  ] { o-rdf:Type(?mVx, "unclosed) , } .
<unclosedIRI [ ] :: { ex: _:blank } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?e ottr:Footballer ex:Annotation) , o-rdf:Type(?\, "invalid"^^://noScheme) ; }
ottr:IRI [ zipMax |  xsd:byte "string" ? ottr: ?fK' , , ?var ?0] , @@ zipMin |  o-rdf:Annotation ( 123 ) , :: { :noPrefix("5*;)*", ?N) , } .
ex::doubleColon [ ?!! LUB<owl:AnnotationProperty>List 123 = invalid^^type ] @@ <unclosedIRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex:Footballer, xsd::doubleColon) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space   :: { o-rdf:Type(?H, "unclosed) , xsd:invalidType } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?`x@>=m  ""r*"") } .
http://invalid [ badPrefix:string ] ^: { ://noScheme ( ++ (  ,, ) ) ) } ..
bad::IRI [ ] :: BASE
xsd:Type [  ?I = "U" , ! rdfs:Resource ?" = "unclosed ]  :: { ottr:Triple(?}, ottr:Template2, false) ) } (
:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <unclosedIRI :: BASE
"string" [  ] :: BASE .
ottr:IRI [ ] :: { ottr:Triple(_:blank, bad::IRI, ?var) , ottr:Triple("m*$v*" badPrefix:Annotation ?I) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { :noType } .
ex::doubleColon [ ?! owl:real "string" = 23.14.15 ,  @ zipMax |  ex:Invalid Space ( badPrefix:string ) :: { (?+;, _:b2) } .
http://invalid [ NEList<rdfs:Literal>invalid List LUB<xsd:duration> ?Kt ] @@ cross ex: ( ++ 23.14.15 , _:blank  ) :: { o-rdf:Type(?'/a, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ invalid |  xsd:unsignedInt ?P7 , ] { :noPrefix(?3, ""~*"")  } .
ottr:Type ?? ottr:Bot , , "string" ?M , , ++ ++ xsd:invalidType 123 @@ owl:Triple ( (  ) ) :: { foot:Invalid Space "string"^^^xsd:string ^^ ottr: ,, } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Annotation [ ! List ?jP ] { ottr:Triple(?w( :Triple ?_) ( } .
123 [ ] :: { :noPrefix(_:blank, "+*") , zipMax |   ( ://noScheme ) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: BASE .
http://invalid [  ]  :: { ?var } .
bad::IRI [ || NEList<xsd:boolean>LUB  xsd:invalidType @@ ex:Template1 ( ?! :: { o-rdf:Type(xsd::doubleColon, 3+) } .
<unclosedIRI ++ ++ xsd:dayTimeDuration ,  t-pnd:Punned-Class-ObjectProperty , @@ "string"  , @@ ex: (  ) :: { ex::doubleColon(_:blank, none) ottr:Triple(?>, ex:Invalid Space, 23.14.15) , } .
o-rdf:Invalid Space :: BASE
foot:Footballer [ ? "string"  , , List<ottr:> ?Tp4@ , 123 ?A ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
"string" :: BASE .
ottr:IRI [ xsd:unsignedInt ex::doubleColon , ] { ottr:Triple(?WG <unclosedIRI _:b2) LUB } .
xsd:Template2 [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  ] :: {  ( "string" ,, ) ^^ :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ "o*Rs*" ] @@ http://invalid ?z ) :: { ex:Invalid Space(xsd::doubleColon, 123) ( } .
:noPrefix [ 123 ?<iB`? , , List<zipMax |  List<<rdfs:Resource>>badPrefix:string ?e> ?DT @@ bad::IRI (  ) @@ cross |  ?var ( ottr: ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { ottr:Triple(_:blank, :Type, ?P) } .
ottr:IRI ?!! owl:rational 123   @ ottr:IRI  :: ( o-rdf:Type(?Q, abc.abc) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?9, ?E}) , } .
ottr:IRI [  ] ?var :: {  }
"string" [ ++ xsd:string ?z = 123 , ex::doubleColon @@ :noPrefix :Type ^^ badPrefix:string ,, ) :: BASE .
o-rdf:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("f*", "2023-01-01"^^xsd:date) , ottr:Triple(_:blank, ottr:Annotation, List) ; } .
<unclosedIRI :: { ottr:Triple(?#K^ ex:Invalid Space "unclosed) ex:(?A, invalid) } .
 [  List<List<owl:AnnotationProperty>LUB> ?[v3 , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: ( 123 ( _:blank ottr: ) ) .
bad::IRI [ invalid |  xsd:gYearMonth "string" ? xsd:NCName ] @@ ex:Template1 ( ?$ki1!D *: {  } ..
owl:Triple "string" ?J_ , , ?!! :noType    xsd:decimal  = invalid^^type ?! ottr:IRI , @ cross |  "string" (  ) :: BASE
o-rdf:Footballer :: { bad::IRI(?{o, _:b1) , ottr:Triple(ottr: xsd:Template1 ?E#sP) o-rdf:Type(_:blank, "unclosed) ) } .
ottr:IRI [ ?? xsd:gMonth 123  "string" ?6 , ++ owl:real  = "malformed"^^bad:datatype , ] ex::doubleColon :: BASE .
?var [  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ 123  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ex: ( ( ?e]i1$cy ,, ) ) cross |  ) :: {  ++ ++ ( false , invalid term ) } .
http://invalid [ cross List<<xsd:base64Binary>>xsd::doubleColon "string" , ,   ?J = ( (  ) , "2023-01-01"^^xsd:date ,,  ] :: { invalid } .
<unclosedIRI xsd:Name  @@ invalid |  foot:Template2 (  ) @@ ex:Triple ( xsd:invalidType ) :: { ottr:Triple(?~, ://noScheme, owl:Type) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?x)38, "unclosed) }
http://example.com/:Annotation [ ] :: ( ottr:Triple(?`, ottr:Invalid Space, ""!*"7*"") , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI :: { ottr:Triple(_:blank, ex::doubleColon, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ?? 123  , ] :: BASE
owl:Triple [ ++ rdfs:Resource , "unclosed ] badPrefix:string :: { ottr:Triple(ex: ottr:Template1 ?,~) , } .
?var [ NEList<xsd:unsignedInt>xsd::doubleColon "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI (  ) ) :: {  } .
ex:Invalid Space [ cross |  xsd:negativeInteger ?S  ] @@ wrong  (  ) :: { bad::IRI ++ ++ invalid term zipMax |  } .
http://invalid  xsd:integer  = "unclosed @@ "{*H4*" :: { :noPrefix(?&m, xsd:invalidType) , invalid } ;
123 [ ] :: { o-rdf:Type(?I, "unclosed) 
badPrefix:Template2 [ ++ ++ :noType "string"  ] @@ ://noScheme (  ) @@ ottr:IRI (  ) :: { (?oA, ""unclosed") , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space ( ++ ++ (  ) ) http://invalid ) } .
123 [ ? xsd:nonPositiveInteger , ,  ] @@ ex:Template1 ( ?O : { ottr:Triple(_:blank, <unclosedIRI, 23.14.15) o-rdf:Type(_:blank, _:b2) ,  } .
owl:Type [ List<"string"> ?%a , invalid |  NEList<<LUB<xsd:language>>>badPrefix:string ?mP , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [   xsd:unsignedShort    ] "B*" :: { ottr:Triple(List ex: ?p7) } .
bad::IRI ++ "string" = ( abc ,,  zipMin |  @@ :noPrefix ++ "2023-01-01"^^xsd:date ,  :: { (?{vi, invalid) ( } .
?var :: BASE
://noScheme [ ] :: ( ottr:Triple(?LYC, ex:Footballer, "invalid"^^:noPrefix) , ) .
foot:Annotation [  ] @@ zipMax |  http://example.com/:Triple ( _:blank  ) :: { :noType }
foot:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ex:Invalid Space :: { ottr:Triple(?', <unclosedIRI, ?^a) , } .
ottr:IRI [ :noType ] cross |  @@ ex: ( ++ ++ (  ) ) _:blank cross ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: BASE
http://invalid :: { ex::doubleColon("?", ?var) } .
://noScheme ??  "string" @@ zipMax |   (  ) @@ :noPrefix "malformed"^^bad:datatype :: { ottr:Triple(_:blank owl:Template1 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?r, none) , zipMin |  bad::IRI ( ( ?x ) ^^ LUB ,, ) } .
123 [ xsd:foaf:name ?:0 , @@ invalid |   (  ) , @@  o-rdf:Annotation ( badPrefix:string ) ": { ex:(?+X, ""C*H1*"") ) } ...
ex:Invalid Space [ ++  = "value"^^invalid wrong LUB<xsd:hexBinary>xsd:invalidType 123 , LUB<xsd::doubleColon> ?= , ,  ] {  } .
ottr:Type [ xsd:positiveInteger invalid ] :: { "}*" }
"string" [ ] :: { "s*OW*" } ,
<unclosedIRI [ ++ ++ xsd:gMonthDay , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI  ?q = "unclosed 123 @@ ex:Invalid Space :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Triple [ NEList<<LUB<xsd:language>>>ottr: xsd::doubleColon zipMax |  @@ ||  ( ( 9+ ,, ) ) ^^ invalid , ://noScheme ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(badPrefix:string, http://invalid, ?Kb) o-rdf:Type(_:blank, "unclosed) , } .
ex::doubleColon :: { ottr:Triple(?Nf|Y :Footballer ) , bad::IRI(_:blank, 23.14.15) ( } .
:noPrefix [  ] @@ ex: "string"^^^xsd:string ; :: ( ?var ( _:blank cross |  ) ) .
owl:Invalid Space [ ? xsd:unsignedShort "string" = 23.14.15 , zipMin |  owl:DatatypeProperty  , ] { bad::IRI(?0, invalid) } .
badPrefix:Annotation [ List<xsd:integer 123> ?HI! ] ";*" :: BASE
owl:Invalid Space :: { ottr:Triple(_:blank, foot:Annotation, ex:) , ?var ( "string"^^^xsd:string ^^ xsd:invalidType  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ "string" ] "7*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
 [ ?!! ottr:IRI 123 = "unclosed , ,  ] :: { o-rdf:Type(?h", "2023-01-01"^^xsd:date)  } .
://noScheme [ ++ ++ xsd:nonNegativeInteger ?_kv*  , NEList<<LUB<xsd:gMonthDay>>>:noType LUB ] @@ cross ex:Template1 ( ?i=}J|N ) :: { ottr:Triple(List ex::doubleColon ?.X) , } .
<unclosedIRI     , @@ xsd::doubleColon :: { bad::IRI(?(ulS, true) ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { http://invalid(?%, 23.14.15) 
123 [ ?! xsd:gMonth (  ) ?x ] { "?" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ invalid |  xsd:unsignedInt ?\ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: { ottr:Triple("1*" owl:Annotation 23.14.15) ( } .
http://example.com/:Footballer [ ://noScheme @ :noPrefix ( ++ ?var 1  ) :: BASE
?var :: {  } .
<unclosedIRI ++ ++  = ( invalid  , @@ "string" :: { wrong bad::IRI (  ) } .
 [ ! owl:DatatypeProperty ,  ] @@ http://invalid  , :: { ex:(?u, _:b2) , o-rdf:Type(_:blank, LUB) , } .
ex::doubleColon [ ++ xsd:time "string"  , , LUB<xsd:yearMonthDuration>List ottr: ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { ottr:Triple(?P, ex:Invalid Space, ?.=) }
o-rdf:Triple xsd:bad::IRI ?s7 , ,  xsd:invalidType 123 ,  :: { <unclosedIRI(?$, none) xsd::doubleColon 
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?i# ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space [ ! xsd:yearMonthDuration   ,  t-pnd:Punned-Class-ObjectProperty ?!! xsd:int ] :: { 123 ( (  ) ,, ) ) ^^  , _:blank cross |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ "K+" ] @@ ex::doubleColon ( 23.14.15 ++ "string"^^^xsd:string ,, ) ) :: { o-rdf:Type(ottr:, ?9) ex:Invalid Space(?Xoj, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ zipMin |  LUB<<List<xsd:token>>>invalid ?; , ] "string" :: {  } .
<unclosedIRI :: { ottr:Triple(_:blank, ://noScheme, http://invalid) ; } .
 [ ] :: { ottr:Triple(?)WEJ owl:Template2 "invalid"^^bad::IRI) , } (
?var ++ 123 = "string" , ,   :: { o-rdf:Type(?sA, 7+) }
foot:Triple [ xsd:time ?] ] { List } .
ottr:IRI [  ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type :: { ottr:Triple(xsd:invalidType o-rdf:Annotation ?.) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: {  
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ :noPrefix ++ owl:Template2 ,, ) :: { ottr:Triple(_:blank, ex::doubleColon, 3+) , } .
<unclosedIRI none:boolean ?Bm , , List<List<>> ?Li ,  :: { ://noScheme(?$yc, "unclosed)  (  ) } .
ex:Invalid Space [ ?? :noType ?5 ] :: { http://invalid } ;
ex: [ List<<xsd:unsignedShort>>invalid xsd::doubleColon  ] { o-rdf:Type(?+, false) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var [ zipMin |  xsd:dateTimeStamp  ,   :: { ottr:Triple(?D, xsd:Footballer, _:b1) ( } 
ex:Invalid Space [ ottr:foot:clubHistory ?, , ] :: {  
ottr:IRI [ ++ ++ xsd:normalizedString ,  @@ "string"  ; :: { ottr:Triple(_:blank, <unclosedIRI, _:b2) , o-rdf:Type(_:blank, 23.14.15) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Type [ ] :: BASE .
://noScheme  xsd:NMTOKEN  , , ++ List<owl:rational>xsd::doubleColon "string"  @@ wrong http://invalid ( _:blank  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "$*" } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ex: :: { :noPrefix(:noType, 123) ottr:Triple(?Z~ xsd:Annotation ?i{OMz) } .
bad::IRI :: { ex::doubleColon(?gG, 1..2) , } )
ottr:IRI [ ?!! xsd:time  ] @@ ottr:IRI  , @@ ex:Triple ( _:blank ,  ) : { cross |  ?var ( ++ ++ ?]s zipMax |  ) } ...
http://example.com/:Template1 [ ottr: ] @@ || :Template2 ( "unclosed ^^  ) @@ invalid |  badPrefix:Footballer ( ++ ( ( ?var 1 ) ) ,  ) ,, ) :: BASE
foot:Annotation [ NEList<> ?~d ] :: BASE .
bad::IRI [ ] :: BASE
ottr:IRI [ 123 ?^  @@  (  ) , @@ ex::doubleColon (  ) :: { ottr:Triple(_:blank, ex:, none) , "string"  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { o-rdf:Type("5*", ?var) ottr:Triple(?p owl:Invalid Space ?S6) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  ://noScheme ( List ) :: { http://invalid } .
bad::IRI [ ?! invalid "string" , , cross |  List<xsd:unsignedByte>xsd::doubleColon ?,1 , LUB ] @@ cross ex:Template1 ( ?Gk ) :: { :noPrefix(?_, "malformed"^^bad:datatype) }
ottr:Footballer [ xsd:language 123 , ] "9*n2*" :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
:Template2 [  invalid |  @@ ?var (  ) :: { ottr:Triple(?Y:, http://example.com/:Type, _:b1) ( 
ex:Invalid Space [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] \: { ottr:Triple(_:blank :Template2 true) , ?var ++ (  ) ) zipMax |  } ...
ottr:Triple ottr:xsd:Annotation ?1w zipMin |  @@  ( ++ ++ ( ?M , _:b1 ) ,  ) :: { ottr:Triple(?Yx, <unclosedIRI, xsd:invalidType) } .
bad::IRI [  ?+ , xsd:nonNegativeInteger 123 , ,  ] @@ invalid |  :noPrefix (  ) , @@  ://noScheme (  ) :: { http://invalid } .
ex: :: { o-rdf:Type("unclosed, ?guG) , } .
ex::doubleColon [ ? "string" = 23.14.15  ] { <unclosedIRI(?8, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: { ottr:Triple(?S http://example.com/:Invalid Space "malformed"^^bad:datatype) ( 
owl:Type [ ?? List<<xsd:gYear>>:noType   , @@ ex:Template1 ( ?7` :: { o-rdf:Type(?&, "2023-01-01"^^xsd:date) ; } )
?var [ zipMax |  List<<xsd:date>>xsd::doubleColon 123 ++ xsd:NCName ?L = "malformed"^^bad:datatype , , xsd:boolean "6*T!*" , ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ !   , ?! xsd:hexBinary @@ ex:Template1 ( ?Kk :: { ottr:Triple(_:blank ex: "string") ; } .
http://example.com/:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ++ "malformed"^^bad:datatype ,, , @@ ://noScheme ( ( "string" ,, ) ) ^^  , xsd:invalidType ) :: { invalid |  ottr:IRI ( ?var 1  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { :noType } .
<unclosedIRI [  ] :: { ottr:Triple(?GYcm, :Template1, ?{_) o-rdf:Type(LUB, 1..2) } .
http://invalid [ List ] @@  ex::doubleColon ( _:blank cross |  ) :: {  } )
123 :: BASE
ottr:Type [ ?? owl:real "string"  , xsd:gMonth "string" ] { bad::IRI(_:blank, _:b1) , o-rdf:Type(_:blank, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space :: BASE .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type("h*b[*", "string") ( } .
?var [ NEList<owl:rational>List "string"  ] @@ ottr:IRI (  ) :: { bad::IRI(_:blank, ""unclosed") invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ++ xsd:unsignedByte ?nK = ( _:b2 ,, ) ] ex: :: {  :noPrefix ( ( ( , ) , (  ) ) ,, ) invalid |  ) } .
http://invalid [ rdfs:Datatype xsd::doubleColon , , ?  = "unclosed , :noType ] :: { ottr:Triple(?`#d, ottr:Footballer, ?MR) } .
://noScheme [ foot:foot:Triple ?qY@ ,  :: { ottr:Triple(?tIH  -8+) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
<unclosedIRI ?? xsd:gYear @@ ottr: :: { ex:Invalid Space(?4, "invalid"^^ex::doubleColon) , }
123 [ ] :: ( ottr:Triple(?Cj+, badPrefix:Type, "malformed"^^bad:datatype) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string"   :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { ex:Invalid Space(?6, 23.14.15) , ottr:Triple(?var, xsd:Annotation, xsd::doubleColon) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Template2 [ xsd:gDay ex: , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank  ?7|e) , } .
ottr:IRI [ "$" ] invalid :: {  } .
http://invalid [   ?#G  , ] @@ ex::doubleColon ( none ,, ) ; :: { o-rdf:Type(?], true) } .
:noPrefix [ ] :: ( List ) .
123 [ ?? List<xsd:unsignedInt>:noType wrong @@ cross |  <unclosedIRI ( ++ ++ ( (  ) ,, ) )  ) :: { bad::IRI _:blank , ++ 123 }
http://example.com/:Template1 ? xsd:float  = invalid^^type  xsd:time  ,  badPrefix:string "string" @ zipMax |  o-rdf:Invalid Space (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { cross |  badPrefix:Footballer (  ) } .
ottr:IRI ! xsd:invalidType ?t5 , , "string" ?!e ,  :: BASE .
 [  xsd:negativeInteger  ,  @@ bad::IRI  ) :: { ottr:Triple(?%, ottr:Template1, _:b1) } .
ex:Invalid Space :: { ://noScheme(_:blank, ?B() , ottr:Triple(123 <unclosedIRI :noType) ( } .
http://invalid [   123  ] @@ "3*DZ*" :: { ex: } .
:noPrefix [ ] :: { o-rdf:Type(?A=:wEY, 23.14.15) ex::doubleColon(?S, "unclosed) , } .
o-rdf:Annotation [ ++ ++ List<<xsd:byte>>LUB "string" = invalid^^type badPrefix:string ] :: {  
ex:Triple [ ? xsd:hexBinary ]  :: BASE
badPrefix:Annotation [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ++ NEList<<LUB<xsd:nonPositiveInteger>>> ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { cross |  123 (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space ?! ?}qnc|  ! List "string" , , zipMax |  List<rdfs:Datatype> ?FY , @@  :: { o-rdf:Type(xsd::doubleColon, ?var) } .
http://invalid [ ++ ++ xsd:long 123 = invalid^^type zipMin |  @@ ex::doubleColon  :: { ottr:Triple(_:blank ex:Triple _:b2) , } .
<unclosedIRI [ :noType ] "/" :: ( ottr:Triple(?E, ://noScheme, ?K) "unclosed ) .
:noPrefix [ ottr:Bot invalid , invalid |  xsd:positiveInteger   xsd:gYearMonth , ,  ] { ex:(_:blank, "unclosed) ; } .
"string" :: { (?t, none) , http://invalid(?H',N?, "malformed"^^bad:datatype) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, :noPrefix, ?+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space [ 123 ] ex:Invalid Space :: ( "P*" ) .
ex: [ ! LUB<<List<xsd:normalizedString>>>LUB ?sz_ = 23.14.15 ] :: BASE .
"string" [ ] :: { <unclosedIRI(xsd:invalidType, xsd::doubleColon) , o-rdf:Type(?{, "malformed"^^bad:datatype) } .
ottr:IRI :: { ottr:Triple(?H owl:Type _:b2) , } .
http://invalid [ ++ invalid "string" List<List<( invalid term , (  ) ) ) ,,>> ?= ,  @@ cross ex:Template1 ( ?i` ) :: { ex::doubleColon  
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { (?Et, "2023-01-01"^^xsd:date) ( } .
?var zipMin |  owl:rational  , , ?? xsd:unsignedInt , @@ List :: {  } ;
://noScheme [ ++ ++ xsd:unsignedLong 123  , ,  ] invalid |  @@ ottr:Triple (  ) :: { || ://noScheme ( ++ "unclosed _:blank ,  ) }
?var [ List<List<List<badPrefix:string>>> ?S  ] @@ "string" :: { ottr:Footballer ( 1..2 ^^ xsd:invalidType ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  <unclosedIRI ( ++ ( ?d:N ) ) ,, ) , @@ ottr:IRI ++ ++ ( ?var 1 ,, ) invalid |  :: { ://noScheme } .
bad::IRI [ ++ List<owl:rational>invalid , , xsd::doubleColon ] "unclosed :: BASE .
ex:Invalid Space [ ] :: { ottr:Triple(?F, ex:Template2, ?Z) , } .
http://invalid [ ++ ++ xsd:boolean "string" = invalid^^type , ?! xsd:byte 123 = "unclosed , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { ex::doubleColon(, _:b2) ottr:Triple(_:blank  "|") ) } .
123 ??  = ?0=  :: {  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ? rdfs:Datatype ,  xsd:gYearMonth "string" @@ zipMax |  ottr:IRI (  ) @@   :: ( o-rdf:Type(?), "2023-01-01"^^xsd:date) , o-rdf:Type(?G, _:b1) ) .
123 [ ?!! "string" = invalid^^type ] :: { "B*U5*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?*, ""F"") ) } (
owl:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] cross |  @@ ottr:IRI ( ++ ++ ( "string"^^^xsd:string ,, ) ) ,, ) :: {  } .
http://invalid [  ottr: ?AZs~ , ex:Invalid Space  :: { o-rdf:Type(_:blank, ?u}) } .
bad::IRI ! xsd:gDay  @@ "string"  , @@ ex::doubleColon  :: { o-rdf:Type(_:blank, "unclosed) ottr:Triple(_:blank  _:b1) , } .
:noPrefix [ List<xsd:int invalid> ?4{ , ] ?var :: { ottr:Triple(_:blank, ://noScheme, "2023-01-01"^^xsd:date) , invalid |  <unclosedIRI (  ) }
foot:Type :: BASE
o-rdf:Template1 [ ?? xsd:string 123 = "value"^^invalid , , ++ ++ xsd:language   , ?! xsd:double ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  <unclosedIRI (  ) }
ottr:IRI [ ??   ,   ?T? = ex:Annotation , , ex:Invalid Space ]  :: BASE .
"string" LUB<<List<xsd:negativeInteger>>>invalid List  :: { ottr:Triple(_:blank ex: ?6) o-rdf:Type(_:blank, none) ( } .
:noPrefix [ "malformed"^^bad:datatype ?_ , @@ ex::doubleColon _:blank , (  ) ) ^^ xsd::doubleColon ,, :: { ottr:Triple("unclosed, :Type, ?var) } .
 :: { ://noScheme(?c, "unclosed) , bad::IRI(?B, ""i+"") , } .
http://invalid [ ] :: {  
123 [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple [ ?! rdf:HTML 123 ?d ?!! xsd:token "string" = "unclosed , , cross xsd:dateTime 123 , , xsd:positiveInteger "string" ] badPrefix:string :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
?var [  owl:ObjectProperty ?!: = "unclosed ,  ] { badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ "unclosed ] bad::IRI :: { ottr:Triple(?N, <unclosedIRI, "string") } .
ex: LUB<<List<xsd:nonPositiveInteger>>>xsd::doubleColon ottr: cross |  @@ ottr:IRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank :Type ?b[) , ://noScheme(invalid, none) ( } .
ex::doubleColon :: { o-rdf:Type(?tmi, false) zipMax |  ex:Invalid Space ( ++ ( "unclosed ,  ) ,, ) } .
http://invalid [ xsd:gDay  ?var ?#{h , @ 123 ++ ++ "string" _:blank invalid |  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?!! xsd:language 123 = "value"^^invalid , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: ( :noPrefix(?5yTO, _:b2) , ) .
xsd:Template2 [ ] :: BASE
foot:Triple [ wrong xsd:duration ?4X , , ?? LUB ?|@u ] :: {  
ottr:IRI :: { "F+" } .
123 [ ] :: { ex::doubleColon ( _:blank invalid |  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 [ ottr:IRI "string" , , zipMax |  LUB<xsd:decimal> ?M , bad::IRI @@ cross |  <unclosedIRI ( ++ ++ ( "string"^^^xsd:string ,, ) ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, o-rdf:Footballer, List) ( } .
://noScheme [ List< xsd:positiveInteger> ?$  ] @@ http://invalid 123 ++ (  ) ,, ) :: { (?cy, ""z*"") } .
:noPrefix ?!! xsd:gYear  = invalid^^type ,  :: { o-rdf:Type(?var, ?]`') , } .
ex:Invalid Space [ ?! ottr:Bot ] ottr: :: { ottr:Triple(_:blank ex: 23.14.15) , ://noScheme(_:blank, _:b2)  } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
owl:Invalid Space [ none:foaf:name ?j6 ++ ++ xsd:gMonthDay , ] { o-rdf:Type(?obe, _:b1) ; } .
owl:Type [  LUB<xsd:gMonth>ottr: ?; = "value"^^invalid , xsd:boolean  , , invalid ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple( ex:Invalid Space :Template1) "string" } .
123 [ ] :: BASE .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ ottr:IRI ++ "unclosed , "(*aA*" :: { o-rdf:Type(?Ev, ?xb) , } .
<unclosedIRI :: {  } .
ex: [ ?! xsd:byte 123  , ] xsd::doubleColon :: { ex::doubleColon(_:blank, LUB) ( } .
:noPrefix [  @@ http://invalid ( ++ ++ (  ) ) ,, ) , @@ cross ://noScheme ( invalid term ^^ xsd:invalidType "string" zipMax |  ) :: BASE
?var cross |  xsd:gYear 123 @@ invalid |  "string" (  ) :: ( ottr:Triple(_:blank, badPrefix:Annotation, "invalid"^^ex:) ) .
ex:Template2 ++ 123  ! List "string" , @@ ex:Template1 ( ?[ :: { o-rdf:Type(?-, 23.14.15) , 123  
123 [ ? owl:real ] @@ invalid |  bad::IRI ( ++ ++ ?i ++ "string"^^^xsd:string ,  ) , @@ foot:Template2 ( _:blank ) :: {  } .
ottr:IRI :: BASE .
ex: [ LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>badPrefix:string "E*" , @ http://invalid ( ""{"" ,  ) ) ^^ :noType ,, :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(_:blank, ?A!9) , } .
<unclosedIRI [  ]  :: { zipMin |  :noPrefix ( LUB ) } .
://noScheme [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ?! xsd:dateTimeStamp , ,   @@ cross |  "string" (  ) :: { ottr:Triple(?b <unclosedIRI ) ; 
ottr:Invalid Space [ xsd::doubleColon ] :: { o-rdf:Type(ottr:, _:b1) } ,
o-rdf:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?-F, ex:Type, "invalid"^^://noScheme) , o-rdf:Type(?&, "malformed"^^bad:datatype) (?X, -7+) ) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex:Invalid Space, true)  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?!! owl:DatatypeProperty "string"  ! xsd:date , , ? xsd:NMTOKEN ,  ] "unclosed :: BASE .
:Annotation [ xsd:boolean ?D , @@ "string" ( 123 ) ) :: { xsd::doubleColon } .
bad::IRI ex: @@ wrong ex::doubleColon ( ++ ++ 9+ _:blank ) :: { o-rdf:Type(xsd:invalidType, ?-e) , } .
http://invalid [ ] :: { ottr:Triple(?C;gs ex:Triple ) } .
://noScheme :: { :noPrefix(?c, ""P+"") , } .
?var [ cross |  List<LUB<xsd:decimal>List> ?B ] { invalid |   ( ++ ?x?0& , (  ) ^^ ottr: cross ) } .
?var [  ]  :: { ex:(_:blank, none) , ottr:Triple(_:blank  "malformed"^^bad:datatype) ( }
123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr: ] ?var :: { ottr:Triple(?^ bad::IRI "unclosed) ,  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Invalid Space [ ?!! xsd:short   , ] :: { ex::doubleColon } .
ex:  cross |  @@ ex:Invalid Space ( ++ ?'7 ) :: { o-rdf:Type(_:blank, invalid) , } .
<unclosedIRI [ LUB<<List<owl:DatatypeProperty>>>LUB "string" , ? owl:rational ] @@ ://noScheme _:blank invalid ; :: { zipMax |   ( (  )  ) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ?GQ ) :: { ottr:Triple(xsd:invalidType, owl:Footballer, ?3&o) , }
"string" [ ] :: { (?x2mV, "malformed"^^bad:datatype) } (
badPrefix:Triple xsd:dayTimeDuration  , ,  @@ List : { ottr:Triple(?g xsd:Annotation "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, "unclosed) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(",", "unclosed) :noPrefix } .
ottr:IRI [   123  , ,  @@   @@ cross |  ottr:Template2 ( ?var ) :: { "string" ( ++ ++ "string"^^^xsd:string , ( (  ) ) ) invalid |  ) } ,
ex:Invalid Space [ List<<owl:NamedIndividual>>List :noType badPrefix:string ] :: BASE .
bad::IRI [ foot:foot:clubHistory ?x* , ] ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { o-rdf:Type(?\?u, ?7cK) ,  } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: ?GzQ ) :: ( ottr:Triple(_:blank ex::doubleColon invalid) ) ) .
123 :: BASE
foot:Invalid Space  ?1 @ zipMax |  ottr:IRI (  ) :: { ottr:Triple(?i, o-rdf:Triple, _:b1) 
badPrefix:Annotation ++ ottr:Bot ,  @@ ottr:IRI (  ) ( :: { ottr:Triple(?%! :Footballer "malformed"^^bad:datatype) , }
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { "string" } .
?var [ ++ xsd:duration ?H = "value"^^invalid , ] :: BASE .
http://example.com/:Template1 [ !  = "malformed"^^bad:datatype @@ ex:Template1 ( ?, :: { o-rdf:Type(?TG, http://invalid) , } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ "f+" ] @@  :: { ottr:Triple(_:blank ex: ?j) ex:Invalid Space ++ ++ ?var 1 ,, } .
ex::doubleColon :: { ://noScheme(LUB, none) } .
:noPrefix [ ] :: { ottr:Triple(?)k, :Invalid Space, "unclosed) ; } .
 [ List<List< List<NEList<xsd:gYear>List>>> ?QPY_r  ] { bad::IRI(?5, ottr:Footballer) ,  } .
123 123 ?> , ?? xsd:positiveInteger , ,  @@ ex:Invalid Space ( _:blank  ) @@ zipMin |  123 (  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?<, _:b2) ( }
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMin |  ottr:IRI ( http://example.com/:Triple ) @@ ?var ( ++ ++ "string"^^^xsd:string ,, ) :: {  } .
owl:Template1 [ xsd:o-rdf:Footballer ?6^ ] "string" :: BASE
http://invalid [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { "Q*lu*" } .
  cross @@ ex::doubleColon _:blank , ++ ( (  ,  ) ) ) zipMax |  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [   xsd:gMonthDay 123   ] :: { o-rdf:Type(_:blank, _:b2) ottr:Triple(_:blank bad::IRI none) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  ://noScheme ( abc.-2+ ^^ xsd::doubleColon LUB ) } .
123 [ xsd:gYear "string" , ,  @ cross |  123 (  ) :: { ex:Invalid Space(ex::doubleColon, ?m) , ottr:Triple(_:blank, http://invalid, List) , } .
ex:Annotation [ ?  "string" , ottr:  :: { ottr:Triple(?'i ottr:Invalid Space "invalid"^^:noPrefix) , 
xsd:Annotation  ?V @@ zipMax |  ottr:IRI ( ( ?)A ) ^^ invalid badPrefix:string ) @@ "string" ( ( ""unclosed" ,, ) ) ) :: { ottr:Triple(ex::doubleColon, ottr:Invalid Space, owl:Template2) , } .
 [ ++ LUB<xsd:language> 123 = (  ) ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { "B+" } .
ex:Invalid Space [ ?var ?t , ?? "string" =  , ] 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ex: ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { http://invalid(_:blank, xsd:invalidType) o-rdf:Type(?R, ?|_p+}) } .
bad::IRI [  @@ invalid |  :Type ( _:blank zipMin |  ) ; :: { ://noScheme ++ "string"^^^xsd:string , ++ ++ _:b2 ,, } .
o-rdf:Footballer [ ?! xsd:unsignedShort , ,   xsd:unsignedInt ?( = "value"^^invalid xsd:float List ] @@ LUB :: { ottr:Triple(?$ :noPrefix -1+) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
badPrefix:Triple [ ] :: { o-rdf:Type(?6, "unclosed) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var  owl:ObjectProperty  = 23.14.15   xsd:anyURI , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  ottr:IRI (  ) , @@   :: BASE .
ottr:Footballer [ ] :: { ottr:Triple(_:blank ex:Invalid Space ex:) , } .
:noPrefix [ ++ List ?+ ] @ zipMax |  ://noScheme ( ++ ++ ( ( , ) ) ) _:blank cross |  ) :: { <unclosedIRI ( ""7*"" ,, ) } ;
ex::doubleColon [   :: { ex:Invalid Space(xsd::doubleColon, "2023-01-01"^^xsd:date) } .
bad::IRI :: { ottr:Triple(?n), http://invalid, ?$d) , "string" } .
123 [ LUB<<List<xsd:integer>>> LUB , ,  xsd:gYearMonth 123 , ] "M*c^*" :: { o-rdf:Type(?}, "malformed"^^bad:datatype) ) } .
owl:Annotation [ ottr: ] { ex:Invalid Space(?o(*, false)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Template2 [ ottr:foot:clubHistory ?l ] :: { o-rdf:Type(?-, 1..2) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:IRI ( ( ( "string"^^^xsd:string ) ,, ) ) ?g ^^ xsd::doubleColon  ) } .
o-rdf:Footballer :: BASE .
:noPrefix [ owl:real 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  "string" ( ++ ++ 23.14.15 ) , @@ ex: 123 :: { "0*aG*" }
ex:Invalid Space [ ?! NEList<<LUB<xsd:anyURI>>>invalid  = "string" , @ invalid |  ex::doubleColon ( ++ 6+.abc ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  ]  :: { ottr:Triple(LUB bad::IRI none) o-rdf:Type(_:blank, ?/3W) , ://noScheme(?O, List) , } .
?var [ xsd:invalidType ] :: {  } .
http://invalid [ ] :: { ottr:Triple(?R, ottr:Template2, ""unclosed") 
ex:Template1 xsd:gYearMonth badPrefix:string wrong @@ zipMax |  :Annotation ( _:blank ,  ) :: { ex:Invalid Space(?26, "malformed"^^bad:datatype) ; } (
http://example.com/:Type [ ++ xsd:unsignedInt , ++ ++ ?r = true List<List<NEList<zipMin |  xsd:time ?m>>> ?7 , @@ "w" :: ( o-rdf:Type(?., "2023-01-01"^^xsd:date) ) ) .
ottr:IRI [ ] :: { ex::doubleColon(?Ss, -1+.abc) , } .
foot:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(_:blank, ottr:Template2, 123) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ? "string" = "unclosed , ] "}*" :: BASE .
ex:Invalid Space [ List @@ || http://invalid ( ( ( ?x ) ,, ) ) ^^  ,, ) :: { o-rdf:Type(ex:, ?%) ottr:Triple(?R bad::IRI 4+) } .
<unclosedIRI [  ] @@ :noPrefix ( ++ ?var 1 ) ( :: { ://noScheme(?m, _:b1) , badPrefix:string } .
 ++ ottr: 123 @@ invalid |  :Template1 ( :noType ) @@ ?var  :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Footballer :: BASE
badPrefix:Invalid Space [ ?var ?qDH , ,  xsd:token ,  ] :: { zipMin |  ex:Triple ( "unclosed cross |  ) } )
ex:Annotation [ NEList<xsd:byte>:noType "string" , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI 123 ,  ?&| , ! xsd:dateTimeStamp ?T = "unclosed , , "string" @@ ?var LUB :: { ottr:Triple(_:blank, ://noScheme, ""unclosed") , zipMin |  ottr:IRI ( ( "string"^^^xsd:string ) ) ^^  ,, ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("j*WO*", ?C) ottr:Triple(?= badPrefix:Template1 http://invalid) ; } .
ex:Invalid Space [  List "string" || xsd:int  ] badPrefix:string :: { ex: } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: {  } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: ( (?Pc*MH, -2+) ) .
123 [  ] { <unclosedIRI(?>, "unclosed) , } .
ottr:Triple [ xsd:foot:clubHistory ?]+Y ] @@ ex:Template1 ( ?b :: { ottr:Triple(?1, foot:Type, "invalid"^^ex:Invalid Space) , 
http://invalid [   t-pnd:Punned-Class-ObjectProperty ?K  , ?var ?4 ] @@ invalid |  ottr:IRI ( _:blank ,, ) @@ 123  :: { o-rdf:Type(?Bt, <unclosedIRI) } .
foot:Template1 [ "r+" ] "string" :: { ex: ( badPrefix:string ) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(_:blank, ?n)  } .
bad::IRI :: { ottr:Triple(?M8 ://noScheme abc) , ottr:Triple(:noType, xsd:Template2, _:b2) ; } .
bad::IRI [  @@ <unclosedIRI (  ) , @@ zipMin |  ?var (  ) :: { ex::doubleColon(?U)Tw, "invalid"^^:noPrefix) , } .
o-rdf:Invalid Space [ ?!! NEList<owl:DatatypeProperty>xsd::doubleColon "string" = "unclosed ++ ++ ottr:IRI , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Type [ ] :: { ottr: 
:Annotation true ,, ?h3X , wrong @@ zipMax |  badPrefix:Triple ( ++ ( invalid term ) cross |  ) /: { ottr:Triple(?[, http://example.com/:Footballer, 1..2) ( } .
xsd:Template1 [ xsd:boolean ?1a , ] :: {  } .
:noPrefix [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:IRI "string" ^^ badPrefix:string ,, } )
"string" NEList<owl:DatatypeProperty>LUB "unclosed @@ cross |  bad::IRI (  ) ; :: { ottr:Triple(?var ://noScheme ?-4) } .
ex::doubleColon [  ] @@ ex:Invalid Space ?c\.y%CS ) :: { ex:(_:blank, invalid) ( } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?N, _:b2) ottr:Triple(?#, o-rdf:Annotation, 1..2) ,  } .
123 [  ] List :: { <unclosedIRI(?x, "2023-01-01"^^xsd:date) , }
badPrefix:Invalid Space :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
http://example.com/:Footballer [ ! xsd:time    ?( ,   xsd:duration , ,  ] @ ex:Type ( ++ none , _:blank zipMin |  ) :: BASE
://noScheme [ ?var ] ex: :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( "0*)c*" ) .
foot:Invalid Space [ xsd:decimal invalid @@ ottr:IRI ( _:blank ,  ) , @@ zipMin |  123 ( ++ (  ) ) zipMax |  ) :: { ottr:Triple(LUB, , o-rdf:Triple) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ :noPrefix ++ ++ invalid term ,, :: { o-rdf:Type(?Z, ?/h%) , } .
ex:Invalid Space [ ] :: { cross |  ex::doubleColon ( :noType ) } .
http://invalid :: { ottr:Triple(_:blank badPrefix:Type xsd:invalidType) } .
<unclosedIRI [ ?! LUB<xsd:boolean>List , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
"string" ++ ++  "string" , invalid |  xsd:gMonthDay ?4   :: {  } .
http://example.com/:Footballer [  ] @@ ottr:IRI  ) :: { ex:Invalid Space(?>, "unclosed) , o-rdf:Type(_:blank, _:b1) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , }
:noPrefix [ zipMin |  rdfs:Literal 123 , ] :: { o-rdf:Type(_:blank, ?d>) , ottr:IRI ++ ?var 1 } )
owl:Annotation [ ++ List<<xsd:double>>List @@ ://noScheme ( (  ) _:blank ,  ) , @@ zipMax |  ?var ( ++ ++ "2023-01-01"^^xsd:date ,, ) :: { ottr:Triple(?L http://example.com/:Triple 1..2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ http://invalid ] "%*" :: BASE .
 [ ] :: { ex:(invalid, 123) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  xsd::doubleColon ?~ , , ++ ++ rdf:XMLLiteral  ] @@ invalid |  "string" (  ) @@  ex::doubleColon (  ) :: { xsd:invalidType } .
ex:Invalid Space :: ( ottr:Triple(?x, bad::IRI, 23.14.15) ) .
badPrefix:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  ottr:Footballer (  ^^ :noType wrong ) , :: BASE
xsd:Template2 [ none:foaf:name ?b , ?! xsd:NCName xsd:unsignedInt "string" , ] { ottr:Triple(_:blank, o-rdf:Invalid Space, "malformed"^^bad:datatype)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ++ ++ ottr:Bot ?; = "unclosed , :noType @ zipMax |  ottr:IRI ( "unclosed ) :: BASE .
ottr:Invalid Space [ ] :: ( 123 ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" (  ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?4I, ex:Triple) , o-rdf:Type(_:blank, :noPrefix) , } .
http://invalid  @@ <unclosedIRI ++ ++ (  ) , ++ 8+ ( , ) ^^ invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: { ottr:Triple(badPrefix:string ex: ?yU) , } .
://noScheme [ ? xsd::doubleColon  , ]  _: { ottr:Triple(?bd, owl:Annotation, "unclosed) } 
?var [ 123 ?QX NEList<xsd:gYearMonth>List "unclosed ]  :: { ottr:Triple(?w, xsd:Template1, false)  
o-rdf:Template2 [ ?! 123  , , ++ xsd:duration  ] { ottr:Triple(_:blank, foot:Type, _:b1) ) } .
ex: [ ++ ++ invalid ?\{ , ] { ottr:IRI ( ++ ( , ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Annotation [ wrong xsd:gYear 123 @@ zipMax |  <unclosedIRI ( _:blank "string" ) @@ 123  :: BASE .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: { ottr:Triple(?[z foot:Footballer ?9) bad::IRI(_:blank, http://invalid) } .
 ! xsd:time ,  @@ cross |  :noPrefix (  ) , @@ zipMin |  ex::doubleColon ( _:blank ,, ) :: { ottr:Triple("unclosed, ://noScheme, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?A., 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [    = "malformed"^^bad:datatype , , ?? List<<rdf:XMLLiteral>>ottr: ?Z = invalid^^type LUB ] @@ invalid |  ?var ( ++ ++ "string"  ) :: { o-rdf:Type(?#, abc) , } .
owl:Type ; {  } ..
xsd:Triple [ ( (  ) ,, ) ) ?q ] :: { xsd::doubleColon }
o-rdf:Template2 [ ] :: { o-rdf:Type(?C, _:b2) ( 
ex::doubleColon [ xsd:invalidType ] { ottr:Triple(_:blank, <unclosedIRI, ex:) } .
ottr:IRI [ ?!!  ?5 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Q<clf, ?"i) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var ?? xsd:unsignedByte "string" = 23.14.15  :: { ex:Annotation ( _:blank  ) } .
ex:Invalid Space :: { bad::IRI("string", "2023-01-01"^^xsd:date) ottr:Triple("|+" o-rdf:Invalid Space _:b1) ,  } .
 [ ] :: { :noPrefix(?T, invalid) ( } .
://noScheme [ LUB<t-pnd:Punned-Class-ObjectProperty>badPrefix:string  , @@ cross ex:Template1 ( ?^ ) :: { :noType 
123 [  ] LUB {: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex:Invalid Space [ ?! 123  , ++ ++ owl:ObjectProperty "string"  , , owl:Class invalid ,  ] @@ ?var  :: ( http://invalid(?6, _:b2) ) ) .
123 [ "string" ?>N , ,  ] { ://noScheme(?var, -3+.2+) , } .
ottr:IRI [ xsd:float "string" , ?? ?Wv  , ] ottr: :: BASE .
ex:Invalid Space [  @@ <unclosedIRI (  ) ) :: { o-rdf:Type(?=, "unclosed) , ottr:Triple(_:blank, http://invalid, "malformed"^^bad:datatype)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ! NEList<xsd:unsignedByte>List  = LUB ] zipMin |  @@  :noType :: { bad::IRI } .
:noPrefix [ invalid ] :: { ottr:Triple(?Y owl:Invalid Space ?V) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  ex::doubleColon ( ++ 123 zipMax |  ) :: BASE
xsd:Type [ ] :: ( invalid |  :Template2 ( "invalid"^^ex:Invalid Space ,, ) ) .
o-rdf:Annotation :: { o-rdf:Type(?o, abc) , 
ottr:IRI [  ] { ottr:Triple(ex::doubleColon, ://noScheme, ?f+) ; } .
123 [ "X*" @@   , @@ badPrefix:Triple ( ( "string" , ( , ) ,, ) ) , ++ ++ 23.14.15 ?var ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ? xsd:int  zipMax |  @@ cross |  <unclosedIRI (  ) :: { o-rdf:Type(_:blank, abc.abc) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?xm, xsd::doubleColon) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?zh http://example.com/:Invalid Space ""d"") , } .
http://invalid [ NEList<xsd:invalidType> ?H , ] badPrefix:string :: {  :noPrefix ( ++ (  ) ,, ) } .
"string" [ List<<xsd:normalizedString>>LUB ?c ] @@ invalid |  :Template2 ( invalid ^^ ottr: ) , ; { :noType } .
o-rdf:Annotation :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
owl:Footballer [ ] :: BASE
"string" [ ! xsd:string "string" = "value"^^invalid , ] ?var :: { bad::IRI(_:blank, "unclosed) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(List, abc) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
:Annotation [ ] :: {  } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ( ://noScheme ) , @@ invalid |  ex::doubleColon ( "2023-01-01"^^xsd:date  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ++ ++  = ?2; ,   List<owl:ObjectProperty>xsd::doubleColon 123  ] @@ wrong :noPrefix ( _:blank  ) :: { invalid } .
<unclosedIRI [ badPrefix:string ] :: { ottr:Triple(_:blank ex: 23.14.15) ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) , ottr:Triple(_:blank, bad::IRI, none) } .
123 [  zipMax |  @@ zipMin |  ottr:Template2 ( ++ ++ _:b1 ) @: { owl:Type ( ( , ) , invalid ) ) ^^  , ++ ( ?X%|+ ,, ) ,, } ..
xsd:Invalid Space [ "string" ?(fC , , ?? :noType ?_ ottr:Bot ?kK0Uo1<T @@ "?*PY*" :: BASE
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Triple :: { <unclosedIRI(?var, _:b2) , ottr:Triple(?8$ ex: ex:Invalid Space) , 
123 [ xsd::doubleColon ] zipMax |  @@ ://noScheme _:blank || :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid ( "R" ) } .
 [ ?! NEList<rdfs:Datatype>invalid ] :: {  } .
ex::doubleColon [  @@ LUB :: {  } .
bad::IRI [ xsd:gMonthDay ottr: , ] xsd:invalidType :: { ottr:Triple(_:blank, xsd:Invalid Space, ?}) }
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?%, ""9+"") :noPrefix(?Y(Il`#, 23.14.15) ) } .
:Template1 ++ ++ rdf:HTML  @@  ex:Footballer (  ) @@ cross |  ottr:Annotation (  ) :: BASE
ex:Invalid Space [ ] :: BASE .
ex: :: { ://noScheme } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(_:blank, ??) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?! NEList<<LUB<xsd:integer>>>xsd:invalidType "string" = "value"^^invalid ,  ] 123 :: { o-rdf:Type(ottr:, "5*;)*") , } .
:noPrefix [      :: { ottr:Triple(?#: badPrefix:Type "2023-01-01"^^xsd:date) , http://invalid  } .
ex:Invalid Space ++ xsd:dayTimeDuration ++ ++ rdfs:Literal , @@ invalid |  ex::doubleColon (  ) ( :: { ottr:Triple(?rw, bad::IRI, none)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var [ xsd:boolean ?\ , ,  ] @@  ( _:blank cross ) , @@ zipMin |  bad::IRI ( ++ ( "malformed"^^bad:datatype , (  ) ) ) LUB ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Template1 [ ! badPrefix:string 123 ] @@ cross |  ottr:Triple ( ?( ) ; { o-rdf:Type(?S, ""<+"") , } ...
123 [ ++ ++ NEList<<LUB<xsd:unsignedLong>>>xsd:invalidType 123 = "malformed"^^bad:datatype ,   ?4<| = ( "2023-01-01"^^xsd:date ,   ] :: { o-rdf:Type("v*", ?3) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ ottr:Template1 xsd::doubleColon :: BASE
ottr:IRI [ ] :: BASE .
ex::doubleColon [ "string" @@ zipMin |  ex: ( _:blank , 1..2 ^^ ottr: cross |  ) @@ invalid |  <unclosedIRI (  ) :: { ://noScheme ( ++ ++  ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?e xsd:Footballer _:b1) , bad::IRI } .
http://invalid ? rdfs:Literal "string" = 23.14.15 , ,  @  ?var (  ) :: { ex:Invalid Space(_:blank, "malformed"^^bad:datatype) } .
 [ List<LUB> ?B; , ] List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Type :: ( ottr:Triple(?~, ex::doubleColon, "X+")  ) .
foot:Triple [  owl:NamedIndividual  ?? xsd:dateTime ] @@ zipMin |  ottr:IRI (  ) ) :: { :noPrefix(?), none) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Annotation [ ! xsd:normalizedString  = "unclosed , @@ ottr:IRI  @@  http://invalid ( _:blank ,  ) :: BASE
123  @@ cross <unclosedIRI ( ( , ) ,, ) , @@ ex:Invalid Space ( ++ ++ ( ( none ) , 23.14.15 ,, ) ) ?A ^^ LUB invalid |  ) :: BASE .
:noPrefix [ zipMin |  List<xsd:gYear> ?b ?!! NEList<xsd:decimal>ottr: , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?~(Taw7+, false) , } .
 [ ottr:foaf:name ?' , , rdf:XMLLiteral :noType ]  :: {  } .
ex: [ ] :: { cross |  bad::IRI ( "string" ) } .
?var [ bad::IRI ] "r" :: { ottr:Triple( ://noScheme ?e) } .
ottr:Footballer :: { ottr:Triple(_:blank, badPrefix:Template1, List) o-rdf:Type(?oW, 1..2) , :noPrefix(?V, ""Z+"") , } ;
ex:Triple ottr:Bot "string" zipMax |  @@ || :Template2 ( ++ xsd:Invalid Space ) :: { xsd::doubleColon } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ invalid ] @@ ottr:Triple  ) :: { o-rdf:Type("M", ?>D) ; } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?}, 123) , ottr:Triple(_:blank, , "malformed"^^bad:datatype) } .
:noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ? rdfs:Datatype "string" = "value"^^invalid , ,  ] ex: :: { ottr:Triple(?a http://example.com/:Template2 none) , } .
http://invalid ?!! NEList<<LUB<xsd:double>>>List 123 = ( ( "unclosed ,, ) ,   , @@ cross |  ex:Invalid Space ( ++ ( ?@ )  ) :: { ottr: } .
<unclosedIRI [ ] :: BASE
123 [  xsd:gYear , ! owl:ObjectProperty  @@ <unclosedIRI  @@ ottr:IRI (  ) :: { ://noScheme(_:blank, _:b1) "string" (  ) } ..
foot:Annotation [ zipMin |  xsd:normalizedString  ] @ invalid |  :Type ( _:blank ) :: {  }
ex:Triple [ ] :: { http://invalid(_:blank, ?L2) invalid } .
 [ NEList<<LUB<owl:real>>>LUB "unclosed , , ++ ++ xsd:dateTime  ] @@  ottr:IRI (  ) @@ "string"  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI ottr:foot:clubHistory ?t , xsd:unsignedByte "string" , @@ ://noScheme ( ex:Invalid Space ) ) :: BASE .
<unclosedIRI [ ?! xsd:short ?Kh = 23.14.15 ] :: { o-rdf:Type(_:blank, _:b2) , ottr:Triple(_:blank ex::doubleColon "2023-01-01"^^xsd:date) , } .
123 :: { invalid |  ex: ( ( ( , ) ) ) _:blank , ++ ++ (  ,, ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?|, o-rdf:Annotation, ?var) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: {  }
foot:Template1 [ xsd:invalidType ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
owl:Template2 [ zipMax |  xsd:nonPositiveInteger 123 ] { o-rdf:Type(List, "malformed"^^bad:datatype) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { ex:(?f5td, ?_) }
ex:Invalid Space ?var @@ 123 ++ invalid term , _:blank ; :: { ottr:Triple(_:blank, ://noScheme, ) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
xsd:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "2*" :: { o-rdf:Type(bad::IRI, ""unclosed") , } .
 [ cross |  xsd:NMTOKEN ?i ] @@ <unclosedIRI (  ) , @@ invalid |  ex::doubleColon ( ++ ++  wrong ) :: {  } .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ] :: {  :noPrefix ( 23.14.15 ^^ LUB ,, ) } .
:Triple [ NEList<<LUB<xsd:language>>>:noType 123 , ?? List "string" ,  :: { xsd:invalidType 
"string" ? "string"  , ,  xsd:base64Binary   ; { o-rdf:Type(_:blank, "unclosed) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("string", o-rdf:Template1, "n+") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ? List<<rdfs:Literal>>LUB 123 = "string" , , cross |  xsd:Name ?7 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ! ottr:   ] <unclosedIRI :: BASE .
ottr:IRI [ xsd:gYear ?k ] @@ cross ex:Template1 ( ?Rq ) :: { ex:Template2 ( _:blank , badPrefix:string ) } .
 :: { ottr:Triple(?_P ex:Invalid Space owl:Invalid Space) , } .
http://invalid ://noScheme  :: { ex:(_:blank, ?Jdr*) :noType } .
:noPrefix [ NEList<List<( ?ZH ) ) ,,>> ?$ , @@ List :: BASE
ex::doubleColon [ ] :: { o-rdf:Type(?5+', "invalid"^^://noScheme) ; } (
123 ++ ++ xsd:boolean  @@ zipMin |  ottr:IRI (  ) , ': { ottr:Triple(?"V http://invalid 23.14.15) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ "string" ] :: BASE .
ex:Triple [ ? rdfs:Datatype , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ")+" :: { o-rdf:Type(_:blank, none) , ottr:Triple(_:blank ://noScheme "unclosed) ( } .
ex::doubleColon [ ?!! List<<xsd:normalizedString>> "string" = "unclosed @@ ottr:IRI _:blank :: { ottr:Triple(invalid, :Annotation, :noPrefix) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?i, ?}-) , } .
http://invalid [ zipMin |  List<xsd:unsignedLong> ?< ++ ++ xsd:gDay ,   xsd::doubleColon 123 , ] zipMax |  @@  bad::IRI (  ) :: { :noType } .
ex:  @@ ?var ( badPrefix:string ) :: { <unclosedIRI ( ++ "2023-01-01"^^xsd:date , ++ ++ ?xz ,, ) } .
ex:Invalid Space [ ] : {  } 
owl:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
foot:Template2 xsd:nonNegativeInteger "unclosed , xsd:date  @@ xsd:invalidType :: { o-rdf:Type(?F, _:b1) o-rdf:Type(?d, _:b2) , }
123 [  123  ! LUB<xsd:token>invalid ?8 = "malformed"^^bad:datatype , xsd:duration  , ] ex: :: { o-rdf:Type(_:blank, "P*") } .
ex:Footballer [ "string" ,  ?Hi> @@ <unclosedIRI  ; :: {  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ottr:IRI ( ++ _:b2 "string" ) } .
 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ++ ottr:IRI , , List @@ cross |  ex::doubleColon ( ?var 1 ^^ ottr: , ( ( _:b1 ,, ) ) ) wrong ) @@ zipMin |  http://invalid ( _:blank ) :: { xsd::doubleColon } .
:noPrefix [  ] : { ottr:Triple(?G, ://noScheme, ?{) , } 
?var [ ] :: ( ottr:Triple("X+" :Template2 "unclosed) , ex::doubleColon(?<p, 1..2) ) ) .
owl:Invalid Space [   xsd:gYearMonth , ]  :: { ottr:Triple(_:blank ex: 23.14.15) ottr:Triple(_:blank <unclosedIRI "malformed"^^bad:datatype) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(_:blank, ?S) ottr:IRI _:blank ++ ""E"" , 123 ,, } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ NEList<"string" ?+%?Q8> ?:  ] @@ cross ?var (  ) , @@ http://example.com/:Template2 ( ( , ) ^^ badPrefix:string zipMin |  ) :: BASE .
bad::IRI [ zipMax |  owl:AnnotationProperty ?T} ] :: { ottr:Triple(List, <unclosedIRI, none) } .
ex: [ ] :: { o-rdf:Type(?XMn1-G3, 123) , } .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ List<<owl:DatatypeProperty>>:noType "string" , @@ invalid |  ://noScheme ( :noPrefix ) @@  :Invalid Space ( ++ ++ ( ( false ,  ) ) ) ) :: {  } .
bad::IRI  cross |  @@ cross |  ex::doubleColon (  ) :: { ottr:Triple(_:blank http://invalid _:b2) , "H*D0*" } 
ex:Footballer [  xsd:time , xsd:unsignedShort  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: BASE
ottr:Annotation [ invalid ] { ottr:Triple(?m!, o-rdf:Type, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   xsd:anyURI "string" = "value"^^invalid , ] { ex::doubleColon(_:blank, ?`) ( } .
o-rdf:Invalid Space [ ] :: BASE .
?var [  ] :: { ://noScheme invalid term ^^ List ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?VnAPU, _:b1) , } .
:noPrefix [ ?!! NEList<xsd:hexBinary>badPrefix:string  = ?] ] @@ || http://invalid ( ( 123 ,, ) ) ) @@ <unclosedIRI (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ?? 123  ottr:Bot ottr: ,  @@ zipMax |  bad::IRI ( _:blank ,  ) ) :: { ottr:Triple(ex:Invalid Space  123) } .
"string" [ "string" ?5 , ,   :: { ottr:Triple(_:blank, , "malformed"^^bad:datatype) "G*;f*" } .
owl:Template1 [ xsd::doubleColon ] :noType :: { ottr:Triple(?/z1, ex:Footballer, 23.14.15) ,  }
xsd:Template2 : { ottr:Triple(?K<v, :Type, _:b2) ; } ..
?var [ "C+" ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
owl:Triple invalid |  List<<owl:ObjectProperty>>:noType ?0 @ ottr:IRI (  ) :: BASE .
 [ owl:AnnotationProperty List ! xsd:language "string" = invalid^^type , , xsd:Name  ,  ] "string" :: { o-rdf:Type(bad::IRI, 1..2) , } .
://noScheme [ ] :: { :noPrefix false ++ (  ) ) } .
<unclosedIRI :: { invalid } .
ex: [ ? xsd:yearMonthDuration , ] :: { ex::doubleColon(?xq%4, ??T) , ottr:Triple(_:blank ottr:Footballer badPrefix:string) , 
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  ex:Invalid Space (  ) ; :: ( ottr:Triple(_:blank, ://noScheme, _:b1) (_:blank, "unclosed) ) .
123 [  rdfs:Datatype 123  ?!! LUB 123 @@ cross ex:Template1 ( ?v ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: BASE .
123 [ ?var @@ zipMin |  badPrefix:Annotation ( xsd:invalidType ) :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ottr:Triple(?L http://example.com/:Template2 "Y*") , } .
 [ ] :: { ex:Invalid Space(ex::doubleColon, ?HUP>) ottr:Triple(_:blank, ex:, ""unclosed") ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?lN, :Type) ; } .
<unclosedIRI [ wrong List<<xsd:gMonth>>List  ,  ] LUB :: { ://noScheme(?an, 23.14.15) } .
http://invalid [ "string"^^^xsd:string ,, ?\-# , ,  ?m  xsd:unsignedShort "string" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
:noPrefix ++ ++ owl:Class 123 = "value"^^invalid , @@ owl:Triple ++ ++ (  ) ( "invalid"^^ex:Invalid Space , ?pxz1 ) ) ,, , :: { "string" (  ) 
ottr:Template1 [ ++ xsd:NCName "string" = "malformed"^^bad:datatype , , rdfs:Resource badPrefix:string , zipMax |  @@  ex:Invalid Space (  ) :: { xsd::doubleColon }
ottr:IRI [ ottr: ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
ex: :: { o-rdf:Type("O*f$*", "malformed"^^bad:datatype) , ottr:Annotation ++ ( 123 ,, ) ) ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?? xsd:anyURI ?4B = "unclosed , @@ wrong ex:Invalid Space ( _:blank , ?var 1 ) :: BASE .
ex::doubleColon  ?} , ++ ++ "string"  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix :: { <unclosedIRI(?#|, ?^AKFy) , } .
http://invalid [ ] :: { ottr:Triple(_:blank o-rdf:Footballer 123) ; } .
://noScheme [  ]  :: { List } .
 [ zipMin |  LUB<<List<owl:AnnotationProperty>>>:noType  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?,, ://noScheme, 1..2) bad::IRI(?[_e, _:b1) 
?var [ xsd:integer LUB , , ?!! xsd::doubleColon ?j , ] :: BASE
ottr:IRI :: (  ) .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?ne ) :: { ottr:Triple(xsd:invalidType ottr:Invalid Space true) , } .
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 [   123 = "unclosed ,  ] @ zipMax |  ex: ( 123 ) :: { o-rdf:Type(?A, ?;) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ xsd:int  foot::Triple ?( ] :: { ottr:Triple(_:blank, ://noScheme, "/*") ex:Invalid Space ( ++ ( ?J , o-rdf:Template2 ) ) , invalid term  ) } .
<unclosedIRI [ LUB<List<<xsd:time>>badPrefix:string> ?w , ] xsd::doubleColon :: { ottr: } .
ex::doubleColon  @@ ?var _:blank @@  :noPrefix ( (  ) ^^ List invalid |  ) :: BASE
badPrefix:Type [ ?!! xsd:unsignedShort , , xsd:boolean  ,  LUB "string" ! xsd:gMonth "string"  ] { ://noScheme(?|, _:b1) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?c^, -9+) , } )
ottr:IRI :: BASE .
bad::IRI [ xsd:foaf:name ?b ] @@ "string" :: { ex:(:noPrefix, 23.14.15) } .
?var [ ] :: { o-rdf:Template2 :noType }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?? List<<xsd:int>>LUB   ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: { ottr:Triple(_:blank <unclosedIRI "y*?I*") , } .
://noScheme ? badPrefix:string ?e , ,  @@ ex:Invalid Space ( _:blank ,  ) @@ invalid |   ( _:blank _:blank zipMax |  ) :: { ottr:Triple(?CK, ex:Annotation, ?{@) , } .
http://invalid [ invalid @@ cross |  123 ( invalid term ,, ) , @@ zipMin |  owl:Footballer ( ++ _:b1 ) :: {  } .
badPrefix:Triple [ List<List<( "string" , (  ) ) ) ,,>> ?"t0 , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 [ ?! 123  ,  xsd:unsignedByte "string" ,  ] { o-rdf:Type(_:blank, none) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { <unclosedIRI(?Dw~, "malformed"^^bad:datatype) "s*" } ...
123 [  ] @@ invalid |  ottr:IRI ( "string"^^^xsd:string ^^ xsd:invalidType ,, ) , @@ ex:Triple ( _:blank ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?Z , ( _:b1 ,, ) ?/09 , , "C*" ] <unclosedIRI :: BASE .
ex:Invalid Space [ zipMax |  NEList<xsd:long>LUB 123 ,  owl:real ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ bad::IRI (  ) ) :: { o-rdf:Type(badPrefix:string, ?var) 
:noPrefix [ "string" ?{zX=( ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank owl:Annotation ?k}) http://invalid(?Vf, "unclosed) ( } .
://noScheme [ ] :: { ottr:Triple(?o'U, ex::doubleColon, 1..2) , } .
ex: xsd:date invalid , @@ cross foot:Template1 ( ++ "2023-01-01"^^xsd:date  ) @@ cross |  o-rdf:Footballer ( ++ ++ none  ) :: BASE
badPrefix:Template2 :: { xsd::doubleColon } .
ottr:Type ?! List "string" , @@ "unclosed :: { (_:blank, "malformed"^^bad:datatype) , zipMin |  ottr:IRI (  ) }
 [ ?! owl:ObjectProperty  = "unclosed , ] @ cross |  ottr:IRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?vs badPrefix:Template1 ?var) , } .
123 [ invalid ] ex:Invalid Space :: { ottr:Triple(_:blank, ex:, ?T~) ; } .
<unclosedIRI  @@ ex::doubleColon ( "string"^^^xsd:string ) , :: { :noPrefix(".+", abc) , o-rdf:Type(?q, _:b1) } .
http://invalid :: {  } .
://noScheme [ ] :: {  } .
"string" [   xsd::doubleColon ?Y ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ++ ++ 123 = 23.14.15 , ?!! LUB<owl:Class>:noType , , List<ottr:> ?< zipMin |  xsd:unsignedLong ?X" , , xsd:duration ?'W6 @@ xsd:Invalid Space ++ "string" invalid |  ; { || bad::IRI ( _:blank ,, ) } ...
123 [ ] :: { ottr:Triple(, :Template2, ?M) , } .
:noPrefix :: BASE .
owl:Template1 [ "n+" ] { ex::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: ( ++ (  ) ,, ) @@ cross |  ://noScheme ( _:b1 ^^ badPrefix:string zipMax |  ) :: { ex:Invalid Space(?pZ@8L, -9+) ; } .
http://invalid [ owl:Class xsd::doubleColon  @@ <unclosedIRI ++ ++ ?var 1 _:blank , @@ wrong bad::IRI ( invalid ) :: { o-rdf:Type(_:blank, ?var) } .
"string" [  , ( "2023-01-01"^^xsd:date ,, ) ) ?H# , ] :: { ottr:Triple(?:e  23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple ?? NEList<<LUB<xsd:gDay>>>LUB ?6 = 23.14.15 @@ invalid |  ex:Invalid Space (  ) , :: {  }
badPrefix:Type [ ! xsd:date , zipMin |  xsd:string 123 , ,  ] xsd:invalidType :: { ottr:Triple(?Y ex::doubleColon none) 123  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ NEList<<LUB<xsd:string>>>List "string" , ]  :: { ottr:Triple(_:blank :Triple _:b1) o-rdf:Type(_:blank, "malformed"^^bad:datatype) , "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?!! owl:real , , NEList<"L*"> ?w ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
badPrefix:Type [ ] :: { :noPrefix(ex:, ?}8) , } .
<unclosedIRI [ xsd:invalidType @@  :: { http://invalid ++ ++ ?Bd  } .
bad::IRI :: { ottr:Triple(?{2g_[9l5, ex:Invalid Space, :noType) , } .
://noScheme ?   , ++ ?\y^`.>k&$ = 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ ?var ( ( "string"^^^xsd:string ) ) invalid ^^ badPrefix:string ) :: { ex::doubleColon(?m, 1..2) }
ottr:Annotation [  ] "b" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
xsd:Invalid Space [  xsd:unsignedLong 123  ] { ottr:Triple(_:blank, http://invalid, 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?<, LUB) , zipMax |  ottr:IRI (  ) } .
:noPrefix [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: { ottr:Triple(_:blank ://noScheme 8+.abc) o-rdf:Type(bad::IRI, ?PAM) }
ex:Invalid Space [   invalid  , ,  @ http://example.com/:Template2 ( _:blank , ?var ) :: { ottr:Triple("z*", owl:Invalid Space, none) ) } .
http://invalid [ xsd:unsignedByte ?9  LUB<xsd:gMonth>List 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [  ] { :noType } .
 ++ xsd:decimal "string" = invalid^^type @@ "b" :: BASE
<unclosedIRI [  xsd:gMonthDay ?gF = "unclosed , ] xsd:invalidType +: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?var ?`p , , ?? xsd:short  ] @@ xsd:Type  @@ invalid |  123 (  ) :: ( o-rdf:Type(?G[, _:b1) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template2 [ ? List<xsd:integer>:noType @ ottr:IRI ++ -4+.abc ,, :: { bad::IRI("unclosed, ?Q8) } .
"string" :: BASE .
://noScheme [ !   , , xsd:NCName ?0+ , ] :: {  } ;
:noPrefix ?! owl:rational ,  @@ ex: (  ) ) :: { ottr:Triple(?dN http://invalid "malformed"^^bad:datatype) , } .
ex::doubleColon [ rdfs:Literal ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { badPrefix:string } .
<unclosedIRI [ invalid ] invalid |  @@ cross |   ( ++ ++ ( invalid term ,, ) ) zipMin |  ) :: { o-rdf:Type(_:blank, xsd:invalidType) , ottr:Triple(?b=, xsd:Template1, badPrefix:Triple) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 [ ] ; { <unclosedIRI(?T, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Annotation [ ?? xsd:normalizedString "string"   :: (  :Type (  ) ) .
://noScheme [ bad:foaf:name ?/ , ] "b*=U*" :: { ottr:Triple(?y% ex:Invalid Space bad::IRI) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex:Invalid Space, ?`?) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation :: { (xsd:invalidType, "malformed"^^bad:datatype) , } .
123 [  @@ invalid |  http://invalid (  ) :: {  } .
:noPrefix [ ?? xsd:hexBinary cross |  xsd:positiveInteger  , ,  ] @@ ex:  , @@ <unclosedIRI (  ) :: { ?var } .
ex::doubleColon ? ?[ = "string" , LUB<xsd:int>List 123 @@ :noType :: (  "string" ( ++ (  ) ) ) .
badPrefix:Footballer [ ] :: { o-rdf:Type(?4O, true) , 
ottr:Type [ xsd::doubleColon ] @@ zipMax |  :Template2 ( ?>a] ^^ ottr: zipMin |  ) ( :: BASE
123 [ ] :: BASE .
ex:Invalid Space [ "string" ?^ ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ http://invalid ] @@ ottr: :: { ottr:Triple("o" ottr:Type ?.7) , } .
ex:Triple [ ++ ++ xsd:unsignedShort  = 23.14.15 , ?!! xsd::doubleColon ?# ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(_:blank, "unclosed) , o-rdf:Type(?u\v, ?var) } .
bad::IRI [  ] badPrefix:string :: { ottr:Triple(?R, ex::doubleColon, _:b2) LUB } .
 ]: { invalid |  <unclosedIRI ( ++ ++ ""6+"" 123 ^^  zipMax |  ) } ...
://noScheme [ ! rdfs:Datatype , ,  @@ ottr:IRI (  ) @@ <unclosedIRI  :: { :noPrefix(?ct, "malformed"^^bad:datatype) ; } (
foot:Invalid Space NEList<<LUB<xsd:hexBinary>>>xsd:invalidType invalid , wrong @@ cross |  http://example.com/:Template1 ( ( , ) , _:blank ,, ) :: ( ottr:Triple(?a badPrefix:Annotation _:b1) , ) .
 [  ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Annotation [ xsd:invalidType ] "S*jQ*" :: BASE
?var [ zipMax |  List<xsd:gDay> ?%P , , ?? :noType 123 , NEList<<LUB<xsd:nonPositiveInteger>>>invalid ex:Invalid Space , || @@ ottr:IRI (  ) ) ^^ badPrefix:string :: { 123 } .
bad::IRI [ ] :: { o-rdf:Type(_:blank, <unclosedIRI) :noPrefix(?tZ, ?n) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon :: { ottr:Triple(ottr: ottr:Type 23.14.15) } .
ex: bad:boolean ?$[   ?A\  @@ cross |  ://noScheme ( ( , ) , LUB ) *: { http://invalid ( ++ ++ _:b1  ) } ..
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?~, bad::IRI, "unclosed) ) ) .
foot:Template2 [ ++ xsd:nonNegativeInteger , ,  ottr:Bot , , ?!! xsd:duration "string"  , ,  ] { ottr:Triple(_:blank, http://example.com/:Footballer, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2 :: { zipMax |  ottr:IRI ( invalid ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("string", ex::doubleColon, "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ?! LUB<<List<owl:NamedIndividual>>> ?o =  @@ 123 (  ) @@ ex:Invalid Space ++ 123 :: BASE .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ex: :: { ://noScheme(?T], xsd::doubleColon) , o-rdf:Type(_:blank, ?Y() "e*tN*" } .
 [ ] :: { ottr:Triple(?.w ottr:Annotation "2023-01-01"^^xsd:date) ; } .
<unclosedIRI [  xsd:normalizedString , :noType @  bad::IRI ( ++ ++ ( _:b1 ) ) zipMin |  ) :: BASE
?var [ none:foot:clubHistory ?} xsd:gYearMonth "string" , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Footballer [ ?!! LUB ?7| , ,  ]  :: { (?;i, none) }
http://example.com/:Template1 [ ?? xsd:dayTimeDuration ?B = invalid^^type , , rdfs:Datatype "*" ] {  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ http://example.com/:Footballer  :: { || "string" ( ( ?{o ) _:blank , ++ "malformed"^^bad:datatype ) } .
ex::doubleColon [ ? LUB<xsd:gMonth>LUB , xsd:Name  , ] :: { ottr:Triple(?i, o-rdf:Template1, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 List<List< List<xsd:normalizedString>>> ?K&l , ,  zipMin |  @@ bad::IRI ( badPrefix:string ) :: BASE .
<unclosedIRI [ ] :: {  } .
ex:Invalid Space :: { o-rdf:Type(_:blank, "unclosed) , ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noPrefix ://noScheme ?_) } .
http://invalid [  ] invalid :: { ex:(?fr`\w, owl:Annotation) ) 
123 [ xsd:NMTOKEN xsd::doubleColon ] @@ cross ex:Template1 ( ?7 ) :: BASE
foot:Invalid Space [   xsd:boolean 123   ] @@ invalid |  ex::doubleColon (  ) , @@ ottr:IRI (  ) :: ( o-rdf:Type(?U, abc) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:IRI  @@ || "string" ( _:blank ( "malformed"^^bad:datatype ) ^^ List ) @@ ex: ( "f" ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation :: BASE .
 [ ] :: { ex:Invalid Space(_:blank, ex::doubleColon) ) } (
<unclosedIRI [ ?var ?j , cross |  @@ bad::IRI  :: { ottr:Triple(_:blank, ://noScheme, none) , ottr:Triple(_:blank http://invalid "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Xl, ?"i) 123 } .
:noPrefix [   123 ?? xsd:NCName , ? rdf:HTML , ,  ] :: {  bad::IRI (  ) } .
foot:Template2 [ ottr: ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Type [ LUB<<List<xsd:unsignedShort>>>LUB "C*u^*" ] xsd::doubleColon &: { ottr:Triple(:noType, ottr:Triple, abc.-1+) } .
http://example.com/:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ "G*" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] @@ "string" _:blank , @@ invalid |  ex:Template2 ( "string"^^^xsd:string ,  ) :: { o-rdf:Type(LUB, "*+") ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space [ ?var @ ottr:IRI ( ++ ++ ( ?I@ ,, ) )  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
<unclosedIRI ?! List<t-pnd:Punned-Class-ObjectProperty>List 123 = "malformed"^^bad:datatype @@ || :noPrefix ( invalid ) :: { http://invalid } .
bad::IRI [ ] :: {  } .
ex: [ ?!! xsd:token  = "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { ottr:Triple(_:blank, , "unclosed) } .
123 [   xsd:gYearMonth , , ++ ?U = ottr: xsd:NCName ?w , ] :: { ://noScheme(?<, ?\) , zipMax |  badPrefix:Template1 ( false ^^  ++ ( _:b2 ) ,, ) } )
:Triple [  badPrefix:string ?p? , owl:DatatypeProperty "8" List<"Q*"> ?X ] { ottr:Triple(?N http://example.com/:Footballer none) , } .
xsd:Type ]: { ottr:Triple(?9, o-rdf:Invalid Space, ""g*&W*"") ottr:Triple(?C( foot:Annotation ottr:Type) ; } ..
ottr:IRI [ "3+" @ zipMax |  bad::IRI ( ?=] ^^ invalid ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [: { ottr:Triple(://noScheme, xsd:Footballer, ?r) , :noPrefix(?F, ?var) ( } .
badPrefix:Type [ List<List<List<badPrefix:string>>> ?P4    = "value"^^invalid , ] @@ List :: { ottr:Triple(_:blank  23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?? xsd:hexBinary "string" = invalid^^type ] ottr: :: { o-rdf:Type(?W, _:b2) } .
<unclosedIRI "string" ?1p , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ http://invalid ( _:blank , abc cross |  ) :: { ex:(?Q, "unclosed) , } .
ottr:Annotation [  ] :: { ex::doubleColon ++ ++ ?var 1 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
owl:Template2 [ ] :: BASE
o-rdf:Triple [ ? NEList<<LUB<xsd:token>>>LUB 123 = (   , , xsd:integer 123 , ,  owl:ObjectProperty , ]  :: {  }
ottr:Invalid Space [  @@  ( (  ) cross |  ) :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, owl:Template1, ?gU) , o-rdf:Type("t", 123) :noType } .
ex::doubleColon [ List<<xsd:integer>>ottr: ?\ ] :: { ottr:Triple(?r http://invalid 23.14.15) ; } .
bad::IRI [ ++ xsd:short 123 = 23.14.15 , ?! xsd:nonNegativeInteger  ]  :: { ex:(?k<, "malformed"^^bad:datatype) } .
ex:Invalid Space zipMax |  xsd:base64Binary "string" , @@ ex:Triple _:blank , ++  @@ zipMin |  "string" ( List ) : { ://noScheme(?I, "invalid"^^<unclosedIRI) , } 
foot:Footballer [ ] :: {  :Template2 ( ++ ++ "string"^^^xsd:string ,, ) }
badPrefix:Type [ ++ ++   , ,   xsd:gDay  @@ ://noScheme  , @@ invalid |  bad::IRI ( (  ) ) ^^ LUB  ) :: { (?M, ""L*,v*"") ) 
ottr:IRI [ ++ ++ badPrefix:string ?X   List<owl:ObjectProperty>ottr: @ ?var ( _:blank ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple :: { ottr:Triple(?Eb, ex:Invalid Space, "malformed"^^bad:datatype) , } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex:Type ?P4) ) } .
://noScheme invalid @@ ex::doubleColon :: { "string" } .
http://invalid [ rdfs:Datatype LUB , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ("unclosed, "?*") cross |  :noPrefix ( ++ ++ "string" ++ "string"^^^xsd:string , ""k+"" ^^ List  ) } .
ex: [  ] xsd:invalidType :: {  } .
<unclosedIRI [ ] %: { o-rdf:Type(?S, "invalid"^^) , bad::IRI(?6K, 1..2) } 
123 [   = invalid^^type , , invalid |  rdfs:Resource 123 , ] @@ || ottr:Annotation (  ) :: BASE
http://example.com/:Template2 ?var ?T ?? xsd:base64Binary 123 = "value"^^invalid @@ bad::IRI  , @@ ottr:IRI  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" [ foot:foaf:name ?R6  :: { ottr:Triple(??(, <unclosedIRI, "unclosed) (ex:, ?7) , } .
foot:Type [ zipMax |  xsd:nonPositiveInteger ?=Iq  ] @@ 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { "unclosed } .
://noScheme [ List<<xsd:NCName>>ottr: badPrefix:string , , ?? LUB "string" , invalid ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { o-rdf:Type(_:blank, :noType) , } .
:noPrefix :: { bad::IRI (  ) } .
ex:Invalid Space List<List<zipMin |  List<xsd:int>>> ?m; , invalid |  @@ ex::doubleColon ( "2023-01-01"^^xsd:date , 123 ) ^^ xsd:invalidType  :: { ottr:Triple(?Ve0&> http://example.com/:Invalid Space _:b2) }
?var [ ! xsd:dayTimeDuration , , ?   , @ || ottr:Template2 ( ++ ++ (  ) ) ,, ) %: {  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ List<ottr:Bot> ?< ://noScheme ] @@  xsd:Invalid Space ( _:blank ) ) :: BASE .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 :: {  } .
ex: [ ] :: { ottr:Triple(?,Zt| :noPrefix ?xI) , } .
 [ ?!! xsd:gMonthDay ] "unclosed :: { ottr:Triple(_:blank, owl:Footballer, List) ; } .
ex:Invalid Space [   xsd:time 123 = "value"^^invalid , List<List<invalid |  List<xsd:unsignedByte>>> ?E , || @@ ex::doubleColon (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
<unclosedIRI   :: { o-rdf:Type(?.4&, _:b1) , http://invalid(:noType, _:b2) } (
?var [ ++ ++   , ,  @@ zipMin |  "string" (  ) :: ( 123 ++ ?var 1 , _:blank cross |  ) .
ottr:Type [  xsd:NMTOKEN ?O_ = 123 "string" ] :: BASE .
bad::IRI : {  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [   :: { http://invalid(?b, ?so(z) , } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: <unclosedIRI @@ zipMin |  ex::doubleColon ( _:blank ,, ) :: {  ( ++ ++ "string"^^^xsd:string , 23.14.15 ^^ ottr: cross |  ) } .
ex:Invalid Space [ ++ ++ NEList<<LUB<xsd:unsignedLong>>>xsd:invalidType  = "malformed"^^bad:datatype ] :noType :: { "=" } .
:noPrefix [ zipMax |  xsd:short "string" ,  ] @@ 123 (  ) , @@ ?var (  ) :: { o-rdf:Type(_:blank, xsd::doubleColon) , ottr:Triple(_:blank ://noScheme "2023-01-01"^^xsd:date) 
ex:Footballer [ ] :: ( ottr:Triple(?p, :Template1, _:b2) ottr:Triple(LUB http://example.com/:Triple foot:Annotation) , ) .
badPrefix:Template2 [ NEList<rdfs:Literal > ?f@$ , @@ || owl:Invalid Space ( ++ ( ?k ,, ) ) :: BASE
:noPrefix [   :: { o-rdf:Type(?var, ?_") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Triple :: { zipMin |  ottr:IRI (  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ++ List<<xsd:yearMonthDuration>>invalid 123 = "value"^^invalid , || @@ ex: ( invalid term , "2023-01-01"^^xsd:date ) ) ^^  , ( ?5? ,, ) ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { LUB } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { ottr:Triple(?C, ex:Footballer, "unclosed) ( } .
ex::doubleColon [ ] :: { ottr:Triple(_:blank http://invalid bad::IRI) , } .
ex:Invalid Space [ ?? xsd:dateTime ,  ?bvM xsd:dayTimeDuration "string" ] @@ owl:Annotation ( :noType ) @@  123 ( ++ 3+ cross |  ) :: { <unclosedIRI(?s, "invalid"^^://noScheme)  
xsd:Template1 [    , , xsd:invalidType ] : { o-rdf:Type(?., 23.14.15) } .
:Invalid Space [ 123 ?\w , , zipMax |  xsd:positiveInteger "string" , ] { ottr:Triple(_:blank, ex:, _:b2) ) } .
123 [ ?? List    :: BASE .
bad::IRI :: { badPrefix:string 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  LUB<xsd:integer>LUB , , "5" @ foot:Footballer ( ex:Invalid Space ) :: { ottr:Triple(?v ex: ?var) } .
<unclosedIRI [ rdfs:Datatype xsd::doubleColon , ]  :: { :noPrefix(_:blank, ?&) ottr:Triple(_:blank, ://noScheme, "malformed"^^bad:datatype) ,  } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [   xsd:token ?SW = 23.14.15 ] invalid :: { o-rdf:Type(ottr:, 23.14.15) , } (
"string" [ ?!! 123  , xsd:int "string" ! xsd:base64Binary  ] { ottr:Triple(_:blank :Triple abc.abc) , } .
http://invalid [ ] ; { ottr:Invalid Space ( , ) , ++ ?@ } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple("unclosed http://invalid 1..2) ) } .
ottr:IRI [ ?!! ?] = ( false , ( :noType  ,, ) , , "string" ?H+)D.< , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(_:blank, ?var) , ://noScheme } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type :: { ottr:Triple(?r, foot:Invalid Space, ?s[) , } .
123 [ ?! xsd:nonNegativeInteger  ] badPrefix:string :: { o-rdf:Type(?~(, _:b1)  } .
 [   List<<xsd:duration>>xsd:invalidType  = "string" @@ wrong bad::IRI ( 123 ) :: { :noPrefix(?M, ""c*"") } .
ex:Invalid Space [ List ] @@ http://example.com/:Annotation ( ++ ++ ( "string"^^^xsd:string ,, ) ,, ) , @@ zipMin |  owl:Triple ( ottr: ) :: ( <unclosedIRI _:blank , badPrefix:Footballer ^^ xsd::doubleColon  ) .
xsd:Template1 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
:Invalid Space ! xsd:unsignedShort ,  @@ ottr:IRI  @@  ex: (  ) :: { ottr:Triple(?', ottr:Template2, "unclosed) , 
badPrefix:Invalid Space [ ++ ottr: 123 ] :: BASE .
"string" [ ?? xsd:dayTimeDuration , ,  ] @@ ex: :: { ottr:Triple(_:blank, ://noScheme, none) , ex::doubleColon(_:blank, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ?x , ] 123 :: { zipMin |  http://invalid ( ++ -7+ _:blank zipMax |  ) } .
<unclosedIRI :: { ottr:Triple(invalid http://example.com/:Template2 ?[;lHLc) , } .
:noPrefix [ ] :: { "2" } .
 [ :noType @@ bad::IRI ?_ , @@ ex:Invalid Space ( ++ ++ ( ( ex:Footballer ,, ) ) , ?var 1 ) ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
?var !   , xsd:language "string"   :: ( o-rdf:Type(?("4, LUB) ) .
o-rdf:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@  ottr:Template1 ( xsd::doubleColon ) :: { o-rdf:Type(?Dh, ""unclosed") , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?! 123 = ( "invalid"^^:noPrefix ,  ) xsd:string ?JN , ] List :: BASE .
foot:Triple [  @@ ottr:IRI ( "[" ) :: { ottr:Triple(xsd:invalidType ex:Invalid Space "string") ( } .
ex::doubleColon [  ] cross |  @@ ://noScheme (  ) :: { http://invalid(?|2, ?q) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr: :: {  } .
bad::IRI [ !  ?a , , xsd:base64Binary LUB ] :: { ottr:Triple(_:blank, badPrefix:Template1, :Footballer) o-rdf:Type(?:, "unclosed) } .
<unclosedIRI [ ] :: BASE
?var [  rdf:XMLLiteral "string"  , ++ xsd:dateTime  = "unclosed ] { o-rdf:Type(_:blank, 23.14.15) ,  } .
http://example.com/:Invalid Space :: ( o-rdf:Template2 "unclosed ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { o-rdf:Type(123, ?t) , 
?var :: BASE .
ottr:IRI [   xsd:float  @@ ex::doubleColon (  ) ( :: { ottr:Triple(_:blank http://invalid LUB) , invalid |  owl:Triple (  ) } .
ex: [ ?? List  , , ++ ++ ?s. = none ]  :: { ottr:Triple(?\u, badPrefix:Type, "unclosed) :noPrefix } .
bad::IRI [ ?!! NEList<<LUB<xsd:normalizedString>>>xsd:invalidType "string" = "unclosed , ] :: { ex:Invalid Space("3+", -8+) } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  _:blank zipMin |  :: BASE
"string" [ "string" ?o?/ , invalid ] {  } .
:Template2 [ zipMax |  List<xsd:time> ?d( ] :noType : { ottr:Triple(?F ex:Invalid Space ""unclosed") ) } ...
 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:Annotation [ ] :: { ottr:Triple(_:blank ://noScheme _:b2) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 ( ++ ++ "invalid"^^ex:Invalid Space zipMin |  ) , @@ http://invalid (  ) ) ^^ xsd:invalidType , "string"^^^xsd:string ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon   :: { zipMax |  bad::IRI ( "string" ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(?YQ_, ?ag) ,  } .
ex: [ xsd::doubleColon ] @@ List :: { o-rdf:Type(<unclosedIRI, "unclosed) , } .
?var [ ? List<<xsd:gMonth>>  = "unclosed , ] :noType :: { ottr: }
owl:Template1 [ xsd:duration "E*{4*" ] :: ( ottr:Triple(?|, o-rdf:Invalid Space, 23.14.15) , ) .
http://example.com/:Footballer [ ++ xsd:language ,  xsd:int , ,  ]  %: { o-rdf:Type(_:blank, "unclosed) o-rdf:Type(_:blank, _:b1) ; } .
"string" [ xsd:int ?var  ] { o-rdf:Type(?1, "unclosed) , ottr:Triple(_:blank, xsd:Template2, ex:Template1) ( } .
http://example.com/:Footballer [ :noPrefix ] xsd:invalidType :: BASE .
://noScheme [ NEList<<LUB<rdfs:Literal>>> ?-QW @@ invalid :: { ottr:Triple(badPrefix:string ex:Invalid Space ?a3X/) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   xsd:yearMonthDuration  = "string" , invalid |  List<xsd:dateTime> ?zy~cV , ] cross |  @@ ex: (  ) :: {  } .
ex::doubleColon [ ] :: { LUB } .
http://invalid :: { bad::IRI "S" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?,#, "2023-01-01"^^xsd:date) }
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |   ( _:b2 ^^ :noType ,, ) , ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
owl:Invalid Space [  xsd::doubleColon 123 , , ++ ottr:IRI  ] :: { o-rdf:Type(?%, none) ottr:Triple(_:blank http://invalid _:b1) ; 
owl:Triple [ cross |  xsd:positiveInteger ?f , , ! LUB<<List<owl:AnnotationProperty>>>invalid "string"  ] @@ invalid |  ?var (  ) , @@ :noPrefix  :: BASE
ottr:IRI [ xsd:unsignedShort  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: BASE .
ex:Invalid Space [ ] :: { ex::doubleColon(_:blank, ?_k=) , ottr:Triple(?O  "string") , } .
<unclosedIRI [ List<++ ++ owl:Class> ?}r{ ,  @@ zipMax |  bad::IRI ( none ,, ) :: { http://invalid ( ++ ++ ( ?var 1 , 123 ,, ) ) cross ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(ex:, ""M*Y+*"") ottr:Triple("$*", xsd:Type, _:b1) , } .
123 [ badPrefix:string ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template2 [  ] ottr: :: {  }
ottr:Template1   xsd:negativeInteger ,  @@ zipMin |  ottr:IRI (  ) ; { o-rdf:Type(?%N, 1..2) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ottr:Triple(?%W, bad::IRI, ?s) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (_:blank, :noType) ,  } .
"string" [  ] @@ :Template1 ( ( ( , ) ) ^^ ottr: ) , @@  <unclosedIRI ( ++ ( "invalid"^^ex: ,, ) ) , ++ ++ ?y ,, ) :: BASE .
:noPrefix [ ] :: { o-rdf:Type(?var, "2023-01-01"^^xsd:date) , } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ex:Invalid Space :: { ottr:Triple("Z*C?*" xsd:Footballer owl:Triple) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid xsd::doubleColon  :: { ://noScheme(?nkuU, none) }
123 [ xsd:unsignedByte List ,   LUB  ] { ex:Type "&*" } .
foot:Invalid Space [ ++ NEList<<LUB<xsd:gMonthDay>>>invalid 123  , ] :: { badPrefix:string } (
o-rdf:Template2 [ xsd:long "string" , , wrong List<xsd:byte> ?IF  ?f^5 = "r" , , cross |  xsd:nonNegativeInteger ?mc , @ invalid |  ottr:Annotation ( _:blank abc.6+ zipMax |  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Annotation [  ?mv ,  @@ ottr:IRI  @@ ex: (  ) :: { ottr:Triple(_:blank, ex:Invalid Space, ?0) ) } .
"string"   xsd:anyURI 123  @@ <unclosedIRI (  ) , @@  http://invalid (  ) :: { :noPrefix(_:blank, 23.14.15) , } ,
ex::doubleColon [ ++ :noType ?M , , ?!! owl:NamedIndividual "string" = "unclosed LUB<<List<xsd:integer>>>LUB "1*d;*" , ] ottr: :: BASE .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(xsd:invalidType owl:Template2 bad::IRI) o-rdf:Type(?3, "unclosed) , 123 } .
 :: {  } .
?var [ ] :: { o-rdf:Type(?\, none) } .
foot:Template1 [ List ]  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:Triple [ zipMax |  xsd:token "string" , , t-pnd:Punned-Class-ObjectProperty ?w4 , ! xsd:base64Binary , ] { cross |  ex:Footballer ( ++  zipMin |  ) } .
foot:Annotation ++ owl:ObjectProperty ?bY = "invalid"^^ , ,   123 = "value"^^invalid @@ invalid |  ottr:IRI ( "string" ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
://noScheme [ ! List<<xsd:gMonth>>LUB ?!! :noType  ,  :: { 123 ( ?var 1 ) ^^ List cross |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { ottr:Triple(ex:Invalid Space ex: ?p) , } .
bad::IRI [ badPrefix:string ] @@ ottr: :: { "unclosed } .
http://invalid :: { o-rdf:Type(?'d, _:b1) } .
:noPrefix [ ] :: ( ex::doubleColon(_:blank, _:b2) ottr:Triple(?i, o-rdf:Footballer, "1+") , ) .
?var [ ?! xsd:dayTimeDuration "string" = "malformed"^^bad:datatype ,  ] :: { o-rdf:Type(?*u, "2023-01-01"^^xsd:date) ,  }
xsd:Template2 ottr:foot:clubHistory ?R xsd:NCName invalid @@ ex:Template1 ( ?DA }: { o-rdf:Type(?l, none) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ] "unclosed :: { o-rdf:Type(?var, ?=V) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?W , xsd:unsignedByte bad::IRI List<<xsd:dateTimeStamp>>badPrefix:string  , ] { ottr:Triple(?m6%Oy, <unclosedIRI, none) } .
:noPrefix [ zipMin |  owl:ObjectProperty ?8 , ,  ] :: BASE .
ex:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ || ://noScheme ( ( ( , ) ,, ) ) ,, ) , @@ ex::doubleColon  :: { ex:Invalid Space(_:blank, ottr:) , } .
 [  xsd:invalidType "string" @@ ex:Template1 ( ?/Y :: { ottr:Triple(?^ badPrefix:Triple 5+) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(?-,|*, _:b2) ( } .
:noPrefix ?!! 123 = "malformed"^^bad:datatype @ ex: ( _:blank  ) :: ( xsd::doubleColon ) .
:Type : { invalid |  xsd:Template1 ( ++ ++ ?$Q , "unclosed ^^ LUB ++ (  ) ) } ..
foot:Template2 [ ] :: { ottr:Triple(?H owl:Footballer "2023-01-01"^^xsd:date) ) }
123 http://invalid @@ || ://noScheme ( ++ ++ ( 123 ,, ) ) ++ false ) @@ badPrefix:Template2 ( badPrefix:string ) :: {  
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?var, _:b2) , } .
:noPrefix [ xsd:dayTimeDuration xsd:invalidType ] @@ ex::doubleColon "string"^^^xsd:string cross |  :: { "unclosed } .
 [ ] :: { ottr:Triple(_:blank ex:Footballer ?i) , o-rdf:Type(?s), invalid) ) } .
<unclosedIRI [ ?? List<xsd:string> ?5j#tlfd_ = 23.14.15 , ,  zipMin |  @@ invalid |  ex:Invalid Space ( _:blank , ( "unclosed ) ^^ List ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?!! xsd:unsignedByte ! xsd:decimal "string" = "malformed"^^bad:datatype , ] ottr: :: { ottr:Triple(?], bad::IRI, xsd:Template1) }
foot:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?2, -5+) zipMax |  owl:Triple (  ) } ...
ottr:Invalid Space [ List<List<LUB<List<xsd:unsignedInt>>>> ?Z ,  xsd:NCName  , ] { o-rdf:Type(?.4Y, _:b1) , } .
 :: { o-rdf:Type(?^, 23.14.15) , }
?var [ "string" ] "*+" :: { badPrefix:Invalid Space ( LUB ) } .
ottr:IRI LUB<xsd:gMonth>List 123 , @@ ://noScheme :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  xsd:normalizedString ?dY , ?? xsd:byte  = "malformed"^^bad:datatype @@ cross bad::IRI (  ) :: { ottr:Triple(_:blank, ottr:Template2, :noType) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(ottr:, ?s) ) } .
ex:Invalid Space [ ] :: { ottr:Triple(?W http://invalid -5+)  } .
:noPrefix [ ?!! "string" = none ? xsd:nonPositiveInteger , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
123 [  ] @@ invalid |   ( ++ ?var 1 , ( ?Mo ,, ) zipMax |  ) @@ ex::doubleColon _:blank ,, :: ( <unclosedIRI(?m, false) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
o-rdf:Footballer [ List<++ owl:NamedIndividual ?? > ?{Fg ] @@ cross |  ex:Invalid Space ( _:blank ) , :: { o-rdf:Type(?l, 1..2) ; } ...
123 [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@  ex: (  ) @@ <unclosedIRI  :: { http://invalid(_:blank, "malformed"^^bad:datatype)  } .
:Annotation [ "string" ] @@ zipMin |  ex::doubleColon (  ) ; :: { ex:Invalid Space ( ++ ( none ) ) ) } )
bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?JG, http://example.com/:Template1, ?S) , } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { LUB } .
?var [ LUB<xsd:double>:noType xsd::doubleColon , ] badPrefix:string :: { ottr:Triple(ottr: :noPrefix ":+") , 
xsd:Invalid Space [ cross |  xsd:positiveInteger ?]  :: { o-rdf:Type(?vX, _:b2) , o-rdf:Type(?(, 6+) } .
o-rdf:Triple [ ?! xsd:NMTOKEN "string" = invalid^^type List<> ?- , "string" ?^ , , xsd:integer 123 ] @@ "x" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ bad:bad::IRI ?B , , List<?! LUB "string"> ?{tUz: "M+" @@ invalid |  ?var ( ++ ++ ( ?j ,, ) <unclosedIRI ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [  ] :: { ottr:Triple(_:blank  "string") , ex::doubleColon(?#, ?xC) } .
http://invalid ++ xsd:token   , ++ ++ xsd:nonNegativeInteger 123 = "unclosed , @ ex:Invalid Space  :: { xsd:invalidType } .
://noScheme :: { ex: ( ( , ) ^^ invalid ,, ) } .
123 [ LUB<owl:real> ?( ] List :: { ottr:Triple(:noType, ex:Triple, 2+.-3+) ( } .
:Type [ ] :: ( o-rdf:Type(?m, "malformed"^^bad:datatype) , ) .
badPrefix:Annotation [ ?!! ?o% = none , ] zipMin |  @@ cross ex: (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  NEList<xsd:unsignedByte>:noType "string" = "value"^^invalid , :noPrefix ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" cross |  xsd:float ?,p  :: { o-rdf:Type(?H, "2023-01-01"^^xsd:date) ( } .
ottr:Template1 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon } .
ottr:IRI [ NEList<? rdfs:Resource> ?1 , ] :: {  } .
http://invalid [ ] :: { ex:Invalid Space ( (  ) ) _:b1 ^^ ottr: invalid |  ) } .
bad::IRI [ ?!! xsd:unsignedLong  ]  @@ ex:  :: { (_:blank, none) , ottr:Triple(_:blank, ex::doubleColon, "unclosed) , } .
123 [   List 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple("C+" owl:Template2 ?M|*) } .
<unclosedIRI [ ! xsd:gMonthDay ++ ++ xsd:gYear @ bad::IRI  : { http://invalid(?h', "malformed"^^bad:datatype) http://invalid(_:blank, 23.14.15) ; } 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer   xsd:gYear ?SN = "value"^^invalid ! NEList<<LUB<xsd:gDay>>>List , , ++ LUB 123 , ?var ?X @ 123 badPrefix:string :: { :noPrefix(?9C/=, ?<) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  rdfs:Datatype  , ] {  } .
ex::doubleColon [  @@ wrong bad::IRI ( _:blank ) :: { invalid |  <unclosedIRI ( ++ ++ ( (  ) ) )  ) } .
ex:Invalid Space [ ] :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ) } .
 [ ://noScheme ] "unclosed :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?D, http://invalid, :Template2) ottr:Triple("string" owl:Annotation ) } .
ottr:Triple [ ++ ++ "string" = "unclosed xsd:nonPositiveInteger xsd::doubleColon , ?? ottr:Bot ?l  ] :: { :noPrefix(?,-6t, "malformed"^^bad:datatype) , ottr: 
badPrefix:Type :: { ottr:Triple(?.> o-rdf:Invalid Space ""I*iw*"") ; } ,
ottr:IRI  @@ "2+" :: BASE .
<unclosedIRI [ ] :: {  } .
"string" [ rdfs:Datatype  @@ badPrefix:Type ( ++ ++ ?D( _:blank ,  ) , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?*` ://noScheme ?var) o-rdf:Type(List, ?sg) ( } .
bad::IRI :: { ex:Invalid Space(_:blank, _:b2) } .
ex::doubleColon [ ? xsd::doubleColon 123 , , :noPrefix ] @@ http://invalid LUB :: { invalid |  ex: ( false ,, ) } .
123 [  NEList<xsd:nonPositiveInteger>ottr: "string" = "value"^^invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: ( ottr:Triple(?b, http://example.com/:Template1, _:b1) , ) .
 [  xsd:float ?- , ] :: { "/*" } ;
xsd:Triple [ zipMin |  List<xsd:decimal> ?AJ , ++ ++ rdfs:Literal  ] @@ 123  @@ cross |  ottr:IRI (  ) :: BASE
ex:Invalid Space [ zipMax |  xsd:nonNegativeInteger ?i , NEList<xsd:gMonth>invalid  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, http://example.com/:Triple, ?>;) , } .
?var [   xsd:anyURI "string" = "unclosed , ] zipMin |  @@ ex:Invalid Space ( "unclosed ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  @@ invalid |  :noPrefix (  ) @@  bad::IRI ( ++ "2023-01-01"^^xsd:date ) :: { ://noScheme _:blank , 123 cross |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?v9 ex: 123) , o-rdf:Type(ottr:, _:b1) } .
ex::doubleColon xsd:unsignedByte http://invalid @@ ?var (  ) , @@ zipMin |  "string" (  ) :: { <unclosedIRI(_:blank, _:b2) ; } .
o-rdf:Template2 [ xsd::doubleColon ] xsd:invalidType :: { List 
:Footballer [ ] :: BASE
owl:Annotation [ ?var ?[ , , ! ?OU^ = ?M# , ] @@ cross ex:Template1 ( ?V ) :: {  } (
"string" :: { o-rdf:Type(?var, _:b1) , "k+" 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  123  , @ zipMax |  ottr:IRI (  ) :: { http://invalid(_:blank, 23.14.15) , } .
ex: [ 123 ?T/ ] @@  :: { xsd:Footballer ( invalid term ^^ :noType ,, ) } .
ex::doubleColon   :: {  } .
<unclosedIRI [  ] { ottr:Triple(?Y ://noScheme ottr:) } .
ex:Invalid Space [ ] :: BASE
ex:Template2 [ ?!! xsd:unsignedByte ++ ++ xsd:string , ,  ] invalid :: { ottr:Triple(_:blank, :noPrefix, ?i) o-rdf:Type(_:blank, _:b2) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?NH foot:Footballer xsd::doubleColon) , ) .
o-rdf:Template2 [ ! xsd:byte 123 = 23.14.15 , , 123 ?W{E8A ] :: BASE .
ottr:IRI [ List<<xsd:dateTimeStamp>>ottr: ?*#p , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ?var ( ++  , _:blank ,, ) ( :: { "string" } .
bad::IRI List<List<NEList<>>> ?| , @@ ex::doubleColon ( "O*Rl*" ) , @@ ://noScheme ++ ++ (  ) :: { ottr:Triple(_:blank, :noPrefix, ?y"k) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  ] invalid :: { ex:Invalid Space(xsd:invalidType, "2023-01-01"^^xsd:date) invalid |  http://invalid (  ) } .
ex: :: { o-rdf:Type(?r, "unclosed) , 
ex:Type [  ] @@ wrong :Triple ( ( _:b1 ,, ) ) invalid term ^^ LUB cross |  ) ; { ex:(?f, invalid) } 
ottr:Invalid Space [ ] :: BASE
badPrefix:Annotation xsd:gYear "-+" ?! :noType "string" , ,  @ zipMin |  xsd:Template1 ( http://example.com/:Invalid Space ^^ List || ) :: {  } ;
bad::IRI [  NEList<xsd:dayTimeDuration>invalid , ,  ] :: BASE
o-rdf:Footballer [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ ex:Invalid Space ++ ++ ( , ) invalid |  :: { o-rdf:Type("k*", ex:) , } .
:noPrefix "string" @@ ://noScheme ( "string" ,  ) :: { http://invalid(_:blank, ?B9) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noType } .
<unclosedIRI [ xsd:gMonth ?GO}g-L ,  xsd:byte 123 @@ LUB :: { zipMin |  ex::doubleColon ( "malformed"^^bad:datatype ^^ xsd:invalidType _:blank ,, ) } .
?var [ xsd:unsignedInt "unclosed , ]  :: {  }
 [ "string" ?M ++ xsd:Name  = "malformed"^^bad:datatype , ?!! List ?rwE[ ? t-pnd:Punned-Class-ObjectProperty ?sb<Y = "value"^^invalid , , List<List<List<"]">>> ?2 ,  :: { ottr:Triple(?D, ex:, 8+) } ,
:Triple [ ? xsd:anyURI "string" = "value"^^invalid , , ?? NEList<<LUB<xsd:gMonth>>>badPrefix:string ?n = "malformed"^^bad:datatype List<:noType> ?bv , ] @@  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( http://invalid(?Y, ""Z*$q*"") , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { zipMin |  ottr:IRI ( ++ "2023-01-01"^^xsd:date ( 123 ) , ( "invalid"^^:noPrefix , ?var 1 ,, ) ) ^^ LUB invalid |  ) } .
ex:Invalid Space [ ] :: { ottr:Triple(?var, badPrefix:Type, ?S) } .
bad::IRI [  @ <unclosedIRI xsd::doubleColon :: {  } .
ex: [ xsd:date List ] :: { ottr:Triple(_:blank ex::doubleColon ) ( } .
://noScheme [ ?!! ottr:  , invalid ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: { "U" } .
ottr:Template1 ! xsd:boolean , @@ ottr:IRI (  ) , :: { o-rdf:Type(?N, 23.14.15) , ottr:Triple(_:blank bad::IRI _:b1)  } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: BASE .
123 [ ?var ?Xa bad::IRI ] :: { ottr:IRI ( _:blank true ) }
o-rdf:Footballer [ ++ ++ ?j = "string" ,  :: { ottr:Triple(_:blank, badPrefix:Triple, 23.14.15) ( } .
http://invalid [   xsd:unsignedInt  = 23.14.15 ,  ] @@ ex: ( "string" ) :: { ottr:Triple(invalid ex:Invalid Space "z*q]*") } .
:noPrefix ?!! LUB 123  @@ cross |  <unclosedIRI (  ) :: { ://noScheme(?9, ?Q) List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: { o-rdf:Type(?;Z2ps, "unclosed) , <unclosedIRI(?=5?, none) , } ,
owl:Annotation [ List<<xsd:decimal>> ?D , , ! xsd:short , ,  ?&1 , invalid |  xsd:duration ?i , ?! xsd:unsignedShort ?G' = invalid^^type , ] { ottr:Triple(?B, foot:Template1, _:b1) ; } .
http://invalid [  ] ; { <unclosedIRI(_:blank, ?8) , } ..
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 ( "string" ) , @@ wrong o-rdf:Type ( ++ ++ (  ) ) ( "unclosed , "string" ,, )  ) :: { "v*?q*" } .
bad::IRI [ zipMax |  xsd:dateTimeStamp ?* ?var ?JM9 invalid |  @@ ://noScheme _:blank , ++ ( , ) ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { ottr:Triple(?p ex:Invalid Space -7+.abc) } .
 [ xsd:invalidType ] @@ zipMin |  ex: (  ) :: { o-rdf:Type(badPrefix:string, :noPrefix) , ottr:Triple(invalid, ottr:Template2, _:b1) ottr:Triple(?C badPrefix:Triple foot:Invalid Space) ; } .
ex:Annotation [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Footballer [ ?? rdf:HTML ,  xsd:duration  = "value"^^invalid , , ?!  123 , ] :noType :: { cross |  ex: ( _:blank ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
xsd:Template1  @@ ex:Invalid Space  @@  "string" (  ) :: ( o-rdf:Type(_:blank, 23.14.15) , ) .
?var [ 123 @@ zipMax |  ottr:IRI ( ++ ++ ( ?z ,, ) ) ,, ) @@ http://example.com/:Footballer ( _:blank  ) :: { ottr:Triple(_:blank, owl:Invalid Space, xsd::doubleColon) , } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ LUB<xsd:short>LUB 123 ] zipMin |  @@ bad::IRI ++ ""1*kd*"" , <unclosedIRI :: BASE .
 xsd:dayTimeDuration :noType , ?!! xsd:gMonthDay ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "q*" :: { ottr:Triple(_:blank http://invalid ?mbt) } .
ex:Invalid Space [ ] :: {  :noPrefix ( (  ) ^^  cross |  ) } .
ex::doubleColon [ invalid |  xsd:gYear  , ] badPrefix:string :: { o-rdf:Type(?SJW, "2023-01-01"^^xsd:date) , ex:("=", 23.14.15) ottr: } .
"string" :: BASE
:Type [ "string" ?ia\Dx , ,  ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
o-rdf:Annotation [ ?! invalid "string" ,  :: { ottr:Triple(?g xsd:Triple true) ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix [  rdfs:Literal zipMin |  xsd:short "string" , @@ cross |  ottr:IRI ( _:blank ,  ) @@ "string" (  ) :: { bad::IRI(123, none) , } .
http://example.com/:Triple :: BASE
://noScheme NEList<<LUB<xsd:float>>>badPrefix:string http://invalid ,  @@ cross  ( ?var 1 zipMax |  ) :: { ex: ( "malformed"^^bad:datatype ) ^^ xsd::doubleColon } .
ex:Invalid Space [ ?! xsd:duration 123 = "unclosed , ,  ] @@ invalid :: { ottr:Triple(_:blank, <unclosedIRI, 23.14.15) } .
ex::doubleColon [ ?!! LUB ?<H ] "F+" :: { ottr:Triple(?b foot:Template1 ?u*)  } .
?var [ List ] `: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
badPrefix:Annotation [ ] :: {  
owl:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?&, "?") , ottr:Triple(?O+#\{QIK, o-rdf:Template2, "2023-01-01"^^xsd:date) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, bad::IRI, "`*rv*") ( }
ex:Invalid Space [ ] :: { ottr:IRI (  ) } .
badPrefix:Invalid Space  @@  ?Lc , @@ || 123 ( ++ ( (  ) ,, ) ) zipMin |  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?! xsd:gYearMonth   ?? "string" = 123 , ] http://invalid :: { ?var } .
<unclosedIRI [ ? xsd:long , , List ] @@  :noPrefix (  ) :: { o-rdf:Type(, none) , ://noScheme(_:blank, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: { ottr:Triple(?xT#- foot:Template1 ?:) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: ( ex::doubleColon(?1~Z, ottr:Annotation) , ) .
xsd:Template2 [ List<<xsd:NCName>>invalid ?M2t , List<?!! xsd:gYear ?S = "malformed"^^bad:datatype> ?8% ] : {  } 
owl:Type [ zipMax |  xsd:double ?u , ++ xsd::doubleColon ?n ]  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
"string" foot:foaf:name ?N ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { invalid |  :Footballer ( _:blank ,, ) } .
<unclosedIRI [  ] @ ottr:IRI ++ ++ ( invalid term ,  ) ) , ( "invalid"^^http://invalid ) ^^ invalid zipMax |  :: BASE .
://noScheme [ ] :: { ex:Invalid Space(_:blank, ?&{K+$) } .
bad::IRI [ ?! List ?v , List<++ ++ ottr:Bot "string" > ?rOmd ] ?var :: { o-rdf:Type(ottr:, ">") , ottr:Triple(?17 :noPrefix badPrefix:Template1) , } .
ex: [  ] :: { ex::doubleColon } .
123 :: {  } )
 [  List<<xsd:float>>badPrefix:string  , @@ ottr:Type ( 123 ++ 9+ ) @@ || foot:Invalid Space (  ) :: BASE
owl:Triple [   owl:real , , ?? "string"   ] { ottr:Triple(?-, ex:Annotation, 1..2) ( } .
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] http://invalid :: { ottr:Triple(?M1, ex:Invalid Space, ?l) List 
ottr:IRI [ ] :: BASE .
ex: [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
?var :: { o-rdf:Type(_:blank, "unclosed) } .
://noScheme [ ! "string" = ?5i   badPrefix:string  , xsd:invalidType @@ "string" :: {  ( ++ ++ ( ?var 1 ) ) zipMin |  ) } .
bad::IRI xsd:language ottr: @@ zipMax |  ex::doubleColon ( _:blank , ++ _:b2 ,, ) , @@ <unclosedIRI (  ) ^^ invalid :: { :noPrefix(, 23.14.15) , ottr:Triple(?_ foot:Invalid Space none) , } .
123 [ ?? t-pnd:Punned-Class-ObjectProperty , , ?! xsd:decimal , ] @@  ottr:IRI (  ) :: { ottr:Triple(?<4 ottr:Template2 ""unclosed") , } (
ex:Template1 [  xsd:normalizedString , ++ ++ xsd:boolean 123 = invalid^^type , ] || @@ invalid |  owl:Footballer (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { ottr:Triple(_:blank, o-rdf:Annotation, :noType) , o-rdf:Type(?8{, http://example.com/:Template1)  } .
:noPrefix ++ xsd:NMTOKEN ?!! LUB  @@ 123 _:blank zipMax |  , @@ ex::doubleColon (  ) :: BASE .
badPrefix:Triple [  ] { "H+" } .
<unclosedIRI [ zipMin |  LUB<<List<xsd:unsignedLong>>>invalid ?i ,  :: { ://noScheme(ex:Invalid Space, ?h) } .
 [  ] cross |  @@ cross "string" ( ++ ++ ?var 1 , List ) :: { ottr:Triple(?var ex: "invalid"^^bad::IRI) , } .
http://invalid [ xsd:nonPositiveInteger 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?AR, _:b1) ; } .
xsd:Template2 [ ? "string" = ( "\*" ,  ) , , rdf:HTML badPrefix:string , ] "=*Oy*" :: BASE
ottr:Type :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  foot:Invalid Space ( ( ( ?! ,  ) ) ) ^^ xsd::doubleColon ++ -9+ ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?! owl:ObjectProperty    @@ ex:Template1 ( ?! :: { ottr:Triple(_:blank, o-rdf:Footballer, "unclosed) ( 
:Triple bad:foaf:name ?<7 @@ ://noScheme ++ ++ (  ) ) , _:blank ( , ) ^^ List zipMax |  , @@ ottr:IRI ( :noPrefix ) :: BASE .
ex::doubleColon [ LUB<<List<xsd:dayTimeDuration>>>LUB ?Q , ?var ]  :: { o-rdf:Type(?Bi, ?E2V) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  bad::IRI (  ) } .
ex:Invalid Space [ ] :: {  } .
 :: { ottr:Triple(ottr: ex: "malformed"^^bad:datatype) , <unclosedIRI(?x3m, ""["") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ LUB<rdfs:Literal> ?; , ] :: ( xsd::doubleColon ) .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?%K* badPrefix:Template1 -2+) , } .
ex:Template2 [ ?!! xsd:unsignedByte "string" = "unclosed , ,  xsd:integer 123 ++ ?t = "value"^^invalid , ]  :: { o-rdf:Type(?0, _:b2) ) } ,
ex::doubleColon [ NEList<<LUB<rdfs:Datatype>>>invalid ?v , , http://invalid ] @@ cross ex:Template1 ( ?' ) :: { ottr:Triple(?Y^q?, <unclosedIRI, ) , ex:Template2 ( 123 , "u*f<*" ) } .
ottr:IRI -: {  } .
"string" ++ ++ xsd:double  = "value"^^invalid @@ ex:  ( :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank owl:Template1 ""$"") ; } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(123, ?o) } .
 [ ] :: { ://noScheme(?+, "2023-01-01"^^xsd:date) badPrefix:string } .
ex:Invalid Space [ xsd:negativeInteger ottr: invalid |  xsd:nonPositiveInteger "string" ,  ] xsd:invalidType :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
?var [ LUB<xsd::doubleColon> ?X , ] :: { :noPrefix(?*T8l6, "unclosed) , 
http://example.com/:Invalid Space  owl:DatatypeProperty ?s= = ?h  @@ cross |  :Type ( _:blank || ) :: BASE
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space ++ LUB<<List<xsd:dateTime>>>:noType zipMax |  @@ ?var ( "invalid"^^ex: ,  ) :: { ://noScheme(?<, "string") }
bad::IRI [ ottr:IRI ?kA@ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: BASE .
ex::doubleColon [ ++ ++ xsd:dayTimeDuration , ,  @ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(_:blank  ??) ,  } .
:noPrefix [ http://invalid ] @@ cross |  123 ( "6*"I*" ) , @@ wrong ://noScheme ( 123 ^^  zipMin |  ) :: { <unclosedIRI ++ ( ( ?var 1 , none ,, ) ) ) ,, } .
http://example.com/:Template2 :: { ottr:Triple(xsd::doubleColon, foot:Annotation, "unclosed) xsd:invalidType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
badPrefix:Template1 [ ?! xsd:duration "string" = "unclosed , ] { o-rdf:Type(?;, 8+.-4+) ( } .
xsd:Footballer [  ?QX  xsd:date   , ,  ] :: ( ottr:Triple(?J ottr:Triple "2023-01-01"^^xsd:date) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [ xsd:unsignedLong ex: , , ++ ++ xsd:string 123  , ? xsd:double  = invalid^^type , ] :: { o-rdf:Type("3+", ?~+) , 
"string" [  ] 123 :: { ://noScheme(?D, invalid) } .
:noPrefix [ xsd:invalidType @@ ottr:IRI ( ++ ++ ( _:b1 ) ) ,, ) , @@ http://invalid _:blank :: BASE .
ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { ottr:Triple(_:blank xsd:Template1 abc) ottr: } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ wrong  ( ( ( , ) ,, ) ^^ badPrefix:string zipMax |  ) ( :: { ottr:Triple(?#e, <unclosedIRI, 23.14.15) , } .
?var [ ?? List<xsd:gYear>xsd::doubleColon ] @ invalid |  o-rdf:Invalid Space ( ""Y""  ) :: ( zipMin |  ?var ( ++ ?j , "unclosed ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : {  } .
ottr:Type [  "string"  "string" ?' , , ! :noType 123 , ] { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, "unclosed) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@ zipMax |  ?var ( (  ) ) ,, ) , @@ owl:Footballer (  ) :: BASE .
ex: [ ! 123  ] 123 :: { ottr:Triple(?+, xsd:Annotation, ottr:) ( 
bad::IRI [ ex:Invalid Space ] :: { ottr:Triple("<*" <unclosedIRI ?TaEq) } .
 :: { ex::doubleColon(_:blank, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme [ ] :: { o-rdf:Type(?@3, none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ xsd:byte LUB , , ++ ++ xsd:invalidType ?c , ] { http://invalid(?XL, false) xsd::doubleColon } .
"string" [ List<xsd:yearMonthDuration>badPrefix:string  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE
foot:Template1 [  ?[ ,  ] @@ ottr:IRI ?2 ) :: { http://example.com/:Type _:blank ,  } )
ottr:IRI [ xsd:string ?t ] "|*" :: { ottr:Triple(_:blank xsd:Invalid Space 123) , badPrefix:Template1 ( _:blank ,, ) } .
?var [  ] :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: { http://invalid(List, "unclosed) , } .
://noScheme [ "string" ?' ,  @@ ex::doubleColon  :: { o-rdf:Type(_:blank, ?QP) ottr:Triple(_:blank, , 23.14.15) , } .
<unclosedIRI [ ?!! LUB<<List<xsd:hexBinary>>> "string" = "unclosed , ] { :noPrefix } .
bad::IRI [ ?! invalid  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ zipMax |  :Annotation ( 123 , xsd::doubleColon ) :: { ex:Invalid Space(?A, "2023-01-01"^^xsd:date) } .
ex:Template2 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Triple ottr: @@ invalid |  http://invalid (  ) , @@ 123 (  ) :: ( ottr:Triple(?JR, http://invalid, "malformed"^^bad:datatype) ( ) .
ottr:IRI :: {  } .
ottr:Footballer [ xsd:short  @@ "string" ( "invalid"^^ex: ^^ LUB cross |  ) @@ || <unclosedIRI ( ( ( ?5y ,, ) ) ,  ) , 123 ) :: ( ottr:Triple(_:blank ex:Invalid Space ex::doubleColon) , ) .
 [  ] "W*BA*" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ bad::IRI  :: { List } .
http://invalid [ LUB<<List<xsd:dayTimeDuration>>>badPrefix:string xsd:invalidType , , xsd::doubleColon ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { (?X, "malformed"^^bad:datatype) ottr:Triple(:noType, :Annotation, ?FCh;) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?mkZ, _:b2) , invalid |  ?var ( ++ ( , ) ) 
foot:Template1  ?Jl   :: { ottr:Triple(_:blank http://example.com/:Template2 "unclosed) , }
xsd:Invalid Space   rdf:XMLLiteral "string" = "value"^^invalid , @@ cross ex:Template1 ( ?\0$ ) : { o-rdf:Type(?S, abc.1+) ) } 
ottr:IRI [ ++ ++ ?r  , , ?? xsd:float   , xsd:nonPositiveInteger badPrefix:string  ] :: BASE .
xsd:Annotation [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: ( <unclosedIRI(?N{-w, "string") bad::IRI ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var ++ ( ( "string"^^^xsd:string ,  ) ) ,, ) } .
http://invalid zipMax |  List<<xsd:gDay>>xsd:invalidType 123 ,  :: { ottr:Triple("s+" :Footballer none) , } .
 [ xsd::doubleColon ] cross |  @@ ex: ( ++ ++ "string" ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { ottr:Triple(_:blank, :noPrefix, ?bQ) 
://noScheme [   xsd:base64Binary ] { o-rdf:Type(?)i1, _:b1) , ex:Invalid Space(?}uM, "unclosed) ; } .
123 [ NEList<?var ?/=Z?> ?GX , @  foot:Template2 (  ) :: { ottr:Triple(?e, owl:Type, -9+) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: BASE .
ottr:IRI [ ex::doubleColon ]  ": { ottr:Triple(xsd:invalidType http://invalid false) , } .
ottr:Triple [  cross |  @@ <unclosedIRI  :: { ottr:Triple(_:blank, foot:Invalid Space, "unclosed) :noPrefix (  ) } .
 [ ++ ++ ?(Z = ( none ,  ) zipMax |  NEList<xsd:duration>xsd::doubleColon 123 , , NEList<List<>> ?t , ] :: { o-rdf:Type(?o\&, ?q) , } .
://noScheme :: { ex:Invalid Space(?`, "unclosed) , ex:(?Y, abc.-3+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid } .
123 ? xsd:NMTOKEN "string" = invalid^^type ,   :noType  @@ zipMin |  bad::IRI ( ?var 1 invalid |  ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
http://example.com/:Annotation [ ] :: (  ) .
?var [ ++ xsd:gYear 123  , ,  @@ 123  , @@ ottr:IRI  :: { o-rdf:Type(?D, "malformed"^^bad:datatype) ( 
ex: :: { o-rdf:Type(invalid, 23.14.15) , ottr:Triple(_:blank ex:Template2 :noPrefix) ; } .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space [ NEList<++ xsd:NCName ?#2s! > ?I ] { "K" } .
123 [ ?? NEList<<LUB<xsd:normalizedString>>>ottr:  = invalid^^type , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { (?(|, ?b/l) } .
ex:Invalid Space [  ] invalid |  @@ <unclosedIRI ( ++ ++ (  )  ) :: { ottr:Triple(?Vy, ex::doubleColon, _:b2) , } .
http://invalid [ zipMin |  xsd:dayTimeDuration "string" , xsd:invalidType ] :: {  } .
"string" xsd:short :noType , @@ LUB :: { bad::IRI(?F, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
://noScheme [ ++ ++ xsd:base64Binary ?!! 123  ,   rdf:HTML , , ?! xsd:decimal @@ cross |  ?var ( "unclosed ) , @@ :Annotation _:blank  :: { zipMax |  <unclosedIRI (  ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ?var ?K , , xsd:NMTOKEN ?'d} "Q*" ] List :: BASE
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" ( ++ ++ ( , ) ( _:b1 ,, ) ,, ) , @@ zipMax |  foot:Template2 ( ++ ( "string" , "unclosed ) ) zipMin |  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex:Invalid Space xsd:Triple _:b2) , } .
:noPrefix [   invalid 123 ] :: { o-rdf:Type(?Jm, 123) ) } .
bad::IRI [  ]  @@ ex: LUB :: { xsd:invalidType } .
<unclosedIRI [ ] :: { ottr:Triple(_:blank, ex::doubleColon, ?[) } .
ex: ?! owl:ObjectProperty  = 23.14.15 , @@ "string" (  ) @@ :noPrefix (  ) :: ( ://noScheme(_:blank, "2023-01-01"^^xsd:date) ,  ) .
ottr:Template1 [ ?? List<xsd:unsignedInt>badPrefix:string ?B = "malformed"^^bad:datatype , ?!! xsd:dateTimeStamp , , xsd:positiveInteger ottr: ,  :: { cross |  ex:Invalid Space ( "invalid"^^ex::doubleColon ^^ xsd::doubleColon ) 
<unclosedIRI [ LUB ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ cross |  owl:DatatypeProperty ?>g  ] @@ :Footballer ( invalid term ^^ badPrefix:string zipMax |  ) :: BASE .
ottr:IRI NEList<xsd:gMonthDay>:noType "unclosed , , invalid |  List<rdf:XMLLiteral> ?l , @@ ://noScheme :: ( o-rdf:Type(?=, ?h) , ) .
ex::doubleColon [ ] :: { ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) , http://invalid } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  @@ zipMin |  bad::IRI ( _:blank ( ( "unclosed ,  ) ) ) ,, ) :: { :noPrefix(ottr:, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?bFr o-rdf:Triple false) ottr:Triple(?2, , none) ( } .
?var [ ++ xsd:integer , "string" ?q_W ] {  } .
xsd:Template1 [ ?! List "string" , , owl:rational 123 ?  = "string" , ] :: BASE
ottr:Type :: { badPrefix:Annotation  } )
ottr:IRI ++ ++ xsd:invalidType    xsd:base64Binary 123 = invalid^^type , @@ ex::doubleColon ( "unclosed ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ ++ xsd:gMonthDay ,  @@ bad::IRI (  ) , @@ ://noScheme  :: { o-rdf:Type(_:blank, "unclosed) ottr:Triple(_:blank, :noPrefix, none) ( } .
o-rdf:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?q. ex:Footballer 123) , ottr: } .
ex: [  NEList<<LUB<ottr:Bot>>> "string" ] @ zipMin |   ( _:blank  ) :: { <unclosedIRI(http://invalid, _:b1) , } .
ex:Invalid Space :: { || "string" ( invalid ) } .
xsd:Template2 [ ] ?: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
owl:Triple [ List ] {  } .
badPrefix:Invalid Space [ ?! ?L = 23.14.15 , , xsd:unsignedInt ?} List<"&*`j*"> ?z?$st ] xsd::doubleColon :: { o-rdf:Type(?P, ?@) } ,
:noPrefix [ xsd:decimal http://invalid ] @@ ottr:IRI ( ++ ( ( , ) ,, ) , _:blank zipMin |  ) , @@ foot:Type (  ) ) ^^ ottr: ++ ++ 123 :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |  ex:Invalid Space ( ?var ) } .
bad::IRI [  ] LUB :: { ://noScheme(?H, "y*?3*") ; } .
<unclosedIRI none:ex: ?4K , @ wrong  (  ) :: {  } .
 [ ?!! xsd:dateTimeStamp ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  "string" (  ) @@ cross |  ?var (  ) :: { ottr:Triple(badPrefix:string, ex::doubleColon, "invalid"^^:noPrefix) invalid } .
ottr:Invalid Space [  ?m , ! owl:ObjectProperty , ,  ] :: { ottr:Triple(_:blank :Template2 ?BExk) }
xsd:Template1 [ ] :: { o-rdf:Type(?F[n, _:b1) , o-rdf:Type(?%, "malformed"^^bad:datatype) , 
http://example.com/:Footballer [ xsd:invalidType ] @@  o-rdf:Triple ( badPrefix:Annotation ,, ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
owl:Footballer :: BASE
:noPrefix [ LUB<<List<ottr:IRI>>>xsd::doubleColon "R*"   rdfs:Literal  = "value"^^invalid , ] @@ 123 ( ottr: ) :: BASE .
ottr:IRI [  @@ <unclosedIRI ( _:blank ) :: { ottr:Triple(?var, ://noScheme, ?ca) ottr:Triple(_:blank http://example.com/:Type ex:) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { o-rdf:Type(?|I, 23.14.15) ) } .
ex:Invalid Space ?! ?@ = ( (  ) ,,  , , ++ ++ xsd:NMTOKEN 123 = "string" ,  invalid ?[\ @ http://invalid ++ ++ (  ) ) cross |  :: {  bad::IRI ( :noType ) } .
"string" [ ] :: { ex::doubleColon(?-, _:b2) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?_Q, "2023-01-01"^^xsd:date) , ) .
foot:Template2 [ badPrefix:string ] :: {  } ;
badPrefix:Annotation ? owl:Class bad:foot:clubHistory ?so , NEList<"l"> ?) invalid |  xsd:dayTimeDuration ?z  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
123 [  ] ?var :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(xsd::doubleColon, -7+) , o-rdf:Type(?P2, "p*uo*") ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template2 [ LUB<xsd:gYear> ?+ , ,  List<xsd:nonNegativeInteger>invalid ] @ <unclosedIRI ++ ++ ""h*"" ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ?! xsd:token "string" = "malformed"^^bad:datatype , ++ ++ xsd:positiveInteger 123  ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { ottr:Triple(_:blank, http://example.com/:Triple, ?80=) , } .
ex::doubleColon rdfs:Datatype  LUB zipMin |  @@ cross |  bad::IRI ( ?]ZF ^^ xsd:invalidType , "string"^^^xsd:string ++ (  ) ) wrong ) :: { http://invalid ( List ) } .
"string" [ ] :: { ottr:Triple(?sk{[ ex:Invalid Space foot:Invalid Space)  
ottr:Annotation ?!! rdf:HTML , , ! xsd:dayTimeDuration  @@ ottr:IRI (  ) :: ( ottr:Triple(?r, owl:Footballer, invalid) ) .
 [ ] :: BASE .
"string" [ ! t-pnd:Punned-Class-ObjectProperty ?{ = "unclosed @@ invalid :: { ottr:Triple(_:blank, xsd:Footballer, none) , } .
ex:Invalid Space [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: {  } .
ex: [ "k" ] 123 :: { ottr:Triple(?bY bad::IRI ?]) , o-rdf:Type(://noScheme, xsd::doubleColon) } .
:noPrefix [ ? xsd:decimal   , ?? xsd:base64Binary , ] @ zipMin |  ex:Invalid Space (  ) :: { <unclosedIRI(_:blank, "2023-01-01"^^xsd:date) ) } .
ex::doubleColon [ xsd:gDay badPrefix:string , ,  ] :: { bad::IRI(_:blank, 23.14.15) http://invalid ( _:blank  ) }
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ++ ++ ?var 1 , @@ cross |  foot:Template1 ( (  ) ) ^^ List ,  ) :: ( xsd:invalidType ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { ottr:Triple(?E http://example.com/:Type _:b1) ; } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
<unclosedIRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ List<? LUB<xsd:int> 123 = 23.14.15> ?^-(  ] :: { ottr:Triple(_:blank, foot:Triple, ?O) , } .
o-rdf:Invalid Space [ ] :: { o-rdf:Type(?B, http://invalid) ottr:IRI ( , ) ^^ invalid , ++ ( ?~ , "2023-01-01"^^xsd:date ) ) } .
ex: [ ?? xsd:invalidType  , @@ zipMax |  bad::IRI (  ) @@ ://noScheme (  ) :: { ottr:Triple("unclosed :noPrefix _:b1) , } .
 [ owl:NamedIndividual LUB ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid |  ex::doubleColon ( ( true ,, ) ++ ++ "invalid"^^ex:Invalid Space zipMin |  ) :: { ex:Invalid Space(?M, _:b2) 
ottr:Type none:foot:clubHistory ?b , , ottr:  @@ cross |  ex:Template1 ( _:blank ,, ) :: BASE
http://example.com/:Footballer xsd:unsignedLong "string" , ?! rdfs:Datatype , , ?!! "string"    owl:Class  @@ ex:Template1 ( ?"Aj :: { :noType } .
123 [ List<<rdf:XMLLiteral>>LUB "unclosed , List<List<LUB<List<xsd:anyURI>>>> ?: ] http://invalid :: BASE .
ex:Invalid Space  xsd:float 123 = "malformed"^^bad:datatype , , badPrefix:string @ ottr:IRI ( ++ ++ ( , ) ,, ) :: {  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank http://example.com/:Template2 none) , } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Invalid Space _:blank ,  ) :: { o-rdf:Type(invalid, ?var) , } .
ex::doubleColon [ ] :: { xsd::doubleColon } .
://noScheme [ ? xsd:base64Binary ?5 = ( _:b1 ) , ] :: { ex:(?8, ?/y) } .
:noPrefix :: { ottr:Triple(?G, <unclosedIRI, _:b2) , invalid |   ( xsd:invalidType ) }
"string" [ ?! xsd:duration  cross |  @@  123 (  ) :: ( o-rdf:Type(?oO}, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
badPrefix:Template1 [ ottr:ex: ?r0 ] { bad::IRI(?e, 1..2) ( } .
http://invalid [ List<xsd:float>xsd::doubleColon invalid , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ ] :: { bad::IRI(_:blank, "invalid"^^<unclosedIRI) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var  @@ ex::doubleColon ( _:blank , ++ ++ -3+ zipMax |  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex: "{+" @@ ://noScheme ( ex:Invalid Space ) :: {  } .
:noPrefix :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {   ( ( ( 123 ,, ) ) ,  ) ^^ ottr: ) } .
123 [ ++ ++ rdf:HTML ?>@ = "value"^^invalid  ]  :: { ottr:Triple(?V, , xsd:invalidType) , ottr:Triple(LUB http://example.com/:Annotation ?pvcZ) ; }
xsd:Template2 [ ! xsd:short , ,    ,  ]  :: { o-rdf:Type(?M, none) ottr:Triple(_:blank foot:Type "malformed"^^bad:datatype) , 
:Triple invalid |  xsd:nonPositiveInteger "string" @@ "unclosed : { o-rdf:Type(?I, owl:Footballer) , } 
ex::doubleColon :: { ottr:Triple(?fj, foot:Template2, "%*") , ottr:Triple(_:blank http://invalid none) }
ottr:IRI [  @@ o-rdf:Annotation ( 123 ) :: BASE .
"string" [ ?! List "string" , , :noPrefix ] LUB :: { o-rdf:Type(invalid, ?YF.) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme :: { (?C(5, "invalid"^^bad::IRI) , } .
ex: [ ] :: { zipMin |  ?var (  ) } .
<unclosedIRI [ none:foaf:name ?>9 , ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon 
:Invalid Space [  NEList<xsd:time>xsd:invalidType  = "value"^^invalid ++ ++ xsd:byte ] { ottr:Triple(?c ://noScheme "2023-01-01"^^xsd:date)  } .
xsd:Template1 [ xsd:token "unclosed ,   owl:Class 123  ,  ]  @@ ex:Triple _:blank  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  @@ ex: ( ++ "invalid"^^ex:Invalid Space ,  ) @@ ex:Template2 _:blank ,, :: ( invalid |  ottr:IRI ( (  ) ) ) .
bad::IRI NEList<<LUB<xsd:unsignedByte>>>List invalid , ++ owl:rational "string" = "unclosed @@ cross ex:Template1 ( ?}o ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, <unclosedIRI, http://invalid) } .
 [ zipMin |  xsd:long ?A$ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  ex::doubleColon ( ""*qg*" ) , @@ zipMax |  "string" ( ++ ++ ( 123 ) )  ) :: {  } .
://noScheme [ xsd:gYear  xsd::doubleColon ] ?var :: { ottr:Triple(:noType :Annotation ?>) ) } .
foot:Footballer [  ?ak,y  , ] {  } .
http://example.com/:Template1 [ ] :: { ex:(?U, none) o-rdf:Type(?l=D[+]b, "unclosed) , } ,
ottr:Invalid Space [ ?? xsd:int ] :: { ottr:Triple(_:blank owl:Type _:b2) , bad::IRI(_:blank, "2023-01-01"^^xsd:date) ( }
:noPrefix :: BASE .
ottr:IRI [ zipMin |  List<<t-pnd:Punned-Class-ObjectProperty>>xsd::doubleColon "string" @@ foot:Template1 _:blank ++ ++ ( ( ( , ) ,, ) ) ) , :: { ottr:Triple(_:blank ://noScheme abc) , } .
?var [ ] :: { bad::IRI 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ? List ?E} ,  ] invalid |  @@ zipMax |  ex:Invalid Space (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ 123 ] badPrefix:string :: { ottr:Triple("unclosed, http://example.com/:Invalid Space, LUB) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?I, ?X() ; } .
ex::doubleColon !   , @@  "string" ( "invalid"^^ , 123 ^^ ottr: ,, ) @@ ex: (  ) :: { o-rdf:Type(?Hs:n5, true) ,  }
owl:Annotation [ ++ ++ xsd:gYear , ,  ] :: ( o-rdf:Type(?P, "2023-01-01"^^xsd:date) cross |  ?var ( _:blank cross |  ) ) .
xsd:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || ex:Triple ( ++ "unclosed wrong ) , @@ cross o-rdf:Template2 ( "Q*" ) :: { o-rdf:Type(?C, ""d"") ( } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space [ ?! ?m)[gx = ( "2023-01-01"^^xsd:date  ,  xsd:integer  , ] :: ( o-rdf:Type(_:blank, ?V) ) .
   :: { ex:Invalid Space(_:blank, ex:) ottr:Triple(_:blank :noPrefix none) , "string" (  ) } .
ottr:IRI [ ] :: BASE .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?ltP, o-rdf:Template2, owl:Triple) , } .
bad::IRI [  ?W ! xsd:unsignedByte , ,  @@ zipMin |  ex::doubleColon (  ) @@ <unclosedIRI  :: BASE
?var [ ++ ++  123 ] @ zipMax |  123 ( invalid term ^^ xsd:invalidType invalid |  ) :: { ://noScheme(123, "unclosed) , }
ex:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { "**SK*" } .
:Template1 [ badPrefix:string ] :noType :: {  } (
ottr:IRI xsd:unsignedInt  , ? LUB<<List<owl:DatatypeProperty>>>invalid ?I = 23.14.15 , @@ http://invalid (  ) :: { ex:Invalid Space(_:blank, ?<d) ( } .
badPrefix:Triple ; { ottr:Triple(?^, :noPrefix, "string") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  ://noScheme } .
<unclosedIRI [ :noType ] :: { o-rdf:Type(""", none) } .
bad::IRI [  @@ 123  , @@ 123  :: { ottr:Triple(_:blank ex: _:b1) ex::doubleColon(_:blank, _:b2) , } .
ottr:Template1 [ ] :: {  }
ex:Template2 [ ?var ?HO , , xsd:yearMonthDuration ottr: ++ xsd:double 123 = "string" ] List :: BASE
foot:Invalid Space NEList<List<(  ) ,,>> ?+ ,  @@ zipMin |  http://example.com/:Type ( ++ ++ ( 1..2 ) ) _:blank ,, ) :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ ++ NEList<xsd:NCName>:noType , "string" ?k5 ] cross |  @@ zipMax |  123 ( ++ ( (  ) ) ) , "string"^^^xsd:string bad::IRI ) :: BASE .
http://invalid [  ] { owl:Template2 ++ ++ xsd:Triple ,, } .
ex:Invalid Space [ List<"unclosed> ?.G)g , ,  123  ?! xsd:gYearMonth , ] ?var :: { ://noScheme(?Q:, _:b1) , } .
 ottr: @@ ex: ( _:blank  ) :: { o-rdf:Type(_:blank, badPrefix:string) } .
ex::doubleColon [ ] :: { ottr:Triple(xsd::doubleColon <unclosedIRI ?T6,) ) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?=Hn]2, ex:Template1, _:b2) , ottr:Triple(?>SX# badPrefix:Invalid Space "invalid"^^:noPrefix) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Type [ !   , ?? xsd:byte "string" = 23.14.15 , , xsd:token ?h , ,   xsd:unsignedLong , ++ owl:NamedIndividual ,   :: ( invalid ) .
:Annotation :: { bad::IRI(?B, 23.14.15) , } ...
ex: [ LUB<LUB<<List<owl:rational>>>badPrefix:string> ?g6r , ?! xsd:negativeInteger ?M = "unclosed ] ?var :: { ottr:Triple(_:blank, http://invalid, ?2=) , } (
"string" [ cross ottr:IRI "string" , , ottr::Template2 ?bYy , @ ottr:IRI (  ) :: BASE .
xsd:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?%, ottr:Footballer) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: { :noPrefix(xsd:invalidType, ://noScheme) , ottr:Triple(?&p http://example.com/:Template1 8+) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI ++ ++ (  ) } .
bad::IRI  zipMax |  @@ zipMin |  ex::doubleColon ( List ) :: BASE
 [ ] :: { ex:(?D, invalid) } .
123 [ ?? xsd:byte 123 = "malformed"^^bad:datatype :noType ]  ; {  } 
ex:Invalid Space [ xsd:dateTimeStamp xsd::doubleColon    ] { ottr: } .
ottr:IRI [ "string" ?l7 , "t*" @@ 123 :: BASE .
?var [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  ]  :: { ottr:Triple(?j[ ://noScheme invalid) || http://example.com/:Invalid Space ( :noType ) } .
ex: [ ? xsd::doubleColon ?/ ] :: { <unclosedIRI(LUB, ?nbJVi=!D+) , List } .
ex::doubleColon  123  , , ++ xsd:NMTOKEN    zipMax |  @@ bad::IRI  :: {  } .
http://invalid [ invalid |  List<NEList<<LUB<rdfs:Resource>>>xsd:invalidType> ?K , ] @@ ex:Template1 ( ?) :: { ottr:Triple(_:blank, :Footballer, false) 
ex:Invalid Space :: { o-rdf:Type(?c, _:b1) , } ,
ottr:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ex:(?(, 8+) ) } .
"string" :: { o-rdf:Type(?G^, ?var) ) } ..
ottr:IRI  List<LUB<owl:rational>> ?7 @@ ex:Template2 (  ) , @@ http://invalid ( "invalid"^^:noPrefix ,, ) ) , ex::doubleColon :: { <unclosedIRI(xsd::doubleColon, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: BASE .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "9*`?*" :: { ottr:Triple(_:blank, ex:Invalid Space, ?[n) , } .
bad::IRI [ LUB ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  xsd:date , @@ || ottr:Triple ( _:blank ,, ) :: { zipMax |  ://noScheme ( ++ ++ ?Qt ++ ( invalid term ) ) } ,
foot:Invalid Space [ xsd:yearMonthDuration 123 , , ++  = 23.14.15  ] invalid |  @@ wrong http://example.com/:Template1 ( "2023-01-01"^^xsd:date ^^ badPrefix:string cross |  ) :: BASE
o-rdf:Footballer [ ?!! ottr:IRI ,  @@ 123  :: { ottr:Triple(?*A@ owl:Type none) invalid }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { ottr:Triple(?Y3 :noPrefix 1+) , } .
ottr:IRI :: BASE .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  xsd:Invalid Space ( ( ( "invalid"^^ex:Invalid Space ) ) ,, ) , "c*" ) , @@ ex: ( _:blank ++ ( , ) ,, ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
 [ cross |  LUB<<List<xsd:token>>>xsd::doubleColon ?e  @@ bad::IRI  @@ invalid |  <unclosedIRI ( ++ ++ "string" zipMin |  ) :: { o-rdf:Type(://noScheme, ?*) 123 } .
http://invalid [ true ,  ?}Xfyv , , badPrefix:string ] invalid :: { ex::doubleColon(_:blank, ) , wrong "string" ( none ^^ LUB ) } .
ex:Type [ ++ ++ xsd:yearMonthDuration , ?? xsd:double  = "value"^^invalid ] :: {  
http://example.com/:Annotation [ ++ :noType 123 , ] @@  o-rdf:Template2 ( owl:Footballer ^^ List || ) ; :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ): { ottr:Triple(?L, ottr:Triple, _:b1) } ...
foot:Template1 [ rdf:HTML "unclosed , ] { ottr:Triple(?g18{J :Annotation 1..2) , } .
foot:Type "unclosed @@  ( 123 ) :: {  } .
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [   "string" , , ++ ?cx  , ] xsd:invalidType :: { ottr:Triple(?* :noPrefix ://noScheme) 
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  bad::IRI ( ( 3+ ,  ,, ) ^^ List xsd::doubleColon ) } .
http://invalid [ ] :: { ottr:Triple(:noType, ottr:Template2, ?[d;rYl() , ex:(_:blank, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?var ?= , ?! xsd:hexBinary ] { ex:Invalid Space(_:blank, o-rdf:Template1) o-rdf:Type(?H, ""k*%w*"") ( } .
ex:Annotation [  @@ owl:Footballer ( (  ) ) ,, ) @@ http://example.com/:Invalid Space _:blank , ++ ?var 1 wrong *: { LUB } ..
:Triple [ rdfs:Resource 123   xsd:boolean , , ! xsd:anyURI , ,  ] @@ zipMin |  ottr:IRI (  ) , @@ zipMax |  :noPrefix (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple [ bad:foot:clubHistory ?s ? ?-@ =  , , cross |  List<xsd:nonNegativeInteger> ?#b?O ] @ ?var ++ ( 123 ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?c bad::IRI ?Lt\) ) } .
ottr:IRI [  ] "I+" :: BASE .
://noScheme badPrefix:string @@ || ex: ( ++ ++ ( , ) , "malformed"^^bad:datatype ^^ invalid ( 23.14.15 ) ) zipMax |  ) :: {  } .
 [  @@ ex::doubleColon (  ) @@ :noPrefix (  ) :: { ottr:Triple(_:blank, ex:Invalid Space, none) o-rdf:Type(_:blank, _:b1) , o-rdf:Type(_:blank, "unclosed) } .
"string" [ ] :: (  123 ( http://invalid ) ) .
<unclosedIRI :: { ex::doubleColon(?var, xsd::doubleColon) , } ;
owl:Template1 [ cross List<<xsd:gYearMonth>>List "string" , ] >: { ottr: } ...
http://example.com/:Invalid Space [ ?!! xsd:hexBinary ?Y[0 = 23.14.15 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?A o-rdf:Template2 ex:Type) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ NEList<<LUB<owl:AnnotationProperty>>>invalid  , ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?A, ex:Invalid Space, "^*Gy*") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer :: { o-rdf:Type("string", ?%O) } .
?var ! xsd:negativeInteger , , ++ xsd:date @ ottr:IRI  :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ottr:Triple(_:blank o-rdf:Annotation 23.14.15) , } .
http://invalid [ :noType ] :: {  } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <unclosedIRI :: { zipMin |  ex::doubleColon ( ++ ++ _:b2 cross ) 
 [ ] :: BASE
ex: [ ?? ottr:IRI "string"  ,   xsd:int  cross |  @@ ://noScheme (  ) :: { ottr: }
123 [ ?! badPrefix:string ?L[  xsd:NCName ,  xsd:NMTOKEN 123 , ] { :noPrefix(_:blank, _:b1) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix xsd:base64Binary ottr: , @@ ex:Footballer ( ++ "string" ) , @@ cross ottr:IRI ( -0+.9+ ^^ LUB zipMin |  ) :: BASE .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ?var :: { ottr:Triple(?q= http://invalid false) } .
ex::doubleColon [ cross |  List<xsd:gMonthDay>invalid ?,S , , LUB<List> ?ny ?!   ] "Y*" :: BASE
 [ ex: zipMax |  @@ ex:Invalid Space ( ( , ) , ( abc ,, ) ) ) ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  ] :: { o-rdf:Type("B+", ?69-Kz#) <unclosedIRI(_:blank, xsd:invalidType) , } .
"string" :: { ottr:Triple(?:>, o-rdf:Template1, "unclosed) ,  bad::IRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noType } ;
owl:Template2 [ ?? badPrefix:string 123 ,  xsd:nonNegativeInteger  = "malformed"^^bad:datatype , ] { ottr:Triple(?h;, foot:Triple, "invalid"^^://noScheme) ) } .
ottr:Invalid Space [ ] :: (  ) .
xsd:Invalid Space [  ] @@ <unclosedIRI :: { LUB }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI List<owl:NamedIndividual>ottr: ?X , ,   rdf:XMLLiteral ,  @@ bad::IRI _:blank ,  , @@ "string" ( _:blank  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ ! "string"  , @@ ex::doubleColon (  ) @@ :noPrefix  :: { ex:Invalid Space(?EY^, ?var) } .
 :: { zipMax |  ://noScheme ( "w" ) } .
123 [ ++   ] :noType :: { o-rdf:Type(invalid, ?t3) ) } .
ex: [ ] ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Type [ ?? xsd:time 123 = "value"^^invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, http://invalid, "malformed"^^bad:datatype) ottr:Triple(?i ex:Invalid Space _:b2) , o-rdf:Type(_:blank, none) , } ;
http://example.com/:Annotation "V*" @@ zipMin |  ex:Triple ( ++ ( (  ) ) ,, ) ) :: BASE
o-rdf:Template1 :: { ottr:Triple(_:blank ://noScheme "malformed"^^bad:datatype) ) } .
:noPrefix ++ NEList<owl:DatatypeProperty>xsd::doubleColon "string" = invalid^^type ,  :: BASE .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { wrong ottr:IRI ( ( ?9 ) ^^ :noType ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ xsd:positiveInteger 123 , , ? xsd:byte ] :: { ottr:Triple(_:blank, ex:, ?TQ) , o-rdf:Type(_:blank, 23.14.15)  } .
 [ ?var ?( LUB ] @ http://invalid ex:Invalid Space :: { bad::IRI(?eY>, ";") , } .
ex::doubleColon [   xsd:Name  = ?*n ,  ] badPrefix:string :: { "string" } .
foot:Annotation [ ] :: { ottr:Triple(xsd:invalidType, xsd:Invalid Space, "2023-01-01"^^xsd:date) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
http://example.com/:Triple [  xsd:normalizedString , ,  @@ "unclosed :: { :noPrefix(?Mdi, _:b2) ( 
ottr:IRI [   owl:ObjectProperty , ] cross |  @@ :noPrefix ( _:blank ,  ) :: {  } .
owl:Template2 [ LUB<xsd:normalizedString>invalid 123 ! xsd:negativeInteger @@ 123  , @@ invalid |  ex: (  ) :: {  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?w_, 7+.abc) ottr:Triple("{*" o-rdf:Footballer ?qo`) , } .
<unclosedIRI List @@ zipMax |  ex:Invalid Space ( ++ ++ ( ?G9 ,, ) ) :: { ://noScheme(_:blank, ?var) } .
bad::IRI :: { zipMin |  "string" ( ( -2+ ) ) ^^ LUB ,, ) } .
ex::doubleColon [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:Template1 [  ] badPrefix:string :: { ottr:Triple(_:blank, http://invalid, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank, ex::doubleColon, 23.14.15) , } ...
http://example.com/:Annotation [ ++  "string" , ?!!   , ,  ] { ex:(?}k, _:b2) ) } .
"string" [ ! xsd:time , ,  ] "unclosed :: ( ottr:Triple(_:blank http://invalid "2023-01-01"^^xsd:date) , bad::IRI(_:blank, "malformed"^^bad:datatype) , ) .
ottr:IRI [  ottr:  , NEList<ottr:Bot>LUB xsd::doubleColon t-pnd:Punned-Class-ObjectProperty ?| zipMax |  @@ <unclosedIRI  :: { ?var } .
foot:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { o-rdf:Type(ex:, ?rR) zipMin |  ex:Invalid Space ( ++ none _:blank invalid |  ) } .
 :: { ottr:Triple(?@<5, owl:Template1, ) } .
://noScheme [ ?!! xsd:dateTime 123 = 23.14.15 , ] :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix [ List ] { ottr:Triple(?% ex:Triple _:b2) ) } .
123 ?? xsd:gYear "string" = invalid^^type , @@ xsd:Annotation ( _:blank ,  ) , @@ cross |  :noPrefix (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
badPrefix:Invalid Space [ ?!! LUB ?\1  ]  :: BASE .
ex::doubleColon [ ] :: { http://invalid(?var, false) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ? rdfs:Literal ] { o-rdf:Type(?et, ?F) , } .
ottr:IRI :: {  } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "_" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ++ ++ xsd:negativeInteger , ,  @@ <unclosedIRI (  ) , :: { ottr:Triple(_:blank bad::IRI _:b1) ottr:Triple(_:blank, ex:Invalid Space, 23.14.15) } .
://noScheme [ ! NEList<xsd:gYear>xsd:invalidType 123 = "malformed"^^bad:datatype , List<> ?|O , ] :: { :noPrefix(invalid, ) , ottr: } .
"string" [ "L*" @@ invalid |  ottr:Footballer (  ) @@ zipMin |  o-rdf:Triple ( _:blank  ) : { "string" ++ owl:Type } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?'/r, ex:Template1, none) ; } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank :Footballer ??H) , } .
badPrefix:Invalid Space :: { "%" } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ! NEList<<LUB<xsd:yearMonthDuration>>>invalid , , List ] @@ 123 (  ) ( :: BASE .
<unclosedIRI [ ] :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(ex:Invalid Space, xsd:Annotation) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?! ?=b;N6  , @@ zipMax |  bad::IRI ( "invalid"^^ex::doubleColon , ++ ( ( "string" ,, ) ) ) ,, ) :: { o-rdf:Type(?{, "string") , } .
://noScheme xsd:int xsd::doubleColon bad:foaf:name ?9@ @@ ?var _:blank cross |  @@  ex:Type (  ) :: ( ottr:Triple(?,, http://invalid, abc) ) .
http://example.com/:Triple [ ?!! xsd:integer 123 = "unclosed ,  ] { (_:blank, 23.14.15)  } .
owl:Template2 [ zipMin |  xsd:NMTOKEN  ] ottr: :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Triple ?? ottr: ?~ , @@ zipMax |  ottr:IRI (  ) @@ ://noScheme "invalid"^^<unclosedIRI cross :: { ottr:Triple(_:blank, :Annotation, ex:) } (
ex::doubleColon [ ?var ?0s=rB , ,  ] :: { o-rdf:Type(_:blank, 23.14.15)  (  ) } .
ex:Invalid Space [ "I" @@  bad::IRI ( LUB ) ) :: { http://invalid(, ?n) , } .
:noPrefix [ xsd:yearMonthDuration 123 , ++ ++ NEList<xsd:dateTime>List ] @@ || ex: ( _:blank , ++ ?var 1 ++ ++ ( (  ,, ) ) ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
?var [ ottr:Bot xsd:invalidType  ] badPrefix:string :: { ottr:Triple(_:blank, ex:Invalid Space, "unclosed) , ottr:Triple(_:blank bad::IRI _:b1) ; } .
xsd:Invalid Space :: { bad::IRI(??, ""unclosed") , 
ex: [ ] :: { "string" (  ) } ...
o-rdf:Annotation [  xsd:negativeInteger ?+# = "string" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ NEList<<LUB<xsd:gYearMonth>>>:noType  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] bad::IRI :: { o-rdf:Type(?%, _:b1) ; } .
://noScheme [ 123 @@ wrong <unclosedIRI ( _:blank ( ( invalid term ) ) , 23.14.15 ,, ) ^^ List ,, ) :: { "E*7<*" } .
:noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
http://invalid [ cross |  xsd:unsignedByte 123 , ,  ] @@ invalid |   ( ++  zipMax |  ) :: { ottr:Triple(xsd:invalidType ex::doubleColon badPrefix:string) , } .
<unclosedIRI ?? xsd:Name , zipMin |  @@ ex:Invalid Space  :: { ottr:Triple(_:blank, ex:Invalid Space, "unclosed) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ,  
?var [ ? xsd:normalizedString  = "unclosed   xsd:gYear , ,  ] @  owl:Type ( xsd::doubleColon ) :: BASE
ex:Invalid Space [ bad:foaf:name ?R , ] "r+" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Annotation :: { ottr:Triple(123 ex:Type ?`+x) , } .
?var [  ] @@ invalid |   ( ?var 1 ^^  ) , @@ ottr:IRI ( ++  ,, ) :: BASE
ex::doubleColon  ?q @@ ex: ( badPrefix:string ) :: { o-rdf:Type(_:blank, 23.14.15) ottr:Triple(_:blank, :noPrefix, _:b2) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme } .
<unclosedIRI [   xsd:string ?c  ,  xsd:gYear , ,  zipMin |  @@ bad::IRI ++ ++ "unclosed , _:blank  :: {  } .
"string" [ invalid ] :: { http://invalid(?), List) } .
o-rdf:Footballer [ ] :: { zipMax |  xsd:Template1 ( xsd:invalidType ) } (
owl:Invalid Space  xsd:dateTime 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  bad::IRI (  ) ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:IRI [  ] ; { <unclosedIRI } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
bad::IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ "string" (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { ://noScheme(ottr:, 1..2) ( } .
http://invalid [ zipMax |  xsd:dateTime ?x: ++ NEList<xsd:NCName>badPrefix:string , , List<"unclosed> ?5 , @@ cross ex:Template1 ( ?U ) :: { cross |   ( foot:Template1 ^^  ,, ) } .
:noPrefix [ 123 ] @@ ex::doubleColon ++ ++ ( ( "2023-01-01"^^xsd:date ,, ) , _:b1 ) ) , ++ "string" ?var 1 invalid |  :: ( o-rdf:Type(?_*), ?A) ) .
?var [ ?! xsd:token 123 = LUB ] { ottr:Triple(?m, ex:Invalid Space, List) ottr:Triple(_:blank ottr:Footballer "unclosed) , } .
ex::doubleColon [ ?var ?; ,   xsd:int ,  ] xsd:invalidType :: { ottr:Triple(_:blank ex::doubleColon _:b2) , o-rdf:Type(_:blank, none) ) }
http://invalid :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template2 [ "_*" ] zipMin |  @@ 123 ( ++ ++ "invalid"^^  ) :: { ottr:Triple(?A bad::IRI _:b1) } .
ottr:IRI [ xsd:://noScheme ?Bh1 ] :: BASE .
ex:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] :noPrefix :: { ex: LUB } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
<unclosedIRI [ ++ ++ ottr: 123 , , ! xsd:string ,  @@ cross |  :noPrefix (  ) @@ zipMax |  ?var ( _:blank ) :: { o-rdf:Type(_:blank, xsd::doubleColon) , } .
ex:Footballer  ?K , @@ ottr:IRI  ; :: { ottr:Triple(:noType, bad::IRI, none) o-rdf:Type(_:blank, "unclosed) ,  
ottr:Invalid Space [  LUB<<List<xsd:int>>>invalid ?H4yq ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  :: ( ex:(?-, ?e$;) , ) .
:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ://noScheme LUB) , } ;
123 [ ex: ] :: { ottr:Triple(?h3, foot:Type, ?)) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { "V*~X*" } .
http://invalid [ LUB<<List<xsd:double>>>xsd:invalidType badPrefix:string @@ ex:Template1 ( ?] :: { <unclosedIRI _:blank , ++ ++ ?uT ,, } .
 :: { o-rdf:Type(invalid, "unclosed) ex:Invalid Space(?|, none) , } .
:noPrefix List<List<NEList<xsd::doubleColon>>> ?a , @@ ex::doubleColon ( ( ( _:b2 , "malformed"^^bad:datatype ) ,, ) )  ) @@ zipMax |  ?var ( ( , ) ^^  ) :: { bad::IRI(?;, "2023-01-01"^^xsd:date) 
badPrefix:Triple [ xsd:duration 123 , , 123 ?f invalid |  xsd:yearMonthDuration "string" ,  ] @ wrong http://example.com/:Template1 ( "-*" ) :: BASE
owl:Annotation [ ? xsd:byte   , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 "string" @@ bad::IRI _:blank ++ "string" ,  ; :: ( o-rdf:Type("G+", ?=) ( ) .
ottr:IRI [   owl:DatatypeProperty @@ ottr:Footballer ( http://invalid ) , @@ zipMin |  ex: ( "malformed"^^bad:datatype ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: { xsd:invalidType } .
://noScheme [ cross |  xsd:base64Binary 123 , ,  ] invalid |  @@   (  ) :: { ottr:Triple(_:blank badPrefix:Annotation none) , } .
ex:Invalid Space [ ++ ++ xsd:unsignedLong , ++ ottr:Bot , ] :: { ottr:Triple(?@g, :noPrefix, _:b2) , zipMax |  ex::doubleColon ( _:blank  ) } .
?var [ ] :: { ex:(?pxm, xsd::doubleColon) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Template2 [ ?!! LUB<<List<xsd:double>>> ?2&( = "malformed"^^bad:datatype ( ( ?var 1 ,, ) ) ) ,  ?M9 , ] { o-rdf:Type(?$, abc) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } ,
owl:Invalid Space :: { o-rdf:Type(?v, _:b1) ) 
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: "unclosed , @@  ottr:Template2 (  ) :: { bad::IRI(_:blank, invalid) ) } .
ottr:IRI [ NEList<<LUB<xsd:normalizedString>>>:noType 123 ,  ] @ ex:Invalid Space ( "malformed"^^bad:datatype , ++ ?JGh _:blank ) :: { ottr:Triple(?F)(|@ http://invalid ?$) , } (
://noScheme [  owl:rational ] LUB :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ :noPrefix ] :: { cross |  ex::doubleColon ( ++ ++ invalid term invalid |  ) } .
"string" [ ] :: { 123 } .
  ?%LC , , zipMax |  xsd:dateTimeStamp "string" ++ badPrefix:string  , @@  :: {  } .
foot:Annotation :: ( o-rdf:Type("s*;3*", xsd:invalidType) ) .
badPrefix:Template1 [ ?? xsd:nonPositiveInteger ,  ]  : { ottr:Triple(_:blank, ex:, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, _:b2)  } .
?var [ ] :: { ottr:Triple(_:blank ex::doubleColon ex:Invalid Space) zipMin |  ottr:IRI ( "string" ) } .
bad::IRI [ "k*" ] @ xsd:Template1  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex: :: { ottr:Triple(?r4(}, owl:Type, ?|w) ) } .
<unclosedIRI [  ] :: { ://noScheme(xsd:invalidType, false) , o-rdf:Type(invalid, abc) , } .
:noPrefix [ ? LUB<<List<xsd:unsignedInt>>>xsd::doubleColon ?z = "unclosed List<List<List<List>>> ?9 , , ! "string" = ( (  ,,  , ""6"" ) ] {  } .
123 [ owl:DatatypeProperty 123 ,  :: { http://invalid(?Cn, _:b1) } .
 [  rdfs:Resource   , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: BASE
:Triple ?! xsd:language cross |  @@ o-rdf:Invalid Space ( ++ ++ ( ( ?var 1 ) ) ,, ) , _:b2 ^^ :noType ) :: { LUB }
:Footballer [ ? NEList<xsd:hexBinary>invalid ?( = ( _:b1 ,   , @@ || 123 ( _:blank ,, ) , @@ ottr:IRI "string"^^^xsd:string :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { ex::doubleColon ( "string" ) } .
://noScheme [ ++ xsd:token "string" = "value"^^invalid ] LUB :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank :noPrefix ?aC) , } .
bad::IRI [  xsd:normalizedString ++ ++ 123  , , owl:rational "#*" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(ex:, 7+) ,  } .
 [  ] @@ zipMin |  http://invalid ( ( (  ) ) ,, ) ^^ xsd::doubleColon cross |  ) ( :: { o-rdf:Type(?I, ) ) } .
?var  @@  bad::IRI (  ) @@ 123 (  ) :: { ottr:Triple(_:blank, o-rdf:Template1, 23.14.15) } ,
foot:Type [ ] :: { ottr:Triple(?[ badPrefix:Annotation "2023-01-01"^^xsd:date) ottr: 
http://example.com/:Template2 [ "unclosed @@ ex:Template1 ( ?K :: { ottr:Triple(?Q0 xsd:Invalid Space "unclosed) ; }
?var [   LUB<<List<ottr:IRI>>>ottr: wrong List<xsd:duration> ?i , @  :Annotation ( ""w*"" ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon ; { ottr:Triple(?- bad::IRI ?^`) ( } ...
ex: :: { <unclosedIRI(_:blank, _:b1) , o-rdf:Type(xsd:invalidType, "2") ottr:Triple(123, o-rdf:Type, false) } .
http://invalid [  ] :: { (?u, "unclosed) , } .
:noPrefix [ ] :: BASE
ex:Invalid Space [ zipMin |  xsd:negativeInteger "string" ] xsd::doubleColon :: { ://noScheme ( ( ( , ) ,, ) ) , ?3 ) ^^ invalid ,, 
"string" [  ]  :: { LUB } ,
badPrefix:Template2 [ ! xsd:NCName 123 = 23.14.15 , owl:AnnotationProperty "unclosed , , xsd:string ?QF , , xsd:normalizedString  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?? xsd:NMTOKEN 123 = xsd:invalidType @@ cross ex:Template1 ( ?Tz ) :: BASE .
:Invalid Space rdfs:Literal "unclosed , ,  zipMin |  @@ ?var (  ) :: { ex:(_:blank, _:b2) o-rdf:Type(_:blank, 23.14.15) , } .
bad::IRI [ "string" ?v[ , ] { 123 } .
ex:Invalid Space [ xsd:positiveInteger  ++ ++ t-pnd:Punned-Class-ObjectProperty ,  ]  :: { ottr:Triple(_:blank http://invalid ?-) ) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { :noPrefix ( ( invalid term ) ,, ) ) ^^   } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(List, owl:Annotation, ottr:) , http://invalid(?UI", abc.5+) 
badPrefix:Triple [ badPrefix:string ] @ || xsd:Template2 (  ) :: { ex::doubleColon(_:blank, _:b1) , } ;
?var [  ottr: ?% , ] "H*8h*" :: BASE .
ex:Invalid Space [   xsd:integer ?? xsd:positiveInteger , ,  ] @@ zipMax |  <unclosedIRI (  ) , @@ ottr:IRI (  ) :: { ottr:Triple(_:blank, xsd:Triple, ?y) ) } .
ottr:Footballer [ zipMin |  List<<xsd:dateTime>>badPrefix:string "string" , xsd::doubleColon ] :: ( 123 ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(ex::doubleColon, ""S"")  } .
 [ ] :: { o-rdf:Type(?w+Orq, List) , } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ bad::IRI _:blank ,, :: { ottr:Triple(?czC{ ex: "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ++  = 123 @@ cross |  http://example.com/:Template1 ( ?@  ) :: { http://invalid(?"-, o-rdf:Template2) 
foot:Invalid Space :: BASE
:Type [ ?!! xsd:hexBinary ?d = "unclosed , ] @@  ?var (  ) ; :: { || badPrefix:Annotation (  ) } ,
:Template1 [ ] :: { ottr:Triple(?jP, ://noScheme, "string") } ;
123 [   "string" = "invalid"^^ex:Invalid Space , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ottr:IRI _:blank , ++ -2+.abc ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ cross |  xsd:byte ?FEBHIY ] @@ invalid |  http://invalid ( ++ ++ (  ) ) ( 123 ,, ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank http://example.com/:Triple 0+) , "unclosed } .
 ++ xsd:integer  = "malformed"^^bad:datatype ?! xsd:duration , @@ ex::doubleColon (  ) , @@ ex:  :: { bad::IRI(:noType, ?t) , } .
<unclosedIRI [  ] :: { || ?var ( ( , ) ^^ xsd::doubleColon zipMax |  ) } .
ottr:Annotation [ ++ ++ badPrefix:string ?Ry , , http://invalid ] {  } .
owl:Template2 ; { o-rdf:Type(?b, true) o-rdf:Type(?`, none) ( } 
o-rdf:Type [  ?g , , 123 ?& , ,  ] ottr: :: ( ottr:Triple(?. foot:Footballer xsd:Invalid Space) ) ) .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ zipMax |  "string" ( _:blank ,  ) :: { o-rdf:Type(_:blank, ?e) , ex:(_:blank, "w+") } .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { ottr:Triple(?E=j, owl:Template1, "malformed"^^bad:datatype) , } ...
xsd:Triple [ 123 ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme  ?v ?!! t-pnd:Punned-Class-ObjectProperty "string" = "malformed"^^bad:datatype ,  @@ bad::IRI ( ( (  ) ,  ) ) ^^ List wrong ) ) :: { <unclosedIRI ex:Invalid Space } .
ex::doubleColon [ ?var ?- , ] invalid :: { LUB } .
 [ List<<xsd:string>>badPrefix:string :noType ] {  } .
http://invalid [   xsd:language , ,  ?of = "unclosed ]  :: ( ottr:Triple("Y*{r*" ex::doubleColon http://example.com/:Annotation) ( ) .
ottr:Footballer :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(ex:Invalid Space, ?*) } .
bad::IRI :: {  
ottr:IRI [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var "unclosed  :: { badPrefix:string } .
ex::doubleColon [ "string" ?e , , ++ ++ 123  , ] 123 :: { ottr:Triple(_:blank ex: 23.14.15) ottr:Triple(_:blank, , _:b1) , } .
:noPrefix [ List<xsd::doubleColon> ?Q$t}CA# List<t-pnd:Punned-Class-ObjectProperty>List ?R , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?j> ) :: ( o-rdf:Type(?'k, ottr:) , ) .
://noScheme [ invalid |  xsd:long "string" ] @@ owl:Type ( _:blank ) ; ; { zipMax |  http://invalid ( ++ ++ ""4"" ,  ) } .
:Invalid Space [   owl:DatatypeProperty  = "2023-01-01"^^xsd:date ] { ottr:Triple(_:blank, , none) , ottr:Triple(_:blank <unclosedIRI _:b2) ) } .
ex:Template1 [ ?var ] { zipMin |  ottr:IRI ( ++ ( ""&+"" ) ) _:blank || ) } .
"string" [  owl:ObjectProperty  = invalid^^type ?!! xsd:byte , invalid |  NEList<<LUB<xsd:anyURI>>>List ?M , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ? xsd:language 123   :: { ottr:Triple(_:blank, xsd:Footballer, ) , } .
<unclosedIRI [ xsd:nonPositiveInteger ex::doubleColon , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ?var 1 ,, , @@ ex:Invalid Space ( "g" ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  ] xsd::doubleColon :: { o-rdf:Type(?j>f, "2023-01-01"^^xsd:date) ottr:Triple(:noType ex: ?uw) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?@, 1..2) , http://invalid(?X, true) , } .
123 :: ( invalid ) .
:Triple [ ] :: {  } ;
o-rdf:Type [ ++ ++ "string"  ] zipMax |  @@  ottr:IRI (  ) :: { o-rdf:Type(_:blank, abc) ( 
123 :: { ://noScheme ( ( , ) http://invalid ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { ottr:Triple(?4, :noPrefix, "invalid"^^bad::IRI) } ...
ex:Template1 [ "^*" ] @@ ottr:IRI _:blank ( :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?! xsd:negativeInteger  = invalid^^type  @@ ex::doubleColon (  ) @@ zipMin |   (  ) :: { List } .
"string" [ ] :: { o-rdf:Type(_:blank, ?var) , } .
ex:Invalid Space [ "string" ?S5 ]  :: { ottr:Triple(xsd::doubleColon o-rdf:Invalid Space ?[)  } .
<unclosedIRI [ cross |  NEList<xsd:gYear>LUB ?76{ , ] { :noPrefix(?v, _:b2) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , } .
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Type   xsd:time 123  , ?!! owl:rational , , ! xsd:gMonth @@ invalid |  ?var ( _:blank , ++ "unclosed ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ++ ++ t-pnd:Punned-Class-ObjectProperty  = "unclosed   xsd:short , @@ bad::IRI (  ) @@  ?var (  ) :: { ottr:Triple(_:blank badPrefix:Triple ?#) , } .
:Footballer [  @@ ex:Template1 ( ?BD :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?d, "malformed"^^bad:datatype) , }
ex:Invalid Space [ zipMin |  NEList<<LUB<xsd:normalizedString>>>:noType ?:a , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ :noPrefix (  ) ( "unclosed ) ) ^^ xsd:invalidType invalid |  :: {  } .
<unclosedIRI [ ] :: { ottr:Triple(123, ://noScheme, ottr:) ,  } .
http://invalid [ "unclosed ] :: { cross |  ex: ( ++ ++ ?var 1 ,, ) } .
"string" [ ++ 123 = ( (   ,, ) ] { ex::doubleColon(?-nm, http://example.com/:Annotation) } .
xsd:Type [ xsd:negativeInteger "string" , , ?!! rdfs:Resource ]  :: { o-rdf:Type(?k82, "invalid"^^://noScheme) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
ottr:Invalid Space :: ( ottr:Triple(?g ex:Template1 _:b2) ( ) .
?var :: { http://example.com/:Footballer _:b2 invalid |  } .
ex::doubleColon [ xsd:unsignedInt 123 , ,  ] bad::IRI :: BASE .
ottr:IRI [ LUB<LUB> ?GZ ? xsd:language  = "unclosed , "unclosed ] @@ :noPrefix ( (  ) ^^ ottr: _:blank , _:blank ,, ) :: { ottr:Triple(?B http://invalid "2023-01-01"^^xsd:date) ( } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ?!! List<<xsd:gMonth>>:noType @@ ||  ( ++ ?` ) :: { ex:Invalid Space(_:blank, "string") } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ://noScheme ( xsd:invalidType ) ; :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(List, xsd:Template2, ?#) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { o-rdf:Type(?c, "invalid"^^) , }
:Template1 [ owl:NamedIndividual xsd::doubleColon , ] :: { "k*J'*" } ..
ex:Invalid Space [ zipMin |  rdf:XMLLiteral "string" , ] { ottr:Triple(?E ottr:Type false) ottr:Triple(?,, foot:Triple, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: ( ottr:Triple(<unclosedIRI, o-rdf:Triple, 23.14.15) xsd::doubleColon ) .
:Template1 [ ] :: { o-rdf:Type(?l!, ?9) } .
://noScheme [ ?! xsd:yearMonthDuration 123 = "value"^^invalid @@ 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:IRI "z*:M*" } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: {  } .
ex::doubleColon [  List<xsd:short>badPrefix:string , ] :: { http://invalid(_:blank, ) , } .
:noPrefix [ xsd:foaf:name ?er , , ottr: ] { ottr:Triple(?? bad::IRI invalid) , } .
ex:Invalid Space xsd:dayTimeDuration ?0  @@ ex:Template1 ( ?+ :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
 [ zipMax |  ottr:IRI "string" ,  ] :noType :: { ottr:Triple(_:blank, :noPrefix, _:b1) , :noPrefix(?x, none) ) 
ottr:IRI [  ] :: { ottr:Triple(_:blank, ottr:Triple, 123) , http://invalid ?f ^^ ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [   xsd:language 123  , ,  ?M6 ] @@  badPrefix:Template1 ( _:blank ,, ) ) :: BASE .
ex:Invalid Space :: { <unclosedIRI(?-8beW1rn, _:b2) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(, ?KA) ; } .
 ?!! invalid  ,  @@ ex::doubleColon (  ) , @@ ://noScheme  :: { ottr:Triple("unclosed :noPrefix ""unclosed")  } .
ex: [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ex::doubleColon :: BASE
?var [  "string" = invalid^^type zipMin |  NEList<<LUB<xsd:date>>>LUB 123 , @@ cross |  o-rdf:Invalid Space ( ++ ++ ( ( "string"^^^xsd:string ,, ) , owl:Template2 ) ) :noType ) :: ( ottr:Triple(?:, http://example.com/:Footballer, none) ) .
xsd:Type "unclosed @ invalid |  ottr:IRI ( _:blank zipMax |  ) :: { "t*7p*" } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ? xsd:long   :: { http://invalid(?5, _:b2) , ottr:Triple(_:blank, ex:, "unclosed) ; } (
ex:Annotation [ ottr:integer ?t , , ?!! LUB  , List<<xsd:boolean>>xsd:invalidType ?qhj , ] 123 :: { o-rdf:Type(List, ?{l) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var :: { ottr:Triple("8" badPrefix:Invalid Space )  } .
ex::doubleColon ?? "string"  @@ || ex:Invalid Space ( _:blank wrong ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: { bad::IRI(?g, "malformed"^^bad:datatype) , } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  ://noScheme ( ++ ( 123 ) ) } .
"string" [ badPrefix:string ] _: { ottr: } ..
owl:Template2 [ ++ ++ owl:NamedIndividual ottr:Bot "unclosed ] @@ ottr:IRI (  ) , :: ( ottr:Triple(?Gr o-rdf:Template1 "2023-01-01"^^xsd:date) ) ) .
http://example.com/:Template2 [   xsd:unsignedShort ?Sq  , ] :noPrefix :: {  } .
ex:Invalid Space :: BASE .
ottr:IRI [ ] :: { ottr:Triple(?r,, http://invalid, true) ottr:Triple(LUB xsd:Type ?RN}) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var xsd:normalizedString  ?? 123  ,  @@ bad::IRI  , @@ ex: (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ "-*H7*" @@ List :: { o-rdf:Type(_:blank, 123) , } .
ex::doubleColon [ zipMin |  NEList<<LUB<ottr:IRI>>> "string" ] :: { <unclosedIRI(?n, none) , invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  ://noScheme ( :noType ) } )
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  badPrefix:Triple ( ( ?(! , "string"^^^xsd:string ,, ) ^^ xsd::doubleColon , 23.14.15 wrong ) :: { ottr:Triple(?] :Annotation o-rdf:Template1) 
ottr:Invalid Space [ xsd:decimal ?i@j , , ?!! ottr:Bot , ] @@ invalid |  owl:Footballer ( ++ ++ ( 5+ ) ) ) , ]: { o-rdf:Type(?`, "2023-01-01"^^xsd:date) ( } 
ottr:Annotation [ ? ?y = "string" NEList<List<( ( "string"^^^xsd:string ) ,, ) ) , >> ?qG , ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ bad::IRI ( _:blank , ++ ++ 23.14.15 ) :: { invalid } .
ottr:IRI [ ?? xsd:byte   ] { o-rdf:Type(_:blank, ?wf) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  ] :: { ottr:Triple(?8a, owl:Triple, "}*^,*") } .
ex:Invalid Space [ xsd::doubleColon @@ ottr: :: { ex::doubleColon(123, "2023-01-01"^^xsd:date) , } .
ex: ?var ?9 ,  xsd:positiveInteger 123 = "unclosed , ,  cross |  @@ ://noScheme  :: { ottr:Triple(?7 <unclosedIRI 1..2) ( } .
http://invalid :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Footballer [ ] :: ( ottr:Triple(?-3<h, badPrefix:Type, _:b2) , zipMin |  :Template2 ( ++ ?R( invalid |  ) ) .
ex:Invalid Space [ ] :: BASE .
ottr:IRI [    , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <unclosedIRI :: { ottr:Triple(_:blank, xsd:Type, "string") ; } .
http://example.com/:Footballer [ ++ rdfs:Literal , , ++ ++ xsd:nonPositiveInteger , wrong @@ 123  :: ( ottr:Triple(_:blank ex::doubleColon 23.14.15)  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI rdfs:Datatype 123 zipMin |  LUB<<List<ottr:IRI>>>List ?w9rx @@ cross |  ://noScheme ( "string" ,, ) , :: { :noPrefix(xsd:invalidType, ?q=) } .
http://invalid [  ] @@ zipMax |  ex: ( ++ ( ?var 1 ,, ) ) ) , @@  ( _:b2 ^^ badPrefix:string  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ?var ( "M+" ) } .
ottr:Annotation :: { LUB }
:Template1 [  ] :: { o-rdf:Type(?&v:, "invalid"^^<unclosedIRI) , 
ex:Invalid Space [  ?C , ?? xsd:base64Binary ] { ottr:Triple(?Y, badPrefix:Triple, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, none) ) } .
123 [ List<"string" ?mz> ?X}T , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: { ex::doubleColon(?0, abc) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?var, ?q) , } .
 [  @@ ottr:IRI ?:> ( :: BASE .
foot:Triple [ ++ ++ LUB<<List<ottr:Bot>>> 123 = "value"^^invalid ] @@ invalid |  <unclosedIRI (  ) @@ ://noScheme ( ex: ) :: {  } .
:noPrefix [ ] :: { ottr:Triple(_:blank xsd:Footballer List) , ottr:Triple("H+", bad::IRI, "invalid"^^http://invalid) ; } .
ex:Invalid Space :: { ottr:Triple(?+, o-rdf:Invalid Space, :Template2) zipMin |  owl:Annotation ( (  ) ^^ badPrefix:string ++ _:b2 ,, ) } .
ottr:Template1 [ xsd:negativeInteger "string" ++ xsd:gYear  = 23.14.15 , :noType ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type ?? xsd:positiveInteger ,  \: { xsd:invalidType } 
badPrefix:Template1 [  rdfs:Literal "string" ?!   , ,  ] :: ( ottr:Triple(?M ex:Invalid Space 23.14.15) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ NEList<xsd:language>invalid 123 , , ++ ?l0  ] "_+" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
  @@ ex:Invalid Space ; { xsd:invalidType } 
"string" :: BASE .
ottr:IRI [ none:foot:clubHistory ?/  ] @@ bad::IRI (  ) ) :: { :noPrefix(_:blank, ?@) , } .
http://invalid [ ] :: { ottr:Triple(?!, badPrefix:Template2, ""e*"") ; } .
ex: [ List<! xsd:gYear  = 23.14.15> ?#kL , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(LUB, 123) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
<unclosedIRI [ zipMax |  xsd:dateTime "string" , ] { ://noScheme(_:blank, _:b1) ottr:Triple(_:blank ex::doubleColon _:b2) , ex:Invalid Space  } .
?var [  @@ cross ex:Template1 ( ?W ) :: BASE
ottr:IRI [ xsd:negativeInteger "T" , ,  List<<xsd:nonPositiveInteger>>LUB ,  ] ottr: :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer zipMin |  xsd:normalizedString "string"  @@ ?var _:blank ,  :: { ottr:Triple(?kL, , o-rdf:Template1) , } .
<unclosedIRI [ :noPrefix ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
http://invalid [ ?! xsd:time ?0  ]  :: { ex:(_:blank, ?1) } .
ex::doubleColon [ ] :: { ottr:Triple(:noType :Triple invalid) o-rdf:Type(?8, "2023-01-01"^^xsd:date) ) } .
://noScheme :: BASE
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( 123 ( ( ( , ) ,, ) ^^ badPrefix:string ) ) .
bad::IRI [ rdfs:Literal  , @@ || ottr:Invalid Space ( "unclosed ) @@ zipMax |  ex:Invalid Space ( ++ ++ 123 ( "invalid"^^ ) )  ) :: {  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ xsd:nonPositiveInteger , @@ invalid |  :Annotation ( ++ ++ "malformed"^^bad:datatype ,, ) ; :: BASE .
bad::IRI [ ++ ++ :noType  ] "string" :: { ottr:IRI ( _:blank wrong ) } .
 :noPrefix @@ cross ex:Template1 ( ?) ) :: { ottr:Triple("I+" foot:Footballer ?yY) LUB } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, 23.14.15) } .
://noScheme :: { ottr:Triple(?", ex:, badPrefix:string) ( } .
ex::doubleColon [ ?var ?d ? t-pnd:Punned-Class-ObjectProperty ,  ] @@ zipMax |   (  ) @@ <unclosedIRI  :: { http://invalid(?s, 1..2) , }
owl:Type [ ] :: { http://invalid(?\, _:b1) ,  
xsd:Triple [  xsd:short 123 = 23.14.15 , , ! xsd:hexBinary , ?! xsd:unsignedLong  ] @@ cross |  ottr:IRI (  ) , @@  ex:Invalid Space ( xsd::doubleColon ) :: ( o-rdf:Type(?8, 8+) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "d" } .
123 [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ "string" ] List :: { o-rdf:Type(_:blank, http://invalid) } (
ex:Invalid Space [ ] :: { ottr:Triple(xsd::doubleColon, <unclosedIRI, "2023-01-01"^^xsd:date)  } .
foot:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ bad::IRI ++ ++ ( (  ) , none ) ) zipMin |  :: { ex::doubleColon(?h|, ?Ua) , } .
 ?? t-pnd:Punned-Class-ObjectProperty "string" = "unclosed @@ :noPrefix (  ) , @@ ://noScheme (  ) :: { ottr:Triple(_:blank ex: "malformed"^^bad:datatype) , ?var (  ) } .
xsd:Triple [ ! badPrefix:string   List<<xsd:unsignedByte>>:noType ?* = "malformed"^^bad:datatype , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Template2 [  ?E , ++ ++ xsd:decimal , , ?! xsd:nonPositiveInteger ,  ] @@ ?var (  ) @@ invalid |  "string" (  ) :: BASE
ottr:Template1 : { ottr:Triple(?G} http://example.com/:Footballer 23.14.15) , } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:integer ?FV , 123 ] { "unclosed } .
?var [ ] :: BASE .
o-rdf:Triple :: { o-rdf:Type(, xsd:invalidType) } .
ex: [ ?!! "string"  , ,  ] bad::IRI :: { ottr:Triple(_:blank :Footballer _:b2) , } .
://noScheme [ xsd:Name ottr:  ] @@ ex:Invalid Space (  ) @@ cross |  :noPrefix (  ) :: { <unclosedIRI  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross :noPrefix ( ++ ++ ( , ) ) :: { ottr:Triple(?>, http://invalid, ?:) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [   owl:rational   ] :: ( <unclosedIRI(_:blank, "unclosed) , o-rdf:Type(_:blank, _:b1) ) ) .
owl:Type [ ?!  ?A , @  badPrefix:Template1 ( :noType ) :: { ottr:Triple(?* ottr:Template2 23.14.15) ; }
ottr:IRI [ invalid |  List<owl:NamedIndividual>ottr: 123 , ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { o-rdf:Annotation ( ++ false ?D ^^ xsd::doubleColon ,, ) } .
ex: [ ] :: BASE .
"string" [ ?! xsd:NCName ,  ] @ cross |  ex:Invalid Space ( ++ ++ ( ( , ) ,, ) zipMax |  ) :: { ?var } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { http://invalid(_:blank, -1+) } .
:noPrefix zipMin |  List<xsd:gDay> ?|  @@   :: { ottr:Triple(?[, ex::doubleColon, ?*o) ; } .
://noScheme [ xsd:float "string"  @@ ex:Template1 ( ?i :: { o-rdf:Type(_:blank, 23.14.15) , ottr:Triple(_:blank foot:Type "malformed"^^bad:datatype) , } .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
123 [ "1*$S*" ] @@ ex: :: ( ex::doubleColon(:noType, "invalid"^^ex:) (?X}I", badPrefix:string) ) ) .
o-rdf:Footballer :: { ://noScheme(<unclosedIRI, ?.}) , } ..
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ottr:IRI  , @@ "string" (  ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, _:b2) , ottr:Triple(_:blank, bad::IRI, 23.14.15) } .
ex: [ ++ ++  ?i ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 invalid |  List<NEList<xsd:normalizedString>xsd::doubleColon> ?"> , ?! xsd:positiveInteger , , owl:ObjectProperty "o+" , @@ ex:Template1 ( ?% :: { ottr:Triple(?S badPrefix:Invalid Space badPrefix:string) ) } .
http://invalid [  @@ :noType :: { ottr: } .
ex::doubleColon [ ] :: {  } .
:noPrefix [   123 = "string" ";*" ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { || 123 ( List ) 
xsd:Triple [ 123 ?) , ] :: { ottr:Triple(?q,&a, ottr:Template1, _:b1) ; } ,
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { xsd::doubleColon } .
"string" [ 123 ] @@ ex:Template1 ( ?a :: BASE
http://example.com/:Template1 LUB<<List<xsd:nonPositiveInteger>>>LUB 123 , @@ ottr:IRI ( ( (  ) ) , xsd:Invalid Space ,, ) ^^ xsd:invalidType _:blank cross |  ) @@ ://noScheme  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ xsd:int ex: , ,   xsd:base64Binary ?o = "string" ] :: { ottr:Triple(_:blank http://invalid ?YJ) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("^*", _:b1) ) } .
:noPrefix [  ] invalid :: { ex::doubleColon(?Wn], ottr:) , } .
bad::IRI [ ] :: { ottr:Triple(?u42Xj+L, badPrefix:Type, _:b2) } .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
?var ++ xsd:short  = invalid^^type , ?? ottr:IRI ?!! xsd:token ,  @@ zipMin |  ?var (  ) ; :: {  123 ( ( , ) ) } (
ottr:IRI [ <unclosedIRI ] "=+" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?i8, none) ( ) .
ex:Invalid Space [ LUB<<List<ottr:Bot>>>xsd::doubleColon 123 , , ++ "string" = invalid^^type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Template2 [ ] :: { LUB } .
?var :: { ottr:Triple(ottr:, :noPrefix, ?b) , } .
http://invalid "string" ?V ,  @@ ://noScheme  , :: { ottr:Triple(_:blank o-rdf:Footballer _:b1) invalid |  ex::doubleColon (  ) } .
bad::IRI [   xsd:base64Binary ]  @@ ex: ( _:blank ) :: { (?^, ) }
owl:Template1 [ List<zipMin |  xsd:decimal ?6C> ?,j , @ cross |  xsd:Annotation ( xsd:invalidType ) :: BASE
:Triple [ xsd:gDay  ?? invalid 123 , ]  :: { ottr:Triple(?I http://example.com/:Type ""unclosed") ,  
?var [ List<List<|| List<List<<xsd:gYear>>>>> ?; , , ? LUB ?4WG[2~$  ] 123 :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "|+" :: { ottr:Triple(List :noPrefix ?R) , }
ottr:IRI [ ] :: BASE .
:Triple [   owl:rational ,  zipMin |  @@ ex::doubleColon _:blank zipMax |  :: { ottr:Triple(_:blank, ottr:Annotation, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ++ 123 = "string" , ] :: { ://noScheme(?Vm, ) ( } .
http://invalid [ :noType ] { o-rdf:Type(?b, "invalid"^^ex:Invalid Space) , "string" (  ) } .
<unclosedIRI [ ?var ?t ] @@ invalid |  o-rdf:Template2 ( xsd:invalidType ) :: { invalid } ;
http://example.com/:Footballer :: ( ottr:Triple(?C badPrefix:Template1 "unclosed) ottr:Triple(?#, xsd:Invalid Space, none) , ) .
o-rdf:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ 123 ( _:blank ottr: ) ; :: BASE
ottr:IRI [ ?! List<xsd:language>badPrefix:string ?2 = "value"^^invalid , cross |  xsd:dateTime "string" , ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: BASE .
http://invalid [   @@ ex::doubleColon  :: { ottr:Triple(?var, ://noScheme, ?S) o-rdf:Type(_:blank, 23.14.15) ( } .
ex: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI none:foaf:name ?T. @@ cross <unclosedIRI ( ++ "string"^^^xsd:string zipMin |  ) , @@ invalid |  "string" ( (  ) ) ^^ List ) :: { ex:Invalid Space(?im[=, "J") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |   ( "malformed"^^bad:datatype , ++ ++ (  ,, ) ,, ) } )
foot:Template2 [   123 = 23.14.15 , , invalid ] xsd:invalidType :: { ://noScheme 
:Invalid Space [  @@   :: { ottr:Triple(?-xq http://example.com/:Type invalid) , }
ex:Invalid Space [ invalid ] :: BASE .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 ( _:blank ,, ) , @@ zipMax |  o-rdf:Type ( ++ ++ (  ) ) ) :: { ottr:Triple(?var  ?W9) , "<*" } .
:noPrefix [ xsd:double "string" ] @@ ://noScheme  @@ <unclosedIRI (  ) :: ( ottr:Triple(_:blank, http://example.com/:Template1, "2023-01-01"^^xsd:date) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ cross |  List<xsd:language> ?N , ++ ++   , ,  ] http://invalid :: { invalid |  ex::doubleColon ( ( , ) zipMin |  ) } .
"string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { o-rdf:Type(?u#Q, _:b2) ex:Invalid Space(?!, xsd:invalidType) , } .
xsd:Template2 [ ?var ?7?^*O@ cross List<t-pnd:Punned-Class-ObjectProperty> ?Z , ] {  } .
foot:Triple [ xsd:int ottr: , @@ LUB :: { ottr:Triple(?> :Footballer "unclosed) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?1v, abc.5+) , } )
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple( ex:Invalid Space ?var) o-rdf:Type(?h, ?wq@B) } .
ottr:IRI [  123  ,   xsd:double  ] zipMin |  @@  (  ) :: ( ottr:Triple(_:blank, :Annotation, 23.14.15) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type [ "T" @@ ://noScheme :: BASE .
:noPrefix [ invalid |  LUB<<List<owl:NamedIndividual>>>xsd:invalidType ?J2C ] invalid :: { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { ex:(?8, "":*"") ,  } .
http://invalid ? xsd:dateTimeStamp  = "malformed"^^bad:datatype ,  :: { <unclosedIRI(_:blank, "unclosed) ) } (
123 [ ] :: { bad::IRI ++ ++ ?var 1 _:blank ,, }
http://example.com/:Template1 [ ?! xsd:unsignedShort , , ?!! xsd:short "string"  , ,  @  ottr:IRI (  ) ; { ottr:Triple(?- badPrefix:Template2 none) , } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space [ xsd:foaf:name ?V ] :: { ?var } .
ex:Invalid Space [ ] :: ( o-rdf:Type(_:blank, "malformed"^^bad:datatype) ; ) .
ottr:IRI NEList<<LUB<ottr:Bot>>>List 123 , , ? owl:NamedIndividual ?,8" = "malformed"^^bad:datatype , @ "string" ++ ++ ( (  ) ,, ) ) ,  :: BASE .
ex::doubleColon :: { zipMin |  ://noScheme ( ++ "invalid"^^ex:  ) } .
http://invalid [  xsd:dateTime  = "string"  ] "T+" :: { ottr:Triple(:noPrefix <unclosedIRI )  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?w, ??<) , } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ LUB :: { ottr:Triple(?[, o-rdf:Annotation, _:b1) 
123 [ ?? xsd:NCName , :noType ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer [ ?!! ottr: ?v ] @@ owl:Type ( ?Z badPrefix:string ) , @@ cross |  ex:Template1 ( _:blank ) :: BASE
http://invalid   :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ 123 ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { o-rdf:Type(?c, ex:) } .
"string" [ ] :: { (_:blank, ?TpfG) , xsd::doubleColon } .
://noScheme [ bad:foot:clubHistory ?g ,  @@ <unclosedIRI  :: { ottr:Triple("unclosed, foot:Template1, "malformed"^^bad:datatype) o-rdf:Type(_:blank, none) , } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { ottr:Triple(?Lk$ :noPrefix abc) ) 
ex::doubleColon [ xsd:NMTOKEN ?M_xK   NEList<xsd:yearMonthDuration>:noType ] :: { bad::IRI ( true ^^ List ,, ) } ,
?var [ ++ ottr:IRI  = "value"^^invalid , ?? rdfs:Datatype , , zipMax |  xsd:unsignedShort 123 ] @@ cross |  http://example.com/:Invalid Space ( ottr: ) ( :: { o-rdf:Type(?2, 1..2) ; }
ottr:IRI [ NEList<:noPrefix> ?}( ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var ?! ottr:IRI  = 23.14.15 , invalid |  owl:real ?2 , zipMax |  @@ http://example.com/:Type "&*-?*" :: { ottr:Triple(_:blank  ?$) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex::doubleColon ( _:blank ,, ) , @@ cross bad::IRI (  ) :: { ottr:Triple(123, foot:Annotation, LUB) ) } .
://noScheme [ ++ ++ xsd::doubleColon "string" , ,  @@ zipMin |  ex: ( ++ ++ 123 , ( _:b2 , "malformed"^^bad:datatype ) ^^ :noType "string"^^^xsd:string  ) :: { cross |  ex:Invalid Space ( ++ ( true ,, ) ) ) } .
"string" [ LUB<<List<xsd:gDay>>>xsd:invalidType ottr:  ] badPrefix:string :: { o-rdf:Type(?@, "unclosed) , <unclosedIRI(?wr), _:b1) , } .
ottr:Invalid Space :: { :noPrefix(?8*T, 1..2) "g" }
:Template2 [ ?var ?Z ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Footballer [ ] :: { ottr:Triple(?m^;sJ, o-rdf:Template1, ""'+"") ; } (
:Template1 [ ?! "string" = ( ?var ,   , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank owl:Triple xsd::doubleColon) , } )
123 [ ! NEList<<LUB<xsd:boolean>>>badPrefix:string   ++ xsd:duration ] @@ ottr:IRI (  ) , @@ ex::doubleColon ++ ++ (  ) ) , _:blank :: BASE .
ex: rdf:HTML ?[ , @@ "unclosed :: { ottr:Triple(_:blank, , "malformed"^^bad:datatype) ,  <unclosedIRI ( _:blank cross |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ://noScheme @@ invalid |  ex:Invalid Space ( invalid ) @@ zipMax |  http://invalid ( ++ ( , ) ( ?8D ,, ) ^^ List ,, ) :: {  } .
"string" [ ] :: { LUB } .
:noPrefix [ List<List<zipMin |  List<xsd:hexBinary>>> ?{ ,  ] xsd:invalidType :: { http://invalid("C*", ?^X) , }
badPrefix:Annotation :: ( o-rdf:Type(?l, _:b2) ) .
foot:Footballer [ xsd:gYearMonth "unclosed ,   xsd:gYear , @@ ex:Template1 ( ?K ; { o-rdf:Type(?e, abc) o-rdf:Type(?o, "2023-01-01"^^xsd:date) ( } .
ex: [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 List<++ ++ "string" = "value"^^invalid> ?L% zipMin |  List<xsd:decimal>:noType 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" ( 123 ) :: { ottr:IRI ?,G ^^  } .
<unclosedIRI [ xsd:byte  ,  :: { ex:Invalid Space } ;
 [  invalid ?| ] @ cross |  ex::doubleColon ( (  ) ) ++ ?var 1  ) :: { o-rdf:Type("t+", 23.14.15) ) } .
http://invalid [  ] :: { ottr:Triple(?I :Invalid Space xsd:invalidType) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?var ?w^ , "e" ] LUB :: { bad::IRI(_:blank, ?brU<7) , } .
://noScheme :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
http://example.com/:Triple [ xsd:normalizedString List @@ cross ex:Template1 ( ?\9 ) :: { ottr:Triple(?W, , _:b1) 
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ottr:IRI ( ++ ( (  ) ) ) _:blank , none ^^ List ) @: {  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Footballer [  @@ ex::doubleColon ( ++ ++ ?d invalid |  ) , @@ :noPrefix invalid term ,, :: BASE .
ex: [ ] :: { ottr:Triple("string", o-rdf:Invalid Space, ?mv) , } .
 [ List<List<List<?! xsd:unsignedLong "string" = "value"^^invalid>>> ?# , LUB<<List<xsd:short>>>xsd:invalidType  123 ?*$Z , , xsd:unsignedByte ex:Invalid Space ] :noType :: { <unclosedIRI(_:blank, "0") , o-rdf:Type(?D, "malformed"^^bad:datatype) } .
http://invalid :: {  } .
bad::IRI [ LUB ] :: { zipMin |  ://noScheme ( xsd::doubleColon ) } .
owl:Template2 [ ?? xsd:gMonth , ] { ottr:Triple(?A http://invalid "invalid"^^ex:) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 ? owl:AnnotationProperty 123  , ?!! ottr:  @@ cross |  :Triple (  ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?: http://example.com/:Type badPrefix:Annotation) , ) .
ottr:IRI : { ottr:Triple("string", owl:Footballer, ?b) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
bad::IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Invalid Space [ xsd:int "string" ?? xsd:short , ,  ] @ ?var (  ) :: { o-rdf:Type(_:blank, _:b2) ,  } .
:noPrefix [ "unclosed @@ cross ex:Template1 ( ?2 ) :: { ottr:Triple(?M& ex:Invalid Space ://noScheme) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ? xsd:invalidType ?g , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { ottr: } .
http://invalid   LUB<rdf:XMLLiteral>invalid 123 = 23.14.15 @@ zipMin |  ex::doubleColon ( ++ ++ ( , ) ,, ) ; :: BASE
ex: [  xsd:nonPositiveInteger  , ] :: { <unclosedIRI(?X, _:b1) , } )
123 [ xsd:dateTimeStamp List  xsd:nonNegativeInteger ?|=h = "value"^^invalid , ++ ?z = ?v}R\ List<?var ?l> ?3 , ] @@ badPrefix:string :: { ://noScheme(?`, false) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?!! "string" = invalid^^type , , ?! :noType ?Mq , ] { 123 } .
?var [ xsd:positiveInteger  ] cross |  @@ ://noScheme ++ ++ "string"^^^xsd:string :: {  } .
xsd:Invalid Space  @@  <unclosedIRI (  ) , @@ ex::doubleColon ( ++ 6+ cross ) :: BASE .
ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  http://invalid ( ( ( 123 ,  ) ,, ) ) ,, ) } .
 [ ] :: { :noPrefix("**", bad::IRI) , ottr:Triple(_:blank, http://example.com/:Template2, "unclosed) , } .
ex: [ ++ ++ rdfs:Resource "string"  ,  ] badPrefix:string :: { ottr:Triple(_:blank ex: none) , } )
"string" [ LUB @@ zipMin |  ex:Triple ( ""/*A>*"" ^^  _:blank , List ) ( :: { o-rdf:Type(?DF!y, 1..2) o-rdf:Type(?1;, ?YR) }
owl:Type [ List<<xsd:gYearMonth>>xsd:invalidType ottr: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?"I, ottr:Template1, _:b2) ; ) .
badPrefix:Footballer ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 :: ( ottr: ) .
 [ LUB<List<<xsd:dateTimeStamp>>xsd:invalidType> ?KL @@ cross ex:Template1 ( ?g ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { ottr:IRI http://invalid } .
ex::doubleColon [ xsd::doubleColon ] List :: { ottr:Triple("unclosed, o-rdf:Type, ?C) ( } .
<unclosedIRI :: { o-rdf:Type(?Yd, :noPrefix) , } .
bad::IRI [ zipMax |  xsd:language ?sU , ] @@ ex: ( ( "string"^^^xsd:string ,, ) ^^ :noType zipMin |  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?4, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank ://noScheme none) } .
?var [  ] :: { :noPrefix(?2bI}`#, ""f+"") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
xsd:Template1 [ ottr:decimal ?*\ ++ xsd:time "string" = "malformed"^^bad:datatype , ++ ++ owl:real , , ?! LUB  xsd:yearMonthDuration   :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { ottr:Triple(?,, :Annotation, ) "@*{\*" } .
"string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(_:blank <unclosedIRI ex:Invalid Space) , ex:(bad::IRI, ?+0) ) .
foot:Type [ ! List<<owl:rational>>xsd::doubleColon , ] @@ zipMin |  ex:Invalid Space (  ) , @@ ottr:IRI  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: { ex::doubleColon ( ++ ( """+"" , ?~7 ,, ) ) ++ ++ "string"^^^xsd:string ) } .
http://invalid  @@ ottr: :: {  } .
123 [ xsd:dayTimeDuration  , ?? badPrefix:string "string" , , List @@ cross |   ( ( 6+.abc ) ^^ LUB  ) :: BASE
http://example.com/:Template2 [ NEList<"unclosed> ?Vg ] :: { o-rdf:Type(?#G, _:b1) , 
o-rdf:Template1 [ 123 ?x ?! xsd:duration  @@ invalid |  <unclosedIRI (  ) ; ; { ottr:Triple(?i xsd:Triple "invalid"^^ex:Invalid Space) ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ? NEList<xsd:yearMonthDuration>List , xsd:unsignedByte  @@ bad::IRI ++ 23.14.15 || :: { ottr:Triple(?r, <unclosedIRI, ?var) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ] :: BASE .
:Type :: { :noPrefix(ex:, ?s`UT) ; } .
ex:Invalid Space [  owl:AnnotationProperty ?K3|MJR , , zipMax |  List<xsd:long> ?#+ , ] xsd:invalidType :: {  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ",+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid ( ?var 1  ) } .
ex::doubleColon [ badPrefix:string ] cross |  @@ invalid |  123 ( _:blank ) :: { o-rdf:Type(_:blank, "invalid"^^) }
ottr:Template1 [ ?? xsd:NMTOKEN 123 = invalid^^type  ] :: BASE
owl:Template2 [ xsd:token LUB , , ++ ++  "string" , ] { ottr:Triple(?b- badPrefix:Invalid Space _:b1) , } .
o-rdf:Invalid Space [ xsd:dayTimeDuration badPrefix:string ,  ?hy  NEList<xsd:float>LUB  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  owl:DatatypeProperty 123 ,  :: { o-rdf:Type(?0, "2023-01-01"^^xsd:date) ; 
ex:Invalid Space :: { invalid |  ottr:IRI ( ++ ++ ( ?var 1 ) ) , ++ ( "string" , owl:Triple ,, ) ,, ) } .
 [ ?var ] "%" :: { ottr:Triple(_:blank ex:Template1 List) , ex: } .
bad::IRI [ ] :: { ://noScheme(xsd:invalidType, ?1) , } .
:noPrefix  zipMin |  @@ ex::doubleColon (  ) :: ( ottr:Triple(?[}T, http://invalid, _:b2) ) .
<unclosedIRI [ "string" ?' ] @@ :noPrefix _:b1 ^^  , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
ottr:Footballer [ ?? ottr: 123 , ?!! xsd:base64Binary ] { ottr:Triple(_:blank, ://noScheme, "malformed"^^bad:datatype) ex::doubleColon(_:blank, 23.14.15) ( } .
foot:Footballer :: { ottr:Triple(?F, ://noScheme, ?7W) ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?;rq , ] "[*" :: BASE .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ xsd:dayTimeDuration LUB , ,  ] :: { ex:Invalid Space ( _:blank ?var 1 ) } .
bad::IRI [ List<<owl:AnnotationProperty>> ?| ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex::doubleColon :: { o-rdf:Type(_:blank, "string") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [  ?4'o @@ <unclosedIRI _:b2 ^^ invalid ,, :: { http://invalid(ottr:, ""unclosed") o-rdf:Type(_:blank, "unclosed) , :noType }
ex:Invalid Space   xsd:hexBinary , xsd::doubleColon cross |  @@ zipMax |  :noPrefix (  ) :: ( ottr:Triple(?_ ottr:Template1 abc) ) .
?var [ ?!! xsd:gMonth ,  @@  123 (  ) , @@ 123  :: { ex:(_:blank, "malformed"^^bad:datatype) ) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ foot:Template1 _:blank , @@ || 123 ( invalid ) :: BASE .
ex:Invalid Space ?? ?d  , foot:date ?-o+   :: { ottr:Triple("unclosed, ex::doubleColon, :noPrefix) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ invalid |  xsd:normalizedString 123 , ] {  } .
ex: [ ?var ] @@ cross ://noScheme ( ( "string" ) ^^ badPrefix:string ,, ) :: { bad::IRI(?), "unclosed) , } .
http://invalid :: { ottr:Triple(_:blank http://example.com/:Annotation ?S) ,  } .
 [ ] :: { o-rdf:Type(?J, "invalid"^^:noPrefix) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ List<List<<xsd:long>>:noType > ?ke2,Z/[zs ] :: BASE
badPrefix:Type [ xsd:nonPositiveInteger "unclosed , ,   xsd:anyURI 123 = invalid^^type  xsd:byte  ] xsd::doubleColon :: { ex::doubleColon(?j, 23.14.15) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple ( ++ (  ) ) , 1..2  ) 
ottr:Annotation [ ottr:foot:clubHistory ?z , , ?var ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { ottr:IRI ++ ++ "invalid"^^http://invalid ,, }
 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?f, :Footballer, ?-~) bad::IRI(_:blank, invalid) , } .
<unclosedIRI [ ?!! xsd:byte ?js> =  , ] "unclosed :: { ottr:Triple(ex:Invalid Space ://noScheme _:b2) , o-rdf:Type(LUB, "unclosed) } .
:noPrefix [ LUB<List<xsd:base64Binary>> ?/3T9n;  NEList<xsd:gYear> @@ cross ex:Template1 ( ?V ) :: {  } .
ex::doubleColon ? xsd:unsignedShort ,  @@ :noPrefix (  ) @@ 123 (  ) :: ( ex:(?WL, none) , ) .
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE
o-rdf:Template1 cross |  xsd:hexBinary 123 @@  owl:Template2 ( ++ "string" ) ; :: { List } )
 [ xsd:language ?a , @@ ottr:Triple ( _:blank ,, ) @@ ottr:IRI ++ ++ invalid term zipMin |  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  ://noScheme ( (  ) ^^ invalid , "string" ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB ex:Invalid Space ?HCL) , ottr:Triple(_:blank, xsd:Invalid Space, <unclosedIRI) , } .
bad::IRI [  List<List<xsd:base64Binary>> ?DE ] :: { ex:(""*", _:b1) o-rdf:Type(?G, "invalid"^^http://invalid) , } .
:noPrefix :: {  } .
123 [ ] :: BASE
ex::doubleColon [ xsd::doubleColon ] List :: { <unclosedIRI(?/, -5+) } .
owl:Template2 [  ] @@ :noType :: { cross |  ex:Type (  ) } 
:Footballer [ ?! owl:rational , , ?var ?j , ++ ++ ottr: "string"  rdf:HTML 123 = "unclosed ] { "5" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ foot:foaf:name ?# , , xsd:dateTimeStamp 123 ] ex:Invalid Space :: { ottr:Triple(?J http://invalid _:b1) ://noScheme(_:blank, ?}) } ;
ottr:Invalid Space [ ] :: { o-rdf:Type("Z*Tr*", 123) , } .
?var [   List<<t-pnd:Punned-Class-ObjectProperty>>LUB , ] @@ invalid :: BASE .
ex: [ ? xsd:date  = ?\l , xsd:invalidType @@ cross |   ( ""?*"" ^^ ottr: cross ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ++ ++ xsd:token ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI (  ) @@ :noPrefix  :: { ottr:Triple(_:blank, bad::IRI, "unclosed) ( } .
"string" [  ] :: (  ) .
http://example.com/:Template1 :: { ottr:Triple(?$ xsd:Template2 1..2) , invalid |  owl:Footballer ( (  ) ,, ) }
o-rdf:Annotation [  ?* , ! xsd:int ]  :: { ottr:Triple(?k, :Triple, _:b2) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation [   owl:AnnotationProperty ?r =  ,  LUB "string" 123 ?>n=`Z , , LUB<xsd:long>xsd:invalidType 123 , ] @@ cross ex:Template1 ( ?)d ) :: BASE .
"string" :: (  ) .
ottr:IRI [   :: {  } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ++ ?; cross |  , @@  bad::IRI (  ) :: { http://invalid ( _:blank ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?b ://noScheme ""a+"") , } .
ex: [ invalid ] ?var :: { ex::doubleColon(_:blank, "9*") ( } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 [ ++ rdfs:Datatype ] :: { o-rdf:Type(?y@, "2023-01-01"^^xsd:date) , ottr:Triple(?!t45 :Template2 "malformed"^^bad:datatype) ottr:Triple(badPrefix:string, owl:Footballer, ?X) }
foot:Type [ owl:ObjectProperty ottr: , , ! 123  , ] @@ cross ottr:Invalid Space (  ) , :: BASE
ottr:IRI [ ] $: {  } 
?var <unclosedIRI @@ badPrefix:string :: { ottr:Triple(?a; ottr:Template1 "string") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Footballer [ 123 ?{ xsd:decimal 123 , ?!! xsd:anyURI , @ ://noScheme ( _:blank ,  ) :: BASE .
:noPrefix [ List<invalid> ?yjm/" ] zipMax |  @@ invalid |  bad::IRI ( "S" ) :: { o-rdf:Type(_:blank, ?U}) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noType, , _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space ++ ( ( , ) ,  ) ,, } .
http://invalid :: BASE
ex::doubleColon [  ]  :: ( ex:(?Vzd, ""unclosed") , LUB ) .
owl:Annotation [ LUB<owl:ObjectProperty>xsd::doubleColon ottr: , , cross xsd:unsignedInt ?@ ] { o-rdf:Type(?e~cB, "2023-01-01"^^xsd:date) , } .
badPrefix:Template1 [ ?var ] @@ "string" ?R. ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ invalid |  NEList<xsd:string>LUB ?Q ] List :: {  } .
 [ ?! xsd:language 123 = "malformed"^^bad:datatype , ] :: { bad::IRI(?z, ?n) o-rdf:Type("\", none) 
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon "invalid"^^ex: ^^ invalid ,, , @@ ://noScheme ( ++ ( , )  ) :: { cross <unclosedIRI ( http://invalid ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: BASE
ottr:IRI [ ?!! xsd:NCName   rdfs:Literal ,   :: { ottr:Triple(_:blank, bad::IRI, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, 23.14.15) , } )
http://example.com/:Invalid Space [ ? rdfs:Datatype   , , ! xsd:double ,  @ zipMax |  ottr:Triple ( _:blank ,  ) :: ( ottr:Triple(?2 foot:Annotation xsd::doubleColon) , ) .
http://example.com/:Annotation  @@ <unclosedIRI :: {  } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
bad::IRI [ ? xsd:integer ?xm = "string" , ,  ] @@ ottr:IRI ( _:blank cross |  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { :noPrefix owl:Invalid Space , ++ ++ (  ) ,, } .
 :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, 8+.abc) , ottr:Triple(?!, ex:, ?RGH) , } .
ex::doubleColon [ List<List<( 123 , invalid ) ) ,,>> ?+ , @@ zipMin |  http://invalid ( "string"^^^xsd:string ^^ List ) ) :: { ://noScheme(xsd:invalidType, ";") }
"string" [  List<rdfs:Resource>badPrefix:string  , ?! ?z"4{yv)Xf2l#  bad:date ?%T ] invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Template1 [ ! xsd:float ++ rdf:HTML ,  ] @ zipMax |  ottr:IRI (  ) : { ottr:Triple(_:blank http://invalid "2023-01-01"^^xsd:date) ; } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: { ottr:Triple(?Eg, badPrefix:Template2, ?S) , "c*&i*" } .
:noPrefix :: {  } ,
:Invalid Space [ List<! xsd:float> ?s|w ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, """+"") } .
123 [  ] ?var :: { ottr:Triple(?t bad::IRI xsd:invalidType) ex::doubleColon(, 23.14.15) ; } .
://noScheme NEList<<LUB<xsd:decimal>>>badPrefix:string :noType , @@ ex:Invalid Space ottr: , @@ invalid |  <unclosedIRI ( ++ ++ ( , ) ) : { http://invalid(?., "unclosed) , } ...
"string" [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex: [ "string" ?G , , ?? rdfs:Resource ?_F = "value"^^invalid @@ cross ex:Template1 ( ?d ) :: BASE
o-rdf:Template1 [ xsd:string "string" , ?! xsd:dayTimeDuration , ,   123  ++ rdfs:Literal , ,  ] { http://example.com/:Annotation ( ++ (  ) ,, ) } .
?var [ "string" ] @@ cross |  xsd:Template2 ( _:blank ,  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(ottr:, <unclosedIRI, "malformed"^^bad:datatype) , } ,
ex:Invalid Space :: {  } .
bad::IRI [ ] :: { ottr:Triple(?x$ foot:Template1 ?~) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, "T+") } .
://noScheme [ ? 123  ?!! NEList<<LUB<xsd:anyURI>>>LUB ?H = "malformed"^^bad:datatype , @@ http://invalid ( ++ ?var 1 ,, ) ( :: { ex::doubleColon ( "invalid"^^ex: )  } .
123 [ invalid |  xsd:hexBinary  , ,  ] List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ++ ++ xsd:dayTimeDuration "string" = 23.14.15 , LUB<invalid> ?b ] {  } .
ex:Invalid Space [ ! xsd:gYearMonth ottr:invalid ?26 ] :: { o-rdf:Type(?^, none) , ex:(?J,, "2023-01-01"^^xsd:date) o-rdf:Type(?R, "unclosed) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
 [ LUB<xsd:time>invalid :noType ] ex: :: { "string" } .
ottr:IRI [ ] :: BASE .
ex:Invalid Space :: { ottr:Triple("o" ://noScheme ) o-rdf:Type(?3], -8+) , } .
?var [  ] @@ || :noPrefix ( ( (  ) ) ,, ) , ++ ++ ""Q+"" _:blank ) @@ bad::IRI ( ++ ?A ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ foot:boolean ?J , ,   LUB "string" , owl:NamedIndividual 123 , @@ ex::doubleColon ?var 1 ^^ ottr: zipMax |  ; :: { http://invalid(_:blank, ?X>) } .
ex: ++    @@ ?var  , @@ 123  :: { zipMin |  ex:Invalid Space (  ) }
http://example.com/:Footballer [ List ] :: ( ottr:Triple(?I, ottr:Template2, "2023-01-01"^^xsd:date) , ) .
o-rdf:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { <unclosedIRI(?b, _:b1) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
123 [ "string" zipMin |  @@ ottr:IRI (  ) :: { bad::IRI } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ List<<xsd:boolean>>xsd::doubleColon "string" , ,     , zipMax |  xsd:gMonthDay ?d0 ] :: BASE .
xsd:Type xsd:normalizedString "n+" , @@ ottr: :: { ottr:Triple(:noPrefix <unclosedIRI ?}kI) o-rdf:Type(?p, false) , } .
ex: [ ++ ++ owl:rational  ] :noType :: { cross |  ex::doubleColon ( _:blank ++ ++ (  ) , 123 ,, ) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ottr:Triple(_:blank, :Footballer, invalid) ; } .
://noScheme :: { http://invalid(?CJ8oS, "invalid"^^ex:) ,  } ,
?var [ ] ; { ottr:Triple(?= http://example.com/:Template1 "2023-01-01"^^xsd:date) } ..
foot:Annotation [ ? xsd:gDay ?<K_ = invalid^^type , ,  ?O = none , ] { ottr:Triple(?;gv7, badPrefix:Invalid Space, "unclosed) ( } .
"string" [  zipMin |  @@ ottr:IRI _:blank zipMax |  :: { ottr:Triple(?W, bad::IRI, invalid) ) } .
ex:Invalid Space [ ?! LUB ?Y1CO% , , ?? NEList<<LUB<owl:rational>>> , ] "k+" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?var ] @@ ex::doubleColon :: { ://noScheme ( ++ ++ invalid term , (  , _:b1 ) ) }
 :: { o-rdf:Type(ottr:, ?2) ,  } .
ex: [ xsd:integer 123 , invalid |  xsd:base64Binary "string" ! xsd:nonPositiveInteger ?i^ = ?' ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { http://invalid(_:blank, "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?z http://example.com/:Template2 "unclosed) , ) .
123 [ ] :: BASE
<unclosedIRI [ ?!! "string"  , ,   ': { ex:Invalid Space(_:blank, 23.14.15) xsd:invalidType } ...
://noScheme [ "unclosed ] ex: :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
owl:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, bad::IRI, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var   :: { http://invalid(?.3, xsd::doubleColon) , } .
ottr:IRI [ "string" ?9`az: ] @@ <unclosedIRI ( 123 ^^ xsd:invalidType ,, ) ( :: { o-rdf:Type(123, ?G) } .
ex::doubleColon :: {  } .
 [ ] :: { ottr:Triple(?[u ottr:Footballer xsd:Invalid Space) , badPrefix:string } .
ex:Invalid Space [ ?? ?2  , ! LUB<xsd:Name>:noType , @@ ex:Template1 ( ?0 :: ( :noPrefix(?X, invalid) ; ) .
http://example.com/:Triple [ LUB<ottr:> ?1  @@ <unclosedIRI (  ) @@ zipMax |  "string" (  ) :: { foot:Template2 List }
ex:Triple [ ottr: ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ foot:foaf:name ?1 , invalid |  @@ || "string" ( ( :Template1 , ( invalid term ) ,, ) ) _:blank ) :: { ottr:Triple(?9?X, o-rdf:Annotation, ex:Invalid Space)  
://noScheme  xsd:byte ?! = invalid^^type  :: { "R" } .
ex: [ ] :: { ex::doubleColon ++ ++ 123 , _:b1 ^^ xsd:invalidType  } .
 [ List<badPrefix:string> ?m7 , ,  ] @@ bad::IRI ( ++ invalid ,, ) @@ zipMax |  <unclosedIRI ( :noType ) :: { ottr:Triple(?var http://invalid ?&) , } .
123 [ cross |  List<rdf:XMLLiteral>LUB  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { :noPrefix(_:blank, abc) , } .
xsd:Type :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?u, 23.14.15) } ..
ottr:Footballer [ xsd:gDay "unclosed ,   :: { ottr:Triple(_:blank, , "unclosed) , ottr:Triple(_:blank ex: none) ) }
ex: [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ xsd:boolean  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { ex::doubleColon(_:blank, ?E) , ottr:Triple(_:blank, , none) , } .
ottr:IRI :: { ottr:Triple(<unclosedIRI owl:Invalid Space xsd:invalidType) , } .
ottr:Template1 ++ ++ xsd:duration , @@ :noPrefix (  ) @@ ://noScheme  :: {  ex:Invalid Space ( _:blank zipMin |  ) } .
"string" [ xsd:nonNegativeInteger ?var , , ? t-pnd:Punned-Class-ObjectProperty  ] :: { o-rdf:Type(?sX, "malformed"^^bad:datatype) bad::IRI(_:blank, "2023-01-01"^^xsd:date) } .
http://invalid [ invalid ] @@ cross |  http://example.com/:Footballer ( ?9 , ++ ++ ?var 1 "unclosed ^^ :noType ) , @@ invalid |  o-rdf:Template2 (  ) :: { xsd::doubleColon 
badPrefix:Triple [ ?! rdf:HTML 123 = "malformed"^^bad:datatype || @@ zipMax |  foot:Type (  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Annotation [ wrong List<xsd:base64Binary>LUB "string" foot:bad::IRI ?1 , @@ ex:Footballer ( ++ ( ( _:b1 ,, ) ) , 5+.-9+ ) ,, ) ) :: BASE
123 [  @@ "string" :: { ottr:Triple(_:blank badPrefix:Type invalid) , } .
ottr:Template1 [ xsd:foaf:name ?w ,  NEList<xsd:base64Binary>  = 23.14.15 owl:NamedIndividual 123 , ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ex::doubleColon("C", ?.VEbz") ,  } .
ottr:IRI [ List<List> ?%H ] :: { ottr:Triple(?;~A, ex:Invalid Space, _:b1) ) } .
http://invalid [ ] :: { cross |  :noPrefix ( badPrefix:string ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?WK, 7+.abc) <unclosedIRI(?v7, true) } .
ex: [ :noType ] @@ ?var ( ++ "string"^^^xsd:string ,  ) , @@ ://noScheme (  ) ) :: BASE
o-rdf:Invalid Space rdf:XMLLiteral "unclosed , , ?!! xsd:decimal ?O = "unclosed zipMax |  @@  http://example.com/:Triple ( (  ) ^^ xsd:invalidType  ) :: { ottr: 
owl:Template2 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
http://example.com/:Template1 :: ( ottr:Triple(_:blank foot:Triple ?{) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
 [ 123 ?;o ] :noType :: { ?var } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" ( ex::doubleColon ) :: { ottr:Triple(?amf, http://invalid, "g") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { || <unclosedIRI (  ) } .
://noScheme [ xsd:invalidType ] :: {  } .
ex:Invalid Space ! owl:real , , ?? xsd:time , @@ :noPrefix (  ) @@ ottr:IRI  :: { ex:(LUB, :Annotation) , } ..
o-rdf:Invalid Space [  ] @@ zipMax |  ex: ( _:blank ,  ) , @@ "string"  :: { o-rdf:Type(_:blank, _:b2) , 
ex:Footballer [ ?! xsd:short ++ "string"  ,   @@ cross |  "string" ( _:blank  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ex::doubleColon ) .
foot:Template1 [ ] :: { ottr:Triple(_:blank owl:Annotation "unclosed) , ottr:IRI _:blank } .
"string" [ ++ ++ badPrefix:string  ,  :: { o-rdf:Type(123, ?\) , } .
ex:Invalid Space [ ?var ?hyn*}TK@ "&*" ] :noType :: {  } .
ex:  @ bad::IRI ( ++ ++ ( , ) ,, ) :: { :noPrefix(?'8, LUB) } .
://noScheme [ ! xsd:time 123  , , ? xsd:duration ,  ] @@ ex:Template1 ( ?? ; { ottr:Triple(?u, http://invalid, _:b1) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , } ...
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Triple  LUB<<List<xsd:unsignedByte>>>xsd:invalidType "string" = "unclosed @@ zipMin |  badPrefix:Type (  ) :: BASE
:Footballer [ ] :: BASE
123 [ "e" ] bad::IRI :: { List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon _:blank ++ ?var 1 zipMax |  ) :: { <unclosedIRI(_:blank, 1..2) , } .
:noPrefix  @@ cross ex:Template1 ( ?? ) :: {  } .
ex: [ ?!! xsd:gYear  ] @@ invalid |  ://noScheme (  ) @@   :: { o-rdf:Type(?pU, ?m) , ex:Invalid Space (  ) } .
?var :: { ottr:Triple("string", http://invalid, ottr:) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Invalid Space [ "string" ?T0hi ,   xsd:invalidType  , ] :: ( ottr:Triple(?& ottr:Template1 "invalid"^^bad::IRI) , ) .
http://example.com/:Type [ ! List<<xsd:anyURI>>invalid "string" = "value"^^invalid ] @@ cross |  ://noScheme (  ) : { :noPrefix(?%, ""a*"") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix } .
"string" [  ] @ http://invalid ( ( ( , ) ) ,, ) ) ++  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  t-pnd:Punned-Class-ObjectProperty 123  @@ ottr: : { zipMax |   ( _:b1 ^^ badPrefix:string invalid |  ) } 
owl:Template1 [  List ?jZ , ] :: { ottr:Triple(?var ://noScheme ?H) } .
bad::IRI foot:ex::doubleColon ?GF , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: ( ++ ++ _:b2 ,, ) @@ || ex:Invalid Space ( _:blank ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?!! LUB<xsd:unsignedLong>invalid "string" = 23.14.15 ] "W+" :: { o-rdf:Type(_:blank, ""f"") <unclosedIRI(?g\, LUB) ) } .
123 :: {  } ,
ex:Footballer [ ] :: ( o-rdf:Type(?U, 23.14.15) , ottr:Triple(?v, :Triple, abc) , ) .
ottr:Invalid Space ?? xsd:gMonth ?cJA = none , , xsd::doubleColon @@ badPrefix:Annotation ?(p6 ) :: BASE
ottr:IRI [ List<? rdf:XMLLiteral  > ?RNh ,   :: { o-rdf:Type(?=, ://noScheme) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ex: [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?!! List<rdfs:Literal>xsd:invalidType ?:@_ = "value"^^invalid , ] :: { ottr:Triple(_:blank, bad::IRI, "unclosed) ( } .
http://example.com/:Invalid Space :: {  } .
:noPrefix [ xsd::doubleColon ] ?var :: { zipMin |  ex::doubleColon ( ++ "string" true ) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Invalid Space (  ) @@ http://invalid ++ ++ ( (  ) ) ,, ) ,, :: { <unclosedIRI("a*", ?D) , } .
"string" ++ 123   @@ zipMax |  http://invalid (  ) :: { ottr:Triple(?p ex:Annotation _:b2) , :noType 
o-rdf:Type [ ?! owl:Class , ,  ]  :: ( o-rdf:Type(?,w, abc) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ) ) .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ wrong "string" ( _:blank ,, ) :: BASE .
http://example.com/:Invalid Space ! xsd:date "string" = "value"^^invalid ,  @@ http://invalid  , @@ <unclosedIRI (  ) :: { invalid |   ( _:blank zipMax |  ) } .
ex:Invalid Space :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ? LUB ?Y NEList<<LUB<rdfs:Datatype>>>badPrefix:string "\*" , , xsd:base64Binary 123 , ] :: { ?var } .
://noScheme [  ?G)NUie ] ex::doubleColon :: { ex:(_:blank, xsd::doubleColon) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ List @@ cross |  123 ( :noType ) ( :: { ottr:Triple(invalid, ottr:Triple, "unclosed) , o-rdf:Type(?v, ?F$"7) , } .
foot:Template1 [ ] :: { ottr:Triple(?} ex: "malformed"^^bad:datatype) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?` owl:Footballer 23.14.15) ; 
xsd:Type [  rdfs:Literal  , , ++ xsd:token  ] { ottr:Triple(_:blank, bad::IRI, none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix   :: { ottr:Triple( ex:Footballer ?Z_) ( 
owl:Invalid Space [ ++ ++ :noType  , @@ ex:Template1 ( ?w :: {  } .
ottr:IRI [ ] :: BASE .
?var :: { bad::IRI(_:blank, ottr:) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "l*" } .
<unclosedIRI [ ? ottr:IRI ?#G = invalid^^type ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?! NEList<rdfs:Datatype> LUB ] @ cross |  ://noScheme (  ) :: { ex: _:blank , ++ "string"^^^xsd:string } .
ex::doubleColon [  123 = "malformed"^^bad:datatype , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 [ xsd:hexBinary "string" , foot:foot:clubHistory ?s , @@ http://invalid ( List ) ) -: { o-rdf:Type(?RQ, none) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ 123 ] List :: { ottr:Triple(?^X badPrefix:Invalid Space <unclosedIRI) , } .
?var ??  = (  ) , @@ cross |  owl:Type ( ?T || ) @@ ottr:IRI (  ) :: BASE .
bad::IRI [  @  ""+" :: BASE
http://invalid [ xsd:NCName 123 "string" ?~ , NEList<owl:real>:noType  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ex:Template1 ( ?M)\ ) :: { o-rdf:Type(_:blank, o-rdf:Template2) , zipMax |  ex:Invalid Space ( ?var 1 ^^ invalid ,, ) } .
ex: [  xsd:date "string" = 23.14.15 ] :: { ex::doubleColon(ottr:, ?U) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { ottr:Triple(?EG, bad::IRI, "invalid"^^) ) } .
foot:Footballer [ LUB<xsd:invalidType> ?J@ ! xsd:yearMonthDuration , zipMin |  xsd:integer ?8co ?!! LUB ?;5 ] { badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ottr:Template1 [ ] :: { ottr:Triple(?{+,Y :Triple _:b1) } 
ottr:IRI [ ?! LUB<xsd:duration> "string" = 123 , @ o-rdf:Annotation ( ++ ++ ?7p ,, ) :: {  } .
ex::doubleColon   :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ owl:ObjectProperty  , , xsd:foaf:name ?] ,  ] { o-rdf:Type(_:blank, invalid) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid |  @@ zipMin |  ex: ( ++ (  ) , _:blank ( invalid , invalid term ) ) ^^ LUB ) :: { ottr:Triple(?@W, bad::IRI, ottr:Footballer) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
http://invalid [ ] :: { ottr:Triple("unclosed owl:Triple ?RA) , :noPrefix ottr: } .
<unclosedIRI :: ( ://noScheme(?f8, "unclosed) , ) .
123 [   rdf:XMLLiteral xsd:gYear xsd::doubleColon ] :: { o-rdf:Type(?-/, _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
xsd:Template1 [ ++ ++ xsd:Name "string" = "malformed"^^bad:datatype , , ?? xsd:double  ] ",*6L*" :: { ex:Invalid Space(?!&K, 23.14.15) ; 
http://invalid [  ] {  } .
123 ? 123  , @@ "U*Or*" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Annotation [ ] :: { <unclosedIRI(?var, none) , ottr:Triple(_:blank xsd:Template1 ?D) } .
ottr:IRI :: { cross ex:Invalid Space ( ( , ) ,, ) } .
://noScheme [ zipMax |  List<List<xsd:byte>List> ?IJ ,   xsd:positiveInteger  ] @@ :noPrefix (  ) @@ ex:  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ bad:ex::doubleColon ?58 ] :noType :: { o-rdf:Type(?~, ottr:) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?>\, ex:, false) ottr:Triple(?B} http://example.com/:Triple 1..2) ; 
"string" [ t-pnd:Punned-Class-ObjectProperty xsd::doubleColon , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
o-rdf:Invalid Space [ xsd:string "string" invalid |  @@ zipMin |  123 (  ) :: { :noPrefix(?S%, 23.14.15) ( } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(ex:Invalid Space, ?m4) ; } .
http://example.com/:Invalid Space [ ] :: BASE
bad::IRI [  ]  :: BASE .
?var :: { ottr:Triple(?h8 ex: ""unclosed") , ottr:IRI ( "<" ) } .
 "string" @@ zipMin |  ://noScheme (  ) :: { :noPrefix(_:blank, LUB) } .
<unclosedIRI [ ? xsd::doubleColon 123 , @@ || ex::doubleColon ( ++ ?var 1 , ++ ++ 23.14.15 invalid |  ) :: {  } .
http://invalid [ 123 ?T2UBgt ] :: { ottr:Triple(?wE, badPrefix:Template2, "invalid"^^://noScheme) , } .
ottr:Triple [ owl:ObjectProperty ?cD/ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string !: {  } 
ex:Type [ LUB<List<NEList<<LUB<xsd:gMonthDay>>>List>> ?1 , ?!! xsd:normalizedString  = "value"^^invalid , , ! "string" = "malformed"^^bad:datatype , ,   t-pnd:Punned-Class-ObjectProperty "string" = ( o-rdf:Annotation , (  ) ,,  , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space [ ] :: BASE .
<unclosedIRI [  ] { ottr:Triple(?/, o-rdf:Template2, true) , ex::doubleColon(_:blank, ?i4j) ottr:Triple("D*N%*" ex: xsd::doubleColon) , } .
?var :: { o-rdf:Type(123, ""unclosed") ( } .
ottr:IRI [ zipMax |  xsd:dateTime ?t6 ,  :: { LUB } .
ex:Invalid Space [  ] @@ invalid :: {  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ( ++ ( , ) ,, ) @@ http://invalid 1..2 , ( "string" ) ^^ xsd:invalidType  :: { bad::IRI(?q, _:b1) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Footballer [ List<List> ?$ ]  :: { zipMin |  "string" ( ottr: ) }
owl:Annotation [ ++ xsd:date , List<<xsd:positiveInteger>>:noType  , , owl:real "<"   123  , ?var ?V ?? badPrefix:string ?m-8 ? xsd:base64Binary  = 23.14.15  xsd:duration ?!! xsd:yearMonthDuration ,  ] ; { o-rdf:Type(?AX, none) ; } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ xsd:hexBinary cross |  List<List<<xsd:unsignedShort>>:noType> ?/> , @@ ottr:IRI ++ ++ invalid term ( ?8 ,, ) ^^  , :: ( o-rdf:Triple (  ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI   @@ wrong  ( ?var ) :: BASE .
<unclosedIRI [ ] :: { ex:(_:blank, ""a+"") } .
ex:Invalid Space [ badPrefix:string ] ex::doubleColon :: { ottr:Triple("unclosed owl:Template1 LUB) , o-rdf:Type(?3, ?9) , } .
http://invalid [ ?!!   , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  ://noScheme ( _:blank ,  ) @@ invalid |  :noPrefix (  ) :: { xsd:invalidType } .
"string" :: { ottr:Triple(?-, <unclosedIRI, 23.14.15) ; 
xsd:Template2 [ zipMin |  xsd:nonNegativeInteger "string" ] :: {  } )
ex:Type [ xsd:double List , ,  ] { o-rdf:Type(_:blank, none) ottr:Triple(_:blank, ex:Invalid Space, "unclosed) ( } .
bad::IRI [ ] :: { o-rdf:Type(?2, "malformed"^^bad:datatype) , ex:(_:blank, ?4Q) ) } (
http://example.com/:Footballer :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI "W+" @@ :noType :: BASE .
?var [ owl:DatatypeProperty xsd::doubleColon , ] zipMax |  @@ ://noScheme ++ ++ (  ) ) ,, :: { ottr:Triple(123, owl:Annotation, ) } .
<unclosedIRI [ "string" ?e7  @ invalid |  ex::doubleColon (  ) :: { :noPrefix ( invalid term ++ abc  ) } .
http://invalid [ ++ xsd:unsignedLong 123 = 23.14.15 , , LUB<List<LUB<<List<xsd:gYear>>>badPrefix:string>> ?y ] :: { ottr:Triple(?! ex:Invalid Space "unclosed) , } .
xsd:Invalid Space [ ? ?NZ = :Triple , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
badPrefix:Template1 [ ?!! xsd:Name , , ++ ++ ottr:  , ,   xsd:NMTOKEN "string"  , ] { o-rdf:Type(?T, abc.abc)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?K"[M, "invalid"^^ex:) , 
"string" [   List<<ottr:IRI>>LUB ?Q  , owl:rational ottr: , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { "`" } .
ottr:IRI ? xsd:token 123 = "malformed"^^bad:datatype , @@ zipMin |  ://noScheme (  ) @@ :noPrefix  :: BASE .
http://example.com/:Invalid Space :: { o-rdf:Type(123, _:b1)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ List ] <unclosedIRI :: { ottr:Triple(?<t, ottr:Triple, ?J) ( } .
http://invalid [ invalid |  owl:DatatypeProperty "string" !  = ?H@S'a ] :: { ex:Invalid Space(_:blank, :noType) , } .
ex::doubleColon [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ] @@   ( ++ ++ ?Xi wrong ) :: { ex: ( ++ 23.14.15 ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?1?mM&. foot:Template1 false) , ottr:Triple(?r ://noScheme _:b2) }
badPrefix:Footballer [ "string" ?{"0]~ LUB<xsd:dateTimeStamp> ?4w , xsd:date ?yE ?! badPrefix:string ?F  :: { (?>, ex:Type) ; 
ottr:IRI [ "string" ?4I , , <unclosedIRI ] :: { o-rdf:Type(?h,, ?^) , } .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ( ++ ++ ""("" _:blank , (  ) ) ^^ badPrefix:string ,, ) :: BASE .
xsd:Triple [ ] :: { ottr:Triple(_:blank, ://noScheme, ";*+6*")  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?? List<xsd:positiveInteger>ottr: , @@ ex:Template1 ( ?C :: { ottr:Triple(xsd:invalidType o-rdf:Template1 "invalid"^^ex::doubleColon) } .
 :: { ex:Invalid Space(?var, 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?\, false) , LUB } .
bad::IRI [ LUB<:noType> ?G ] xsd::doubleColon : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex:Annotation [  ] @@ foot:Invalid Space ++ ( ?ap ,, ) @@ zipMax |  http://example.com/:Footballer (  ) :: { cross |  owl:Type (  ) }
badPrefix:Template2 [ ++ xsd:byte  ] @ zipMin |  123 (  ) :: { ex::doubleColon(?obd<, ottr:Template2) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ xsd:nonPositiveInteger 123 , @@  ( _:blank ,, ) :: { ex::doubleColon(_:blank, "unclosed) , o-rdf:Type(ottr:, ?#) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?ce=2 ex:Triple "invalid"^^<unclosedIRI) , } .
badPrefix:Type [ ] :: BASE .
ottr:IRI :: {  } .
bad::IRI [  List<owl:Class>:noType ?l8d = "unclosed , xsd::doubleColon ] @@ ex:Template1 ( ??H|wkot4'R]< :: { ottr:Triple(ex:Invalid Space, ://noScheme, _:b2) } .
:noPrefix [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: || owl:real "string" ? xsd:nonNegativeInteger  @@ ?var ++ ++ "string"^^^xsd:string none cross |  :: ( zipMax |  http://invalid ( (  ) ^^  ) ) .
http://example.com/:Template1 [ ! List 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: BASE
owl:Invalid Space [ ?! xsd:gYear  ] @@ invalid |  ottr:IRI (  ) ) :: { ottr:Triple(?h, <unclosedIRI, ""unclosed") "U+" } .
:noPrefix [  xsd:Name  = ?[ , ,  ] :: {  } .
123 [ "string"  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ex:Invalid Space(?&#, ?1Q) ( ) .
ottr:IRI [ ? badPrefix:string "string" ,  ] @@ ex:Template1 ( ?h :: { o-rdf:Type(_:blank, 1..2) , ottr:Triple(_:blank ://noScheme _:b2) , } .
ex:Template1 ?var ?^ @ invalid |  <unclosedIRI (  ) :: { ottr:Triple("unclosed, owl:Invalid Space, ) bad::IRI ( _:blank ) } .
http://invalid :: { ex::doubleColon(, "unclosed) } .
ex: [ NEList<rdf:HTML>invalid 123 List<?? ?mEL = "value"^^invalid> ?{X , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template2 [ ] :: { ottr: 
:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { o-rdf:Type(?)0, o-rdf:Footballer) ) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ o-rdf:Triple _:blank ,  ,, :: BASE .
ex::doubleColon [ ] :: { bad::IRI(?-%, "malformed"^^bad:datatype) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" }
?var [  ] :: { ottr:Triple("$" ex: <unclosedIRI) , } .
 [ xsd:string LUB , , ++ ++ LUB<<List<xsd:NCName>>>xsd:invalidType , ] @@ List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: { o-rdf:Type(_:blank, ?h5y) wrong ://noScheme (  ) } .
http://invalid ottr: @@ cross ex:Invalid Space ( (  ) ^^ badPrefix:string ++ invalid term zipMin |  ) :: {  
123 [ xsd:dateTime ?g ] xsd::doubleColon @: { ottr:Triple(?P, xsd:Annotation, "2023-01-01"^^xsd:date) } ...
http://invalid [ ++ rdf:XMLLiteral  @ "string" (  ) :: { ex:(_:blank, 23.14.15) , ottr:Triple(_:blank, , "unclosed) , } ;
ottr:IRI [  ?M&  , zipMax |  xsd:gYearMonth "string" , , NEList<<LUB<xsd:gDay>>>invalid "H+" , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: { <unclosedIRI _:blank ,  } .
:Template1 [   rdf:XMLLiteral ] :: { ://noScheme(?Qye, ?%Ssl) } .
bad::IRI ex: @@ ex:Invalid Space (  ) ) :: { ottr:Triple(_:blank, ex::doubleColon, none) , ottr:Triple(_:blank http://invalid 23.14.15) , } .
 [  ] @@ 123 :: { :noPrefix(?c9, invalid) o-rdf:Type(, List) ; } .
?var [ foot:foot:clubHistory ?. ? xsd:integer ,  @@ ?var (  ) @@ zipMin |  ?var (  ) :: {  }
badPrefix:Footballer :: { xsd::doubleColon } ..
foot:Annotation [ ] :: BASE
123 [ ?var ] { o-rdf:Type(_:blank, 1+.-5+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ owl:NamedIndividual "string" , , ++ ?I = "2023-01-01"^^xsd:date ] badPrefix:string :: { ottr:Triple(?T ://noScheme ?6f) ,  } .
ottr:IRI [ List<rdf:HTML>xsd::doubleColon ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
http://invalid [ ++ ++ owl:rational 123  ,  ] :: { "z*8K*" } .
ex: [ ] :: { ottr:Triple(:noType, owl:Footballer, )  ++ (  , ( , ) ,, ) ) invalid |  } .
:noPrefix [  owl:ObjectProperty ?Md , ] @@ List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI "string" ?| , @@ 123 ?U ) :: { ex:Invalid Space(?v, abc) , } ..
bad::IRI :: { ottr:Triple(?XH badPrefix:Template1 "malformed"^^bad:datatype) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?7 :Template2 "invalid"^^<unclosedIRI) ( ) .
123 [ ++ invalid 123 , ] :: { ottr:Triple("unclosed, ex:Type, ) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) } .
foot:Invalid Space [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ottr:IRI ( ( (  ) ) ,, ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
ex::doubleColon ! ?c = ?@,#\ @ ex: "string"^^^xsd:string ^^ xsd::doubleColon , ++ ++ "string" || :: { ?var } .
http://invalid [ ?? LUB<<List<xsd:NCName>>>LUB  = 23.14.15 List ] ://noScheme :: {  } .
bad::IRI :: { ottr:Triple(?1 <unclosedIRI ?B) , } .
"string" [ xsd:yearMonthDuration ?uh , , cross |  xsd:negativeInteger ?_/ ,  zipMax |  @@ zipMin |  :noPrefix ( ++ _:b2  ) :: ( ex:Invalid Space(?;f, "malformed"^^bad:datatype) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  badPrefix:Template2 ( _:blank ,, ) }
ottr:Footballer   xsd:unsignedByte ?ErV = "value"^^invalid ,  :: BASE
"string" [ ] :: BASE .
:noPrefix :: { ottr:IRI ( ( ( , ) ) ) ^^ xsd::doubleColon , ++ ( 5+ ,, )  ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space ++ LUB<<List<owl:NamedIndividual>>>xsd:invalidType , ,  @@ cross |  ://noScheme (  ) , :: {  } .
bad::IRI [ invalid |  xsd:short ?,  :: { ottr:Triple(?5JDXM ottr:Type 123) } .
http://invalid [ zipMax |  List<xsd:long> ?]G* ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ <unclosedIRI :: { ottr:Triple("e*", ex:, ?+C) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(?S, o-rdf:Triple) ; } .
ex:Invalid Space [ List ] invalid :: BASE
?var [ ?!! xsd:gYear "string" = 23.14.15 , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex::doubleColon [ xsd:time  , xsd:decimal "8" ! 123 = (  ) ] @ http://example.com/:Template2 _:blank ,, :: ( ottr: ) .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] wrong @@ ?var ( ( -3+ ,, ) ) ) :: { bad::IRI(123, false) ,  
:Annotation [ LUB<<List<owl:Class>>>xsd:invalidType 123  :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: BASE .
 :: { cross |  ://noScheme ( ++ ++ "string"^^^xsd:string  ) } .
<unclosedIRI  xsd:language , , ! xsd:string ?Q = "malformed"^^bad:datatype , rdf:XMLLiteral :noType  @@ :noPrefix :: { ottr:Triple(_:blank o-rdf:Footballer "t*]w*") } .
ex: [ List ] badPrefix:string :: { o-rdf:Type(?-*q, ?iR) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?8, ex:Invalid Space, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
http://invalid [ zipMax |  xsd:normalizedString  , ] :: { <unclosedIRI(?>h{2("rV, "2023-01-01"^^xsd:date) , }
"string" [ ?!! ottr: "string" , ++ xsd:date , ] @@ http://example.com/:Invalid Space  :: { ottr:Triple(?m, ex:Template2, 23.14.15) ( } ;
ottr:IRI NEList<xsd:boolean>ottr: :noPrefix , , ?? ?co  , invalid |  @@ "string" ( ++ 123 ?var 1 ^^ :noType ,, ) :: BASE .
http://invalid [ 123 ?;  xsd:string  = (  ) ] :: ( <unclosedIRI("H", _:b2) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 [  ] @@ ex::doubleColon ( invalid ) :: { ottr:Triple(?8|, o-rdf:Template2, ?\W) , o-rdf:Type(_:blank, ?var) } .
ex:Invalid Space [ badPrefix:string ] xsd::doubleColon :: {  } .
bad::IRI :: { "=*6&*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?u"  "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ xsd:gMonth "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  http://example.com/:Annotation ( List ) , @@ badPrefix:Type _:blank , ( _:b1 ) ) cross |  :: { zipMin |  ex: (  ) } ;
ex:Footballer [ ] :: { ex:Invalid Space(?7, false) ) }
:Triple [  ?T , ,  @@ ottr:IRI (  ) , ; { ex:(_:blank, 23.14.15) ( } ..
ottr:IRI ++ ++ owl:Class   :: { ottr:Triple(?G, xsd:Template2, _:b2) , ottr:Triple(_:blank ex:Invalid Space none) ) } .
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( :noPrefix ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ NEList<xsd:gMonthDay>badPrefix:string "string" , ] :: {  } .
<unclosedIRI [ ++ xsd:negativeInteger 123  , ! xsd:unsignedShort , ,  ] @@ ://noScheme "Q*09*" :: { invalid |   ( ( ?P(" ,  ) ) } .
http://invalid :: { ex::doubleColon(?var, ?MC) } .
ex: [ LUB zipMax |  @@ 123 ( ++ ( , ) _:blank , ++ ++ _:b1 cross |  ) :: BASE
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { o-rdf:Type(?E2, "invalid"^^bad::IRI) ottr:Triple(?>8 http://example.com/:Template1 xsd::doubleColon) , } ,
foot:Footballer xsd:language xsd:invalidType @@ zipMin |  o-rdf:Invalid Space (  ) @@  :Annotation ( (  ) ) ^^ ottr: ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?var, ?'Z) } .
<unclosedIRI [ ] ; { ottr:Triple(_:blank, ottr:Type, ) ( } ..
foot:Footballer [  xsd:unsignedShort ! rdf:HTML ?v = ( 23.14.15 ) , , List<<xsd:nonPositiveInteger>>List :noPrefix ,  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Template1 ( ?BP :: { ex:Invalid Space(?t, "unclosed) , } .
ex::doubleColon [ ? LUB  @@ bad::IRI ( ++ invalid term , "unclosed ) , @@  123 cross |  :: { invalid |  "string" ( _:blank ) } .
://noScheme :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ badPrefix:string ] invalid :: {  } .
ex: ++ ++ xsd:gDay "string" = 23.14.15 ,  :: ( ottr:Triple(_:blank <unclosedIRI none) :noType ) .
123 [ xsd:NMTOKEN ?m , zipMin |  List<ottr:IRI> ?` ] { o-rdf:Type(?/, _:b1) , ottr:Triple(?F, owl:Invalid Space, _:b2) ) } .
ottr:IRI [ zipMin |  LUB<xsd:integer>LUB "string" ] bad::IRI : { :noPrefix(123, ?R) ,  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ++ xsd:unsignedLong , ++ ++ owl:DatatypeProperty ?>pW = "unclosed , ] :: BASE .
foot:Triple badPrefix:string invalid |  @@ cross |  ex: (  ) :: { ottr:Triple(_:blank, xsd:Template1, none) ottr:Triple(_:blank  23.14.15) } .
ex::doubleColon [ ] :: { ex:Invalid Space ( (  ) ) ) ^^ invalid ++ ++ ( , ) zipMax |  } .
http://invalid [   123 =  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ List :: { "unclosed } .
<unclosedIRI [  @@ ?var ( true ,, ) :: { o-rdf:Type(?HC]%, ottr:) , } ;
:Type [ xsd:nonPositiveInteger "l" , , xsd:hexBinary ?; , List<?!! xsd:Name ?3 = "malformed"^^bad:datatype> ?_ , , ?var ?* , ] { o-rdf:Type(?w, 1..2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?`Q owl:Footballer "unclosed) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("string", xsd:Type, ?iu) ottr:Triple(_:blank http://invalid "2023-01-01"^^xsd:date) } .
?var [ NEList<xsd:unsignedShort> "string" , , "X+" ]  :: BASE .
ottr:IRI [ zipMin |  xsd:yearMonthDuration ?T ] :: { ex: 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Footballer owl:rational xsd:invalidType ,  @@ :noPrefix  ^^ xsd::doubleColon  :: { ex:Invalid Space(?m, List) , } .
 [ ++ ++ xsd:gMonthDay 123  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr: :: { ://noScheme ( ++ ++ _:b2 , ( invalid term ) ) } .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { o-rdf:Type(?4, _:b1) ; } (
123 [ List<  :noType ?[O> ?w , ] "unclosed :: { bad::IRI(?>1, 23.14.15) ,  } ..
foot:Template2 [ ! xsd:language 123 = "unclosed , , ?!! xsd:hexBinary , ? xsd:gDay , ,  ] @@  o-rdf:Triple ( _:blank cross |  ) ) :: BASE
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :Template2 ( "7*" ) :: { ottr:Triple("string" http://invalid -6+.8+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ xsd:base64Binary LUB   :: (  ) .
 :: BASE .
://noScheme [ ] :: { ottr:Triple(?Yk, xsd:Type, bad::IRI) , } .
ex: [ ! ?ly = ( 23.14.15 ,, ) , ] :: {  ex:Invalid Space (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?x) , } .
ex::doubleColon [ zipMin |  List<xsd:double>invalid 123 , ,   xsd::doubleColon  , ottr: ]  :: BASE
:noPrefix [ ?!! xsd:gYear ] { <unclosedIRI(?T=h, "unclosed) , "p" } .
123 [ ?! xsd:unsignedByte "string" = "value"^^invalid ?? xsd:decimal , ,  ] @@ http://example.com/:Invalid Space (  ) :: { ottr:Triple(?v, ://noScheme, invalid) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
ex:Invalid Space [ ?var ?} , ] :: BASE
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { (?MW2, :noPrefix) } .
badPrefix:Template1 123 @@ invalid |  <unclosedIRI (  ) , @@ http://invalid  :: { o-rdf:Type(_:blank, ?.) ottr:Triple(_:blank, ex:, none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] badPrefix:string :: { "]" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI ( _:b2 ^^ List , ++ ++ ?& ) } .
://noScheme [  xsd:dateTimeStamp "string" , !  123 NEList<<LUB<xsd:int>>>xsd:invalidType ottr: , , ?! xsd:Name  = "value"^^invalid ] { ottr:Triple(xsd::doubleColon foot:Template2 false) ; } .
o-rdf:Invalid Space [ ( invalid term , "unclosed ) ,, ?{ , , xsd:gMonth ?6" ++ owl:Class ?- = ?4(*k5 ,  xsd:decimal , , ?? ottr:IRI ?@ = invalid^^type ++ ++ ?GCB_ = ( _:b1 ) , ] @ zipMin |  ottr:Annotation ( ++ (  ) ) "t+" ) :: {  }
http://example.com/:Triple [ ] ]: { ottr:Triple(?g owl:Type :Footballer) , } 
:noPrefix [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?gr, foot:Invalid Space, xsd::doubleColon) ) } .
:Footballer :: {  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ! 123 = ?s @@ <unclosedIRI :: { ottr:Triple(_:blank  ?&G) , } .
123 [ bad:ottr:Type ?o , ] @@ cross |  ex: (  ) , @@ ex:Invalid Space  :: { http://invalid(_:blank, _:b2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] "{*#1*" :: { "string" } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(:noType, badPrefix:Triple) ) .
?var   owl:NamedIndividual , , ++ ++ xsd:gMonth  = invalid^^type   :: { o-rdf:Type(_:blank, "unclosed) ://noScheme (  ) 
http://example.com/:Annotation [ ? badPrefix:string "string" , xsd:invalidType @ zipMax |  xsd:Template2 ( LUB ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: {  } .
foot:Template1 [    = (  ) ] "s*" :: BASE .
"string" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(invalid, ?a) , } .
ottr:IRI [ ++ xsd:hexBinary ,  xsd:NMTOKEN  ]  :: { o-rdf:Type(_:blank, _:b1) ottr:Triple(_:blank http://invalid _:b2) } .
 123 @@ cross |  ://noScheme (  ) , @@ bad::IRI ( ++ ++ (  )  ) :: { ex: _:blank ,, } .
ex::doubleColon [ NEList<<LUB<owl:DatatypeProperty>>>badPrefix:string ?J# , @@ invalid |  :noPrefix ( ex:Invalid Space ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ zipMax |  xsd:long 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr: }
xsd:Type [ ? xsd:time ?! xsd:normalizedString , ] { ottr:Triple(_:blank, ://noScheme, "malformed"^^bad:datatype) , ottr:Triple(_:blank http://invalid "unclosed) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI ?!! xsd:integer  = "value"^^invalid  @ cross ex:Annotation ( _:blank , _:blank  ) :: { ottr:Triple(_:blank ex::doubleColon badPrefix:string) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: ( ://noScheme ) :: { :noPrefix("string", ?;) } ,
ex:Invalid Space :: {  } .
bad::IRI [ zipMin |  LUB<<List<xsd:NMTOKEN>>>LUB ?RG , ! :noType 123 , , xsd:unsignedLong "n*Q[*" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ owl:DatatypeProperty "string" , ] invalid :: { ottr:Triple(?O, badPrefix:Triple, none) , xsd::doubleColon } .
<unclosedIRI [ ] :: ( o-rdf:Type(?z84, false)  "p+" ) .
123 [  @@ ex: (  ) , @@ invalid |  ottr:IRI (  ) :: { ottr:Triple(?(k, :Footballer, "unclosed) ) }
http://example.com/:Invalid Space [ xsd:invalidType ] @@ zipMax |  foot:Template2 ( ( ( , ) ,, ) ,, ) ( : { o-rdf:Type(?6K, "invalid"^^://noScheme) ; } ...
bad::IRI  LUB<owl:DatatypeProperty>ottr: , @@  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation [ ] :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { "y*xZ*" } .
:noPrefix [ owl:real ?z ,  @@ ex:Invalid Space ( ++ ( (  ) ) , 23.14.15 ) ,, ) ( :: { ottr:Triple(_:blank, badPrefix:Type, 123) , } .
<unclosedIRI [ ++ ++ xsd:boolean  = 23.14.15 , ,  xsd:int 123 ] invalid :: { ex:(, "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?!K\ ex::doubleColon ?R[) , invalid |  http://invalid ( ++ ++ "string" cross ) } .
"string" [ ?!! xsd:negativeInteger ?W = ?i xsd::doubleColon ]  :: { o-rdf:Type(?b(, 8+)  }
://noScheme   owl:AnnotationProperty , , ?!   , @@ zipMin |  "string" (  ) @@ foot:Footballer  ': { :noPrefix(?c*, _:b2) ) } .
?var [ xsd:unsignedByte  "K*" ]  :: BASE .
o-rdf:Annotation [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  NEList<<LUB<xsd:language>>>badPrefix:string "string" = ( ( 123 ) ,,  @@ ottr:IRI ( ://noScheme ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { ottr:Triple(_:blank  ?k) , } .
ex:Invalid Space :: { o-rdf:Type(List, xsd:invalidType) ) } .
http://invalid [  ] :: { bad::IRI(?wus-, "2023-01-01"^^xsd:date) } .
<unclosedIRI  zipMin |  @@  "string" (  ) :: { ottr:Triple(_:blank, :noPrefix, 23.14.15) , "unclosed } ,
<unclosedIRI ++ ++ owl:Class , @@ || 123 (  ) :: { ottr:Triple(_:blank, :noPrefix, _:b2) "string"  }
owl:Template2 [ ex:Invalid Space ] :: { o-rdf:Type(?Iw, "P*z5*") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: BASE .
ottr:IRI :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
123 [ ++ ++ :noType ?k ,  123 = "value"^^invalid , , List<<xsd:gYearMonth>>List  wrong xsd:string "string" , ] "string" :: { ottr:Triple(invalid, xsd:Invalid Space, abc.-7+) , } .
://noScheme [   xsd:hexBinary @@ zipMin |  bad::IRI (  ) :: { http://invalid(_:blank, ?9c) , ottr:Triple(?h|# <unclosedIRI "malformed"^^bad:datatype) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ ex::doubleColon ( ( invalid term ,  ) ^^ LUB , xsd::doubleColon ) :: { xsd:invalidType } .
?var  @@ http://example.com/:Triple ++ ++ ( "unclosed ) ) ,, ( :: { :noPrefix(??, 9+)  
foot:Type [ xsd:date "B+" , ] {  :Footballer ( ++ ?T "2023-01-01"^^xsd:date invalid |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?_f, badPrefix:Template1, _:b1) ; } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ "N*" ] ?var :: { ex::doubleColon(xsd:invalidType, -9+) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  xsd:float ] :: { ex: 
 LUB<<List<rdfs:Resource>>>invalid  , @@ foot:Footballer ( ++ invalid term , LUB ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  @@ cross |  :noPrefix (  ) ; :: { ottr:Triple(_:blank bad::IRI "malformed"^^bad:datatype)  } .
<unclosedIRI [ ] :: { ottr:Triple(?<, owl:Annotation, ?m@) , } .
://noScheme [ ! xsd:gYear ?t = invalid^^type ++ "string" = 123 , ,  xsd:long  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ List :: { http://invalid "invalid"^^ ^^ ottr: _:blank } ,
"string" :: { o-rdf:Type(?y, "unclosed) } 
xsd:Template1 [ ?? xsd:nonPositiveInteger  @@ zipMax |  ottr:IRI (  ) , @@ zipMin |  "string" (  ) :: BASE
ottr:IRI ++  ?DU) @@ :Footballer ++ (  ) ) ; :: { http://invalid(?O, <unclosedIRI) , } ,
123 :: { ottr:Triple(_:blank http://example.com/:Annotation true) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ owl:real "z*mt*" , ] @@ bad::IRI ( ( invalid term ) ^^ invalid || ) :: BASE .
 [ ! "string" = 123 , LUB @@ ex:Template1 ( ?Z8 :: { cross |  ex:Invalid Space ( _:blank , ++ ++  ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ xsd:NCName ?xE , ,  ] ?var :: { ottr:Triple(_:blank, :noPrefix, _:b2) , o-rdf:Type(_:blank, "unclosed)  } .
"string" [ ] :: { ://noScheme(xsd:invalidType, ?0) 
badPrefix:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( :noType ) .
foot:Triple [ ?!! xsd:unsignedInt ?#S = "value"^^invalid ?! List<<xsd:yearMonthDuration>>badPrefix:string ] { <unclosedIRI(?=, -4+) ) } .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 [ LUB<> ?Rl=p ] :: { o-rdf:Type(:noPrefix, ?y) , 
http://invalid  @@ ex: badPrefix:string , @@ "string" ( "string" ^^ ottr: _:blank  ) :: { ottr:Triple(_:blank owl:Annotation -6+) ) } .
://noScheme :: { "G*" } .
ex::doubleColon [ ?var ]  :: { bad::IRI(?A/, List) ,  } .
<unclosedIRI [ xsd:unsignedByte ?B} , , none:o-rdf:Triple ?t , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123  @@ zipMax |   (  ) :: ( ottr:Triple(?0r,, ex:Invalid Space, true) ) .
xsd:Template2 [ List<t-pnd:Punned-Class-ObjectProperty>LUB invalid ?  = 23.14.15 , ] { cross |  http://example.com/:Type ( ++ ++ invalid term , ++ ""unclosed" ) } .
ex:Invalid Space [ ! xsd:duration , ,  ] "unclosed :: { ://noScheme(?g, "malformed"^^bad:datatype) o-rdf:Type(_:blank, _:b1) ; } ,
http://example.com/:Invalid Space :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 LUB<<List<ottr:IRI>>>xsd::doubleColon "string" @@ ottr:IRI ( ++ ++ ( ( , ) ,, ) <unclosedIRI ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ LUB ] :: BASE
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ "|+" :: { zipMin |  ex::doubleColon ( ( 23.14.15 , ?c} ) ) ^^ :noType cross ) } .
://noScheme [   :: { ex:Invalid Space(?`, 4+) } .
http://invalid [ zipMax |  List<xsd:gMonthDay> ?l xsd:normalizedString  , ] List :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?)) , } .
bad::IRI [ bad:foot:clubHistory ?H , ,  invalid 123 , ! xsd:nonNegativeInteger "string" = 23.14.15 , ] {  } .
 [ ] :: { ottr:Triple(?&2t, ottr:Template1, _:b1) , ottr:Triple(""**%*" http://invalid "unclosed) ( 
badPrefix:Type [  xsd:gDay 123 = "unclosed , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ List :: { ottr:Triple(?N9 foot:Template1 ?var) ( } .
ottr:IRI [ ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ ++ invalid  , , "string" ?i ] "unclosed :: { ottr:Triple(_:blank, ex:Invalid Space, _:b1) ,  } .
ex: :: { o-rdf:Type(ex::doubleColon, ?U) , } .
bad::IRI [ ! List<<xsd:unsignedByte>>LUB  @@  :noType ) :: { ://noScheme(?`m, -8+) ottr: } .
http://invalid ++ ++ "string" = ?= , @@ cross <unclosedIRI ( "string"^^^xsd:string ^^  "2023-01-01"^^xsd:date  ) , @@ :noPrefix ( ++ ++ 123 ,, ) :: BASE
ottr:Triple [ "T" ] :: ( cross |  ex:Footballer ( ++ ( ( none ) ,  ) ) ) ) .
xsd:Annotation ?? xsd:Name ?Y = 23.14.15 , @@ zipMax |  http://example.com/:Invalid Space (  ) :: { o-rdf:Type(?!, "malformed"^^bad:datatype) }
ex:Footballer [   @@ "string" ( ( invalid term ,, ) ,, ) :: { ottr:Triple(?1, owl:Annotation, ottr:) , } .
ex::doubleColon :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { o-rdf:Type(_:blank, _:b2) }
http://invalid zipMax |  rdfs:Literal ?4/ , @@ || ex:Invalid Space ( _:blank ) :: { :noPrefix(123, ?._MsY) ( } .
 [ ? xsd:short , ++ t-pnd:Punned-Class-ObjectProperty "string" = "malformed"^^bad:datatype  ] @@ bad::IRI  ; :: { ex: ++ (  ) ) wrong } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?! 123  , , NEList<<LUB<xsd:string>>>xsd::doubleColon  ] "8+" :: { ottr:Triple(://noScheme <unclosedIRI abc)  } .
?var [ invalid ] {  } .
badPrefix:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
<unclosedIRI [ ] :: { (?%{, "a*mp*") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ://noScheme ] @@ o-rdf:Footballer ++ ++ ( , ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ foot::noPrefix ?u ,  NEList<<LUB<xsd:nonPositiveInteger>>>List ?n  , ] { bad::IRI ( 123 ) } .
ex: [ ?! badPrefix:string 123 , ,  ] :: { ottr:Triple(_:blank ottr:Template1 ?`M'f#x) , } .
ex:Invalid Space :: { o-rdf:Type(:noType, "malformed"^^bad:datatype) ; } .
ex::doubleColon [ xsd:token  ] xsd::doubleColon :: { ottr:Triple(?>iq, http://invalid, ""*+"") , (?@, abc) } .
"string" ! xsd:double ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  badPrefix:Template2 (  wrong ) @@ cross |  :Invalid Space (  ) :: { invalid }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
http://example.com/:Annotation [ LUB<xsd:boolean> ?le1 , @@ foot:Triple ( ottr: ) :: (  ) .
ottr:IRI [ ? owl:NamedIndividual  = 23.14.15 xsd:gMonthDay "string" , , ?? xsd:decimal ,  ] @ invalid |  ex: ( _:blank zipMin |  ) :: BASE .
?var [ "A*" ] { o-rdf:Type(, :noType)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1 [ LUB<<List<xsd:gDay>>>invalid ?= @@ http://invalid  @@ ://noScheme ( ++ ++ "string" ,, ) :: { bad::IRI(?Vd, "invalid"^^<unclosedIRI) , } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  123 ( "string"^^^xsd:string ) , @@  ?var (  ) :: { zipMax |  ex::doubleColon ( ++ (  ) "malformed"^^bad:datatype ^^ badPrefix:string ,  ) } .
:noPrefix [ || rdfs:Resource 123 , ] ottr: :: { xsd:invalidType } .
xsd:Type [ ] :: { ottr:Triple(_:blank, ex:Invalid Space, ?*4u<) } .
:Invalid Space [  ?f = "unclosed List<List<List<LUB>>> ?% ] :: { ottr:Triple(?nO~ foot:Triple -2+) , } .
ex:Template2 :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ?!! 123  , ] @@ "string" ( ++ ++ "string"^^^xsd:string ++ ?~G , _:b2 ^^ LUB ,, ) :: { o-rdf:Type(?;, ""@*6A*"") , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr: :: { bad::IRI } .
ex:Invalid Space [ ] :: BASE .
:noPrefix [   LUB<ottr:Bot>badPrefix:string ] :: {  } .
ex:Invalid Space [  ] "n*" :: { ottr:Triple(_:blank, ://noScheme, ?var) , <unclosedIRI(List, ?v4) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?^$ :Footballer "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE
123 xsd:gYear "string" ! xsd:negativeInteger ,  @@ cross |  ottr:IRI (  ) @@ zipMin |  ex::doubleColon (  ) : { http://invalid invalid } .
o-rdf:Triple xsd:invalidType @ zipMax |  http://example.com/:Template2 ( ( ( ottr:Annotation ,  ) ,, ) ) wrong ) :: { ottr:Triple(?e, badPrefix:Type, _:b1) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  "string" ( 4+ ^^ badPrefix:string , _:blank ++ ( ?var 1 , (  ) ,, ) ) cross |  ) }
:Type [ "E+" ] :: BASE .
ottr:IRI [ List<List<123>> ?W , , ?? xsd:gYear ?Sb= = "string" , @@ ?var :: { o-rdf:Type(?1k, "2023-01-01"^^xsd:date) } .
<unclosedIRI [ 123 ?uJ  ] LUB :: { ottr:Triple( http://example.com/:Template1 ?s+) ; } .
bad::IRI [ ] :: {  } .
:noPrefix [ List<xsd:token> xsd::doubleColon , invalid |  owl:rational  ] @@ ://noScheme ex: , @@ ex:Invalid Space ( _:b2 ,, ) :: { ottr: } .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  http://invalid ( ++ ++ none ) :: BASE
ex:Footballer :: { ottr:Triple(_:blank, :noPrefix, invalid) , } .
owl:Invalid Space [ ?! rdf:HTML   List ?K , ,  ?x = (  ) , , owl:NamedIndividual ?', , ! xsd:unsignedByte ? xsd:time ++ xsd:normalizedString ++ ++ xsd:decimal ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var ( _:b2 , "string" ) ) cross } .
o-rdf:Footballer [ bad:foaf:name ?K< ]  :: { ottr:Triple(_:blank foot:Type "string") ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: BASE .
:noPrefix [ LUB<<List<xsd:nonPositiveInteger>>>List ?%s6w , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "Z" :: { ottr:Triple(?d, <unclosedIRI, "malformed"^^bad:datatype) } .
://noScheme :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI zipMin |  rdfs:Resource  , @@  http://invalid (  ) , @@ ex:Invalid Space ( _:blank ,, ) :: { (_:blank, none) , } .
ex::doubleColon [ ] :: BASE
ex: [ ! xsd:anyURI  ] zipMax |  @@ cross |  123 (  ) : { o-rdf:Type(_:blank, 23.14.15) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , ex: } 
http://example.com/:Template2 [ invalid ] @@ invalid |  xsd:Annotation ( ++ invalid term badPrefix:string ) ; :: (  ) .
ex::doubleColon [ ! xsd:unsignedByte  @ ?var ( ++ ++ ?var 1  ) :: { ottr:Triple(_:blank  "2023-01-01"^^xsd:date) , ottr:Triple(_:blank, bad::IRI, "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Annotation NEList<<LUB<xsd:float>>>xsd:invalidType  cross |  @@ invalid |  ottr:IRI ( _:blank zipMax |  ) :: BASE .
http://invalid [ bad:http://example.com/:Type ?u1 , LUB<xsd:yearMonthDuration> ?' , , "[*{Y*" ] @@ ex: ?G ^^ badPrefix:string ,, , :: (  ) .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: {  ex:Invalid Space ( ( ( ""i"" , _:b2 ,, ) ) ) , ++ none ) } .
<unclosedIRI [ ] :: { :noPrefix(List, ?3) ( } .
123 :: { o-rdf:Type(??, ex::doubleColon) } .
ex:Template1 [   xsd:normalizedString 123  , ] { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
badPrefix:Template2 [ ?? xsd:boolean ?t = "unclosed , , cross xsd:gYearMonth "string" , ] :: BASE
ottr:IRI [ true ?OG , ] @@ "string" ( _:blank _:blank ,  ) @@ xsd:Invalid Space _:blank  ; { cross ://noScheme ( (  ,, ) ) ) } .
ex: [   ?+ = "string" invalid |  xsd:Name 123 , ! xsd:unsignedLong , ,  cross |  @@ zipMax |  :noPrefix (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { ottr:Triple("s*$Y*" owl:Type <unclosedIRI) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: {  } .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 NEList<<LUB<xsd:language>>> xsd:invalidType @@ zipMin |   ( ++ ++ invalid term ,, ) ; :: { o-rdf:Type(?7, ?3) , ?var } .
bad::IRI [ xsd::doubleColon ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( :noPrefix(_:blank, 23.14.15) ottr:Triple(?d, ex:Invalid Space, "invalid"^^://noScheme) ( ) .
foot:Triple [ xsd:unsignedByte ?l , , ++ ++ xsd:dateTimeStamp   , , ?! xsd:duration  = invalid^^type , ] { ottr:Triple(_:blank, http://invalid, _:b2) , } .
o-rdf:Triple [ "string" ?=  ?@^?CN ,  :: { ottr:Triple(123 :noPrefix ?<8) }
?var :: { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [ "W" ] ex:Invalid Space :: { ottr:IRI ( ( ( "string"^^^xsd:string ) ) ,, ) ^^ xsd:invalidType , _:blank ++ ++ _:b2 zipMax |  ) } .
http://invalid [  ]  :: { ex::doubleColon(_:blank, "malformed"^^bad:datatype) ottr:Triple(_:blank, bad::IRI, _:b1) ,  } .
 [   xsd:gMonth ?q = invalid^^type ] :: { o-rdf:Type(?Pi, invalid) ; } .
ex: [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
://noScheme xsd:base64Binary badPrefix:string , ,  zipMin |  @@  ex:Invalid Space (  ) :: { ottr:Triple(?m~ ottr:Template1 true) , 
xsd:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?/ foot:Type "2023-01-01"^^xsd:date) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Invalid Space [   ?JP = false , , NEList<List<List<"G+">>> ?To ] @@ ?var :: BASE .
ex::doubleColon  @@ cross ex:Template1 ( ?, ) :: { ottr:Triple(<unclosedIRI, foot:Footballer, xsd::doubleColon) , bad::IRI(?%m, -0+.abc) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank  ?/E) } 
123 [ ] :: {  } .
ottr:IRI [ xsd:duration :noType badPrefix:string ] :: { o-rdf:Type(?uR*, 23.14.15) , } .
:noPrefix :: {  } .
ex: [ ? xsd:invalidType "string" , @@ ://noScheme  @@ zipMin |  http://invalid (  ) :: { ex:Invalid Space(?N, none) ( }
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: ( "string" ( _:blank ,, ) ) .
badPrefix:Template1 [ ! List<<xsd:float>>List , cross |  xsd:decimal 123 , ?var ?Vv ,  :: BASE
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] /: {  } ...
ottr:IRI [  ] @@ :Type ( _:blank ) , :: { ottr:Triple(_:blank xsd:Triple ?8) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ zipMax |  xsd:gMonth  ,  ?Q  @@ ex:Template1 ( ?) :: { ottr:Triple(_:blank, :noPrefix, _:b2) , ex::doubleColon  } .
ex: [ xsd::doubleColon ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { bad::IRI(, "?+") ( } .
://noScheme [ ] :: { o-rdf:Type(?j0, ""L"") badPrefix:string } ;
?var ?!! NEList<ottr:IRI>invalid ?o = "value"^^invalid @@ cross |  http://example.com/:Footballer ( 123 ( ( , ) ) ) ^^  zipMin |  ) @@  ottr:Invalid Space ( ++ ( "invalid"^^ex: ,, ) ,, ) :: { ex:Invalid Space(?x, _:b1) , 
o-rdf:Annotation ? rdf:HTML "string"  , @@ wrong badPrefix:Template1 ( xsd:invalidType ) :: ( o-rdf:Type(?_-, "malformed"^^bad:datatype) ) ) .
?var :: { ex:(http://invalid, 23.14.15) , ottr:Annotation 123 } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(_:blank, "c*UP*") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ?? :noType ?O @@ xsd:invalidType :: BASE .
ex:Invalid Space [ ] :: { ottr:Triple(?~, owl:Invalid Space, ?/[) ( } .
<unclosedIRI [  ] @@ ex:Template1 ( ?m :: { ottr:Triple(?z ://noScheme 1..2) 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ List<invalid> ?6_ , ] :: { bad::IRI(?k, "unclosed) }
"string" [ "string" ?K , t-pnd:Punned-Class-ObjectProperty xsd::doubleColon , , LUB ] ottr: :: {  } .
:noPrefix [ ?!! LUB<owl:DatatypeProperty>badPrefix:string xsd:dateTimeStamp  ! xsd:NMTOKEN "string" = "unclosed ++ ++ "string"  ++ xsd:anyURI ,   :: { (?A, _:b1) ) 
ex:Template2 [  ] :: { ottr:Triple(_:blank, ://noScheme, "unclosed) ) } .
:noPrefix [ ?? List<xsd:unsignedInt>ottr: ?og = invalid^^type , , List ] "7*" :: { 123 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ cross |  owl:NamedIndividual "string" @@ ?var  , @@ zipMax |   ( ++  , _:blank  ) :: BASE .
http://invalid [ rdf:HTML   rdfs:Literal ,  ] @@ zipMin |  ex::doubleColon ( _:blank ) ; :: { ex: ( <unclosedIRI ) } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ LUB :: { bad::IRI(:noType, ?8-) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?HO, xsd:invalidType) , } .
"string" [ ++ ++ badPrefix:string 123 , ] { ottr:Triple(?]}WI"pz http://example.com/:Template1 none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Type [ ] :: BASE
foot:Invalid Space ]: {  } ..
owl:Template1 [ 123 ,, ?H , xsd:double ?-XzS zipMin |  List<owl:real>LUB  , ] :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross |  :noPrefix ( _:blank http://invalid ) :: BASE .
?var [ ] :: { ottr:Triple(_:blank o-rdf:Annotation "T+") , } .
<unclosedIRI [  ] List :: { "string" } .
ex: [ xsd:duration ottr: ] @@ ex:Invalid Space  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { o-rdf:Type(?W*, ?C) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(:noType, none) ) } .
bad::IRI [ ++ xsd:decimal , ,  @@ 123  @@ zipMax |  bad::IRI (  ) :: {  ( ( , ) ^^ badPrefix:string ,  ) }
:Template2 [  ] invalid |  @@ ?var  ; { ottr:Triple(_:blank, , "malformed"^^bad:datatype) o-rdf:Type(_:blank, _:b2) , o-rdf:Type(_:blank, 23.14.15) , } 
http://example.com/:Triple [  ] { ottr:Triple(?7Z, <unclosedIRI, "unclosed)  } .
ottr:IRI LUB zipMax |  @@ ex: ( ++ ++ ( _:b2 ,, ) ?` ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ List<LUB<<List<xsd:long>>>xsd:invalidType 123> ?5ND , owl:rational ex:Invalid Space , ] :: { invalid |  "string" ( ++ invalid term zipMin |  ) } .
:noPrefix [ ] :: { 123 } .
ex::doubleColon [ ?var ?@8j' @@ ://noScheme  :: { o-rdf:Type(xsd::doubleColon, ?kB) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?!!  = "string"  owl:real , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType ,: { http://invalid(_:blank, false) , } .
:Footballer :: BASE
foot:Type [ ? xsd:gMonthDay , ] @@ cross |  123 (  ) , @@  ottr:IRI (  ) :: { o-rdf:Type(_:blank, 23.14.15) ,  }
?var [  @@ :noPrefix :: BASE .
ottr:IRI :: BASE
bad::IRI   :: { ottr:Triple(_:blank http://invalid _:b2) cross |  <unclosedIRI ( _:blank  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [ zipMax |  xsd:byte ?@ ? List<xsd:boolean>LUB  = "value"^^invalid ] :: { "U*" } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { o-rdf:Type(123, invalid) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?B_IoG, foot:Footballer, ??YE) } .
ex: [ ] :: { ://noScheme(?H, ""u*N{*"") ; 
ex::doubleColon [ badPrefix:string ] @@ ex:Template1 ( ?)9 :: { (?mOg, "2023-01-01"^^xsd:date) , } (
"string" ++ ++ 123 = ?Q , , ?? xsd:gYearMonth "string" = "unclosed , @@ ex:Annotation ( _:b1  ) , @@ 123 ++ ++ ( invalid term ,, ) ,, :: (  ) .
ottr:IRI ++ ++ xsd:unsignedLong  = 23.14.15 , LUB<<List<rdfs:Datatype>>>xsd:invalidType ?aH @ zipMax |  :Template2 ( ?var 1 ,, ) :: BASE .
?var :: { ://noScheme "~" 
ex:Invalid Space [ ?! xsd:NCName , ] http://invalid :: { ottr:Triple(123, , ?/) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ?!! ottr:Bot "string" = 123 xsd::doubleColon ] cross |  @@ ex: ( ++ ++ -6+.abc ,  ) :: { LUB } .
<unclosedIRI [ ] :: { :noPrefix(_:blank, :noType) , o-rdf:Type(?,^, "invalid"^^ex::doubleColon) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?t[l xsd:Type "2023-01-01"^^xsd:date) ; } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Footballer [ ?  ?(u , ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 [  @@ ex:Template1 ( ?oGC :: ( ottr:Triple(_:blank http://example.com/:Triple invalid)  ) .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?T/, ?1) 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 :: {  }
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, http://example.com/:Triple, ex:) , cross |  ?var ( "`*" ) } .
 [ NEList<NEList<xsd:double>invalid xsd:invalidType> ?h , zipMax |  xsd:language ?D} , , :noType ] List :: { ottr:Triple(LUB :noPrefix 1..2) , } .
bad::IRI [ owl:NamedIndividual 123  xsd:unsignedByte "string" = "value"^^invalid , ]  :: { http://invalid(?o, "malformed"^^bad:datatype) , } .
://noScheme [  @ ex::doubleColon ++ ++  :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
<unclosedIRI ++ ++ badPrefix:string ?Z @@ "string" (  ) , @@ zipMin |   ( (  ) ) ^^ xsd::doubleColon ,, ) :: BASE
badPrefix:Type [ ++ owl:real ,   ?wb  ,  :: { ottr:Triple(?S  _:b1) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ ] :: { ottr:Triple(?var bad::IRI :noPrefix) } .
"string" LUB @@ ottr:IRI "unclosed @@ http://invalid ( ( (  ,, ) ) ) ^^ :noType , ++ invalid term ) :: BASE
<unclosedIRI [ ++ ++ ottr: ?X* , 123 ?=." ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMin |  @@ cross ://noScheme ( 8+.abc zipMax |  ) :: BASE .
ex:Invalid Space :: { ottr:Triple(?-Sr4, badPrefix:Template2, -4+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ invalid |  LUB<xsd:unsignedByte>xsd::doubleColon "string" , ] invalid :: { cross |  ex: ( ++ ++ "malformed"^^bad:datatype _:blank ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?f) , } .
 [  @  123 (  ) :: ( bad::IRI(_:blank, "unclosed) , http://invalid(?9e, 23.14.15) ( ) .
foot:Triple [ ! rdf:XMLLiteral ?p  , , ? 123 = ( _:b1 ,   ] :: {  } )
xsd:Invalid Space [ ottr:Bot ?Y , ?! xsd:nonPositiveInteger , xsd:normalizedString "'*" , , List<List<NEList<?!! xsd:NMTOKEN  = "unclosed>>> ?T; , ++ xsd:short , , ?? owl:rational 123 = "value"^^invalid  ] @@ wrong ex:Footballer ( "%+" ) , $: {  } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ List ] :: BASE
http://example.com/:Annotation [  ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?Gh :: { o-rdf:Type(?], ?=w) , } .
http://invalid :: { ottr:Triple(_:blank ex::doubleColon ://noScheme) } .
:noPrefix [ ++ NEList<rdf:XMLLiteral>ottr:  = "value"^^invalid , @@  ?> , _:blank ,, ; :: {  } .
<unclosedIRI [ ] :: { ex:(badPrefix:string, 1..2) "-*" } .
ex:Invalid Space [ ++ ++ ottr:IRI , ! 123   ] zipMax |  @@ 123  :: ( bad::IRI (  ) ) .
:Invalid Space [ xsd:int invalid , , rdfs:Datatype "string" @@ cross |  o-rdf:Type ( ++ ( (  ) , invalid term ) ) ++ ++ ottr:Footballer zipMin |  ) :: { ottr:Triple(?b, xsd:Triple, true) , 
:noPrefix [  xsd:yearMonthDuration "string" = "malformed"^^bad:datatype , "unclosed  :: { ex:Invalid Space(_:blank, _:b2) ,  }
ottr:IRI [ ] :: { badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" :: { ottr:Triple(?Z, o-rdf:Annotation, ?}y) } .
<unclosedIRI ottr:IRI bad::IRI @@ http://invalid  , @@ zipMax |   (  ) :: { ex::doubleColon ( _:blank _:blank ,  ) } .
?var [ List<xsd:token>LUB ?F , ]  @@ cross ex: (  ) :: { ottr:Triple(123 ://noScheme ottr:) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { o-rdf:Type(?+, "invalid"^^http://invalid) , } .
:Invalid Space [ ?var ?b ++ xsd:normalizedString , ,  ] List :: { ottr:Triple(?@, ex:Invalid Space, "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
http://example.com/:Type invalid |  xsd:boolean  @@ zipMin |  foot:Footballer ( ( "string"^^^xsd:string , "unclosed ,, ) ) ^^ invalid ) , :: { ex::doubleColon(?', 1..2) ; 
ottr:IRI [  @@ cross |  123 (  ) :: { o-rdf:Type(_:blank, none) ottr:Triple(_:blank http://invalid "unclosed) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Type :: BASE .
://noScheme [ foot:http://example.com/:Template2 ?wg , ] { "string" } .
bad::IRI [   xsd:duration , invalid |  LUB<owl:DatatypeProperty>:noType ?j , , ++ ++ xsd:invalidType  ] ex: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ List ] :: { ottr:Triple("<+", o-rdf:Template1, ?=) ,  123 ^^ xsd::doubleColon _:blank } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ( ++ ++ "string"^^^xsd:string , (  )  ) ; :: { :noPrefix(?XB1, badPrefix:string) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
?var [ ? xsd:NCName "string" = "value"^^invalid  ] @@ cross ex:Template1 ( ?F" ) :: { <unclosedIRI(?.ZAx^, "2023-01-01"^^xsd:date) 
badPrefix:Triple [ ] :: { o-rdf:Type(?$C, ""5"") , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ 123 ?V , ] ottr: :: ( ottr:Triple(_:blank bad::IRI none) , ex:Invalid Space(_:blank, "2023-01-01"^^xsd:date) , ) .
ex::doubleColon :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Template1  } .
:noPrefix [ "`+" ] @@ invalid |  http://invalid ( ( invalid term ,, ) ) ,, ) :: { ://noScheme } .
<unclosedIRI [ ?! xsd:unsignedLong ,  @@ cross |  ex: (  ) @@  (  ) :: { o-rdf:Type("string", LUB) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ; } .
xsd:Annotation LUB<List<xsd:integer>:noType> ?<FHc @@  badPrefix:Triple ( badPrefix:string ) , :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?A, ex:Type, ?Des) } .
foot:Footballer [ ? xsd:boolean "string"  , , ++ xsd:double 123 = "value"^^invalid xsd:hexBinary  , ?? xsd:gDay ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Invalid Space [ ] :: { ottr:Triple(?!, owl:Template2, _:b2) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?)_, ?var) , ottr:Triple(invalid badPrefix:Template2 foot:Type) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex::doubleColon ?! rdfs:Literal , ++ xsd:language , ,  @@ :noPrefix (  ) @@ 123  :: { bad::IRI(_:blank, ?2x]K) } .
http://example.com/:Triple :: { wrong ex: ( ?XV ^^ xsd::doubleColon , _:blank ,, ) } .
 [ ] :: { ://noScheme(http://invalid, none) ottr:Triple("Z", <unclosedIRI, 1..2) , } .
ex:Invalid Space [ "string" ?v , ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation [ badPrefix:string ] @@ cross ex:Template1 ( ?# ) :: BASE
xsd:Invalid Space [ List<<owl:DatatypeProperty>> "string" ] :: (  ) .
o-rdf:Footballer [  123 = ?0 ++ ++ xsd:long  = "value"^^invalid , @@ ottr: :: { "h*" } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [  ] { ottr:Triple(?-1 <unclosedIRI ?=) } .
ottr:Type [   rdfs:Literal "string" = invalid^^type , ?var @@ "M*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ex::doubleColon(http://invalid, 6+.abc) ; } .
bad::IRI  owl:AnnotationProperty 123  @ :noPrefix  :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, none) , ottr:Triple(_:blank, badPrefix:Invalid Space, 23.14.15) , } .
://noScheme [ ] :: {  } .
 [ ottr:ex: ?HO , ]  :: {  } )
"string" [ List<<xsd:nonNegativeInteger>>invalid ottr: , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ,: { cross |  ex:Invalid Space ( ++ ++ ( (  ) ,, ) ) , _:blank zipMax |  ) } .
ex:Annotation [ ? xsd:invalidType  ?! xsd:dateTimeStamp , ++ ++ xsd:unsignedByte ] badPrefix:string :: { http://invalid(?0, :noType) ( }
ottr:IRI [ ] :: { 123 } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme xsd:unsignedInt ?1< , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ?var ( _:blank ,, ) :: BASE .
badPrefix:Template2 [  "string"  , , ottr:  :: { ottr:Triple(?_D, bad::IRI, "malformed"^^bad:datatype) } .
ex:Invalid Space [   NEList<xsd:boolean>xsd:invalidType  = "malformed"^^bad:datatype List<List<NEList<http://invalid>>> ?T ] :: {  } .
ex::doubleColon :: {   } .
<unclosedIRI [ ++ xsd:yearMonthDuration , ] "U*k4*" :: { ottr:Triple(invalid ex:Triple :noType) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?y) , :noPrefix(?5^h, none) , } .
ex: [  ] { ottr:Triple(?+ :Annotation ""b+"") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?!! LUB 123 , , owl:NamedIndividual xsd::doubleColon  ] @@  foot:Type (  ) :: { http://example.com/:Footballer ( _:b2 ^^ List zipMax |  ) }
ex:Triple [ "string"^^^xsd:string , ( (  ) ,, ) ) ?6/ ] :: ( ottr:IRI ?var ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  invalid |  @@ cross |  "string" ( _:blank cross ) :: { ottr:Triple(_:blank bad::IRI ";*") } .
ex::doubleColon [ ] :: { o-rdf:Type(List, none) , } .
ex:  LUB 123  @@ :noPrefix (  ) @@ <unclosedIRI (  ) :: { http://invalid(_:blank, ?{) ; } .
ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ://noScheme :: { ottr:Triple(?_e3)v, badPrefix:Invalid Space, invalid) , ottr:Triple(?, http://example.com/:Template1 _:b1)  } .
owl:Footballer [ ?!! xsd:nonNegativeInteger , ] @  o-rdf:Template2 ( ++ ?9jC( "unclosed ^^ xsd::doubleColon , ++ ++ ""V"" ) ; { invalid } .
:Annotation [ ottr: ] @@ zipMax |  xsd:Type ( _:b2 ,, ) ) :: { o-rdf:Type(?8U\, 9+.abc) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "U*5+*" } .
ottr:IRI [ ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ 123 ++ (  ) ) ,, :: BASE .
:Invalid Space [  ] :: { o-rdf:Type(?j, ?|ND) ,  } .
<unclosedIRI [ ?? ?< = invalid^^type , @@ cross ://noScheme ( ++ ++ ( ( , ) ,, ) , "string" ^^ xsd::doubleColon _:blank  ) :: { ottr:Triple(_:blank foot:Triple _:b2) , } .
:noPrefix [ xsd:gYear  , , List<badPrefix:string> ?P ] @@ ex: ( "malformed"^^bad:datatype ) ; :: { ex::doubleColon(ex:Invalid Space, ?var) ) } .
 [ ++ List<<xsd:dateTimeStamp>>LUB "string" = ( 23.14.15 ) , cross |  xsd:double 123  ] { zipMax |  http://invalid (  ) } .
"string" [ ++ ++ xsd:Name , , ! xsd:string  = "malformed"^^bad:datatype , ] :noType :: ( ottr:Triple(_:blank, http://invalid, "unclosed) ottr:Triple(?x, ex:Invalid Space, none) ) .
ottr:Footballer :: BASE
o-rdf:Footballer :: { o-rdf:Type(ex::doubleColon, "string") , }
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  ottr:IRI ( ++ ++ "malformed"^^bad:datatype ?var 1 ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ++ ++ NEList<xsd:normalizedString>ottr: , , List<badPrefix:string> ?f ] @@ :noPrefix _:blank zipMax |  , @@ ex:Invalid Space (  ) :: BASE .
bad::IRI [  ] "unclosed :: { ottr:Triple(?~ <unclosedIRI ?J}$) , } .
http://invalid  @@ ex: (  ) @@ cross |   (  ) :: { ottr:Triple(_:blank, badPrefix:Template2, "unclosed) , xsd:invalidType } .
?var [ ] :: { <unclosedIRI(?{, 1..2) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Triple [ ?!! xsd:NMTOKEN "string" = "value"^^invalid , @ "string" (  ) ; { ottr:Triple(?Y ottr:Template1 _:b1) } ...
ex:Invalid Space [ xsd:negativeInteger LUB , List ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?sL, http://example.com/:Type, owl:Annotation) ) 
ottr:IRI :: BASE .
"string" [ ? NEList<<LUB<owl:rational>>>xsd::doubleColon , , ! 123  ] 123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?>t ex::doubleColon _:b2) ottr:Triple(<unclosedIRI, http://example.com/:Footballer, ?~[) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Invalid Space   :: {  } .
bad::IRI [ ] :: { "R+" } .
http://invalid [ ?var ?K , :noType ] :: { o-rdf:Type(_:blank, List) ( } .
ex:Invalid Space [  ]  @@ invalid |  :noPrefix (  ) :: { (?YJ, _:b1) } ;
://noScheme [ ?! xsd:unsignedShort  = ?h ottr:Bot "string" , @ ex: ( (  ) ,, ) :: BASE
o-rdf:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?6, abc) , ottr:Type ( ?vN ,, ) ) ^^  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2 :: BASE .
"string"   owl:ObjectProperty 123 = "malformed"^^bad:datatype @@ ex:  @@  ottr:IRI (  ) :: { o-rdf:Type(_:blank, _:b1) ) 
<unclosedIRI [  ]  :: { bad::IRI(LUB, ?=) , "o*{Y*" } .
://noScheme [ ?    @@ ex:Invalid Space ( 123 ) :: { o-rdf:Type(_:blank, 23.14.15) http://invalid ( _:blank ,  ) } .
bad::IRI [ ?!! owl:NamedIndividual ,  xsd:token "string"  , ] @ zipMax |  :noPrefix (  ) :: { ottr:Triple(?:, ex::doubleColon, List) } .
?var [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : {  } 
xsd:Template1 [ :noType ] :: BASE
ex:Invalid Space [ NEList<rdfs:Datatype>badPrefix:string xsd:invalidType , ,  @@ ottr:IRI (  ) , @@ ottr:IRI (  ) :: { ottr:Triple(?d http://example.com/:Invalid Space "malformed"^^bad:datatype) , }
ottr:IRI [ LUB<List<rdf:HTML>> ?c9 , ] xsd::doubleColon :: { ex:Invalid Space(_:blank, ?Y) ; } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Invalid Space :: { ?var ?e@ invalid |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ 123 ] @@ bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { ")+" } .
http://invalid [  zipMin |  @@  :noPrefix (  ) :: { ottr:Triple(_:blank, <unclosedIRI, 23.14.15)  } .
"string" cross |  t-pnd:Punned-Class-ObjectProperty 123 , ,  @@  (  ) , @@ ?var  : { ottr:Triple(_:blank ://noScheme none) , } .
badPrefix:Template1 [ 123 ?]g ] :: { o-rdf:Type(List, invalid) 
owl:Footballer ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || :Type ( ++ ++ ( (  ) ) ) ,, ) @@ zipMax |  http://example.com/:Triple ( "string"^^^xsd:string ^^  , _:blank ) :: BASE
"string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  @@ ottr:IRI ( "k" ) :: { ottr:Triple(?~ owl:Invalid Space ?aZo) , }
badPrefix:Type [  ] @@ ex: ( _:blank  ) @@ ://noScheme  :: { zipMax |  ex::doubleColon (  ) } .
<unclosedIRI [ ?! 123 = "malformed"^^bad:datatype 123 ] xsd:invalidType :: { ottr:Triple(_:blank, bad::IRI, LUB) o-rdf:Type(http://invalid, "invalid"^^:noPrefix) ( } .
 [ ++ List ?&<c , LUB<owl:rational>badPrefix:string  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?6, "malformed"^^bad:datatype) } .
?var [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template1 xsd:dateTimeStamp "f*" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?;, foot:Template2, ex:Triple) , :noType } )
:Annotation [ LUB<List<owl:AnnotationProperty>> ?X , ] { ottr:Triple(?i/ ottr:Footballer 1+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: BASE .
ottr:IRI [ ! NEList<xsd:unsignedShort>List ,  :: { badPrefix:string } .
owl:Footballer [ "m*OJ*" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] 123 :: { ottr:Triple(?5, , ex:Invalid Space) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix (  ) ) ^^ xsd:invalidType } .
://noScheme [ ?? xsd:yearMonthDuration  ] @@ zipMax |  ex::doubleColon (  ) @@ http://invalid (  ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ex:(, 23.14.15) } .
<unclosedIRI [ zipMin |  xsd:NMTOKEN "string" , , xsd:NCName ?R ] { ottr:Triple(?* o-rdf:Annotation ?EQ) , } .
?var :: BASE
ottr:IRI  ?C ,  @ invalid |  :Type (  ) :: { o-rdf:Type(?|x, "malformed"^^bad:datatype) , } )
 [ invalid ] "string" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { o-rdf:Type(?', ex:Invalid Space) } .
123 [  ] @@ http://invalid ( "[" ) , @@ :Annotation "malformed"^^bad:datatype ^^ xsd::doubleColon ,, :: BASE .
ex: [ List<xsd:gMonthDay>badPrefix:string :noType ! owl:NamedIndividual ,  @@ invalid |  bad::IRI ( _:blank  ) :: { ottr:Triple(_:blank ex::doubleColon true) ,  } .
:noPrefix zipMax |  ottr:IRI ?;t&+<> cross |  @@ zipMin |  <unclosedIRI ( ( "string"^^^xsd:string ,, ) ) ) :: { ottr:Triple(xsd:invalidType, xsd:Template2, ?Ep) , } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] _: { "|*" } 
?var [ ] :: { :noPrefix(?NQ92, "unclosed) ; 
badPrefix:Type [ ?! "string"  , , ?var ?8r , ] { zipMax |  "string" ( _:blank  ) } .
ottr:IRI [  ] { ex::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ! owl:real ?)1 =  ++ ++ LUB<<List<xsd:gYear>>>:noType "string" = "unclosed , ] :: { ottr:Triple(_:blank ottr:Triple ""unclosed") , } .
"string" [ ] :: BASE .
o-rdf:Invalid Space [ xsd:NMTOKEN invalid , "x*hg*" ] ?var :: { o-rdf:Type(?/I, ?K8) } .
http://invalid ?? owl:Class @@ wrong ex: ( ++ ++ ?var 1 ,, ) @@ ex:Invalid Space ++ ( 123 ,, ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ List<LUB> ?H , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ cross |  <unclosedIRI ( _:blank ottr: ) :: { :noPrefix ( ( 1..2 , 23.14.15 )  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (xsd:invalidType, List) ,  } .
123 [ xsd:dateTime 123 ] @ invalid |  123 ( _:blank ,  ) :: { ottr:Triple(?s, :noPrefix, _:b1) http://invalid(?l, "unclosed) ( 
http://example.com/:Annotation :: BASE
ottr:IRI List<ex::doubleColon> ?/ @@ cross |  "string" ( "unclosed ) :: BASE .
foot:Template1 [ ] :: { ottr:Triple(_:blank, ://noScheme, _:b1) , } (
ex:Invalid Space [ foot::noPrefix ?)wP , ! NEList<<LUB<xsd:gYearMonth>>>  = invalid^^type , ] :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ bad::IRI (  ) :: {  } .
 :: { ottr:Triple(badPrefix:string badPrefix:Annotation invalid) <unclosedIRI(?l, ?8no2) } .
ex: [ rdf:XMLLiteral List || xsd:duration ?pO , , xsd:invalidType ] ottr: :: { o-rdf:Type(?yAc, 8+) ) } .
123 [  ] @@ 123 _:blank ,, , :: BASE
http://example.com/:Footballer [ ?!! ottr:IRI , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { invalid |  xsd:Type ( ( owl:Invalid Space ) ^^ LUB , ++ ( , ) ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [ List<t-pnd:Punned-Class-ObjectProperty>ottr: LUB , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ owl:Type ( ++ ++ invalid term || ) :: { bad::IRI } .
"string" [ ?? xsd:duration , ?var ] { o-rdf:Type(?T, "C*Wx*") , } .
ottr:IRI invalid |  xsd:time "string" , @@ http://invalid ""R"" ^^  :: { ://noScheme(_:blank, -4+.6+) , } .
ex:Invalid Space :: { ottr:Triple(badPrefix:string, :Template2, ?'&r)  } .
 [  @@ zipMin |  ex: ( _:blank ?) , ++ ( ( "unclosed ,, ) ) ) ,, ) @@  ex::doubleColon ( xsd::doubleColon ) :: { cross |  :noPrefix (  ) } .
123 [ ++ ++ invalid  ? xsd:string 123 = "value"^^invalid ] :: { ottr:Triple(?b. ex:Annotation "malformed"^^bad:datatype) , ottr:Triple(?E* bad::IRI true) } .
xsd:Triple [ ] :: BASE
http://example.com/:Footballer [ xsd:foot:Template1 ?Oce , xsd:decimal ?! ++ owl:Class , ?!! xsd:unsignedLong  ] List : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 ?? LUB<xsd:date>ottr: 123 = "unclosed ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  ottr:IRI (  ) :: BASE .
badPrefix:Template2 [ xsd:long ?Ce , ] "N" :: {  
ex::doubleColon :: { ottr:Triple(_:blank, foot:Triple, "invalid"^^://noScheme) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] :: { <unclosedIRI ( _:blank , ( ( "string" , ( , ) ,, ) ) )  ) } .
:noPrefix [ ex:Invalid Space @@ bad::IRI http://example.com/:Invalid Space ^^ List ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ owl:AnnotationProperty "string" ,  xsd:unsignedByte , ,  ] @@ invalid :: { ottr:Triple(?5 :noPrefix ?K) , (_:blank, xsd::doubleColon) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( :noType ) .
?var [ ++ ?yq =  ] { o-rdf:Type("Q*\z*", 1..2) ottr:Triple(?' ottr:Type _:b1) } .
owl:Annotation [ ] ; { ottr:Triple(?= ex:Footballer "unclosed) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } )
123 [  ]  :: BASE .
bad::IRI [ LUB<List<LUB<<List<xsd:gYearMonth>>>LUB>> ?- , !  = ?jK ?! xsd:base64Binary 123 = 23.14.15 , , "_*" ] :noType :: { ottr:Triple("string", ottr:Template2, false) , } .
owl:Template1 :: { o-rdf:Type(?R, ex:) } .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ wrong xsd:boolean "string" @@ ex:Invalid Space ++ ++ (  ) ) ( "unclosed ) ^^ invalid , List :: { ex::doubleColon ( _:blank zipMin |  ) } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd::doubleColon :: {  } .
http://invalid [ ? ottr: ?b` , ] :: BASE
:noPrefix [ ?!! xsd:time   :: { ottr:Triple(_:blank ://noScheme none) (_:blank, "malformed"^^bad:datatype) ,  }
?var List<<owl:DatatypeProperty>>LUB ?] @@ ottr:IRI ( (  ) ) ^^ :noType ) :: BASE .
ex: [ http://invalid ] 123 :: { (?k9, ?f) ottr:Triple(_:blank <unclosedIRI true) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ bad::IRI  , :: { o-rdf:Type(_:blank, "+*tL*") , ottr:Triple(_:blank, ex:Invalid Space, none) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross ex::doubleColon ( ++ ++ ( 123 ,, ) , ( , ) ,, ) } .
:noPrefix [ ] :: { xsd:invalidType } .
"string" [ ++ rdfs:Literal xsd:unsignedLong  , ] :: {  } .
://noScheme :: BASE
o-rdf:Template1 [ ?!!   , ,   xsd:gDay "string" = "value"^^invalid ,  @ zipMax |  xsd:Triple ( ++ _:b1 invalid |  ) :: { ottr:Triple(List foot:Invalid Space "unclosed) } ...
ottr:Footballer 123 ?# , ?? xsd:dateTime ?eN = ?6~ , , zipMin |  rdfs:Datatype ?oW ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
?var [ ! xsd:dayTimeDuration  ?q =  ] "0*" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ 123 ] :: { ex:(?+, ?tY) , ottr:Triple(_:blank, ex::doubleColon, none) , 
owl:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Template1 ( ?* :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(ottr:, List)  } .
://noScheme :: ( ottr:Triple(?% badPrefix:Footballer "unclosed) ) .
bad::IRI NEList<<LUB<xsd:language>>>:noType xsd:invalidType , ,  @@ badPrefix:string :: { http://invalid(?hs, _:b2) , }
"string" [ invalid |  xsd:long  , foot:<unclosedIRI ?DfZ7C , @ <unclosedIRI ++ ++ ( invalid term ,, ) ) cross :: { cross |  ex:Invalid Space (  ) } )
o-rdf:Type [ xsd:unsignedByte 123 @@ zipMin |  :Template2 ( ( xsd:Template1 ) ) @@ foot:Triple ( _:blank ,, ) : { ottr:Triple(?Q> ottr:Annotation "malformed"^^bad:datatype) ( } 
ex::doubleColon [ LUB<xsd:duration>List 123 , , ?var ?% ]  :: BASE .
123 [  ?0 ++ xsd:short ,  @@ ottr:IRI  :: { ottr:Triple(?2d, ex:Invalid Space, 1..2) ( } )
foot:Footballer [ LUB ] @@ wrong <unclosedIRI ( "string" ) @@ ://noScheme ( _:blank ) :: { invalid |  bad::IRI ( ++ ?OH , ++ ++ ( ( true ,, ) , _:b2 ) ) ( , ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?  "string" ,  ] :: { ex:(_:blank, "malformed"^^bad:datatype) o-rdf:Type(_:blank, _:b1) ,  } .
ottr:Template2 :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("x*" owl:Template1 ?Q) } .
o-rdf:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noType :: { ottr:Triple(?J4, ex:Invalid Space, xsd:invalidType) , 
http://example.com/:Annotation [ ottr:IRI xsd::doubleColon ] { "9+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?!! NEList<<LUB<xsd:gYearMonth>>>ottr: ?W = "string" , ] @@ ex:Triple ://noScheme , @@ ottr:IRI (  ) :: BASE .
?var [ xsd:anyURI 123  :: { ottr:Triple(?Ozr, http://invalid, :noType) , } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  bad::IRI ( _:blank , "2023-01-01"^^xsd:date ++ ( , ) ) ( :: ( ex:Invalid Space(_:blank, 1..2) , o-rdf:Type("G*", ?:[) ) .
ex::doubleColon [ ++ ++ xsd:unsignedShort  = "unclosed , , xsd:invalidType ] :: { ottr:Triple(?M#"  _:b2) 123 } .
"string" [ ] :: { zipMax |  ex: ( ++ ++ ?i cross |  ) } .
http://example.com/:Annotation [ ! ?) = 23.14.15 , xsd:gMonth List  ] LUB :: { ottr:Triple(?j owl:Type _:b1) ) } .
ottr:Template2 :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
badPrefix:Template1 NEList<"unclosed> ?X , @@ cross :Footballer ( (  ) ^^  ,, ) @@ invalid |  xsd:Annotation ( _:blank zipMin |  ) :: { bad::IRI(?^, foot:Invalid Space) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?m , ] "U+" :: BASE .
ex:Invalid Space [ ] :: { cross |  "string" ( _:blank , ( ( ( , ) ,, ) , none ) ) ^^ xsd::doubleColon  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { xsd:invalidType } ...
foot:Footballer [  @@ http://invalid ?var ( :: { o-rdf:Type(?+r32, ex::doubleColon) ; } .
 [ zipMax |  LUB<xsd:unsignedByte>ottr: ?g , , ++ ++ rdfs:Literal , badPrefix:string ] :: { ottr:Triple( o-rdf:Annotation ?') } .
ex: :: { <unclosedIRI(_:blank, ex:Template1) , ottr:Triple(?V, bad::IRI, "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme ? owl:Class 123 = "malformed"^^bad:datatype @@ :noPrefix ?: ) :: {  
ottr:Triple [ ?? owl:ObjectProperty "string"  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid |  @@ ex: (  ) :: { ottr:Triple(_:blank, badPrefix:Type, _:b2) , } )
xsd:Template2 [   invalid  , ?! "string"  , , ! xsd:dayTimeDuration  @@  bad::IRI (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: BASE .
ottr:IRI xsd:integer 123 ++ ++ t-pnd:Punned-Class-ObjectProperty ,   :: { ottr:Triple(_:blank, ex:Invalid Space, _:b2) ,  } .
ex:Type [ ?! xsd:double , @@ cross ex: (  ) , @@ bad::IRI  :: { o-rdf:Type(LUB, ?I) ottr:Triple(?hR badPrefix:Invalid Space "unclosed) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
http://invalid :: { ex::doubleColon(?Bji, xsd:Template1) ) } .
:noPrefix [ invalid ] xsd::doubleColon :: { ://noScheme ( 123 ,, ) } .
<unclosedIRI [ NEList<<LUB<xsd:nonNegativeInteger>>>badPrefix:string ?E~: ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
"string" [  xsd:unsignedByte  = "unclosed , ,  ] invalid |  @@ 123  :: ( ottr:Triple(?C, ottr:Template2, _:b1) ) .
o-rdf:Footballer [  ] @ zipMax |  ottr:IRI (  ) :: { <unclosedIRI(?wv/, "2023-01-01"^^xsd:date) ; } (
foot:Invalid Space [ ?! xsd:positiveInteger 123  , ] @@ xsd::doubleColon :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("string", ""(*|`*"") ://noScheme(?., bad::IRI) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: ( 123 ( "G*" ) ) .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { ottr:Triple(?8j_W#I :Template1 ?k) , ottr:Triple(_:blank, ex:, "unclosed) } .
ex::doubleColon [ ?!!  ?O , List<owl:real>invalid List , ,  ] :: { badPrefix:string } .
<unclosedIRI [ ?var ?rHf @ invalid |  :noPrefix ( _:blank ++ ++ invalid term ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid xsd:long "string"   :: { bad::IRI(?>\, _:b2) ) }
o-rdf:Template2 :: {  } ,
ex:Annotation [   xsd:integer , zipMin |  xsd:language  , , ?? xsd:NCName ,  ] { ottr:Triple(_:blank ottr:Type 23.14.15) ( } .
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI none:string ?] , @@ cross |  ex:Triple ( 5+ ^^ xsd::doubleColon , (  ) ) @@ ex::doubleColon  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ 123 ] "unclosed :: {  } .
:noPrefix [  xsd:unsignedShort  , ,   ottr: ?7a4 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space } .
http://invalid :: { o-rdf:Type(invalid, ?') , } .
bad::IRI [ NEList<<LUB<xsd:token>>>:noType 123 ] zipMin |  @@ cross ex: ( ++ ( "string" , "string"^^^xsd:string ,, ) )  ) :: { <unclosedIRI ( _:blank zipMax |  ) } .
?var [  ] { ottr:Triple(?d ex: badPrefix:Type) , ://noScheme(_:blank, LUB) ottr:Triple(?U`/5, ottr:Template2, 23.14.15) ) } .
ottr:IRI [  @@ invalid |  bad::IRI ( _:blank ,, ) , @@ ottr:IRI (  ) |: { ottr:Triple(?} foot:Invalid Space "unclosed) } ..
:Type [ :noType ] { ottr:Triple(ex:Invalid Space <unclosedIRI ?z)  } .
:noPrefix [ invalid |  xsd:dayTimeDuration  , @@ || ottr:IRI ( invalid term ) :: BASE .
"string" [  ] @@ zipMax |  ex: ( ++ ++ _:b2 cross |  ) , @@ http://invalid ( ++ ( ( ?>GQ&] ,, ) ) ) ,, ) :: { 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ++ LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>xsd::doubleColon "string" = "3" ,  LUB 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?d, xsd:Template1, _:b1) } .
ex::doubleColon [ ] :: { (_:blank, invalid) , ://noScheme foot:Triple ^^ xsd:invalidType "[*" } .
?var :: { o-rdf:Type(?{, "invalid"^^) ) } .
o-rdf:Invalid Space [  List<xsd:boolean> ?$ xsd:gYearMonth ?6 ]  :: BASE
ottr:Footballer   ?D  ?? xsd:anyURI 123 = "value"^^invalid  @@ zipMin |  http://example.com/:Template2 ( _:blank ,  ) , _: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?m ex:Annotation "malformed"^^bad:datatype) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ++ xsd:unsignedByte 123 = "unclosed ] :: { http://invalid(?C9, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Invalid Space [ ] :: BASE .
ottr:IRI [ ? List "string" , ?!! ?<FU = 23.14.15 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  :: { 123 } .
foot:Invalid Space [ xsd:invalidType @ bad::IRI  ^^ invalid (  ) ) invalid |  :: { ottr:Triple(_:blank ://noScheme false) } .
ex::doubleColon :: {  } .
:noPrefix none:foaf:name ?cW , @@ cross ex:Template1 ( ?qhL(O* ) :: { ottr:Triple(:noType, o-rdf:Footballer, ?N8_) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
<unclosedIRI [ ?! NEList<<LUB<xsd:NMTOKEN>>> ?|   ] LUB :: { o-rdf:Type(?3, 4+.-8+) , 
ex: invalid term , ""n*"" ,, ?M @@ zipMax |  badPrefix:Template2 ( ++ ( none ) ,, ) , @@ 123 ( _:blank , "$+" ) ; { zipMin |  "string" (  ) } 
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  @@ o-rdf:Invalid Space ( ( ( , ) ) ,, ) ) ^^ invalid ++ ?2 zipMax |  @@  ://noScheme ( <unclosedIRI ) :: { ottr:Triple("string", ex::doubleColon, ?1A) } .
bad::IRI [ List<List<LUB<List<xsd:dayTimeDuration>>>> ?@ ??  = "value"^^invalid , ,  ] :: { "n" }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
 List<xsd:nonPositiveInteger>xsd:invalidType LUB invalid |  @@ zipMin |  http://invalid ( _:blank ) :: { ex:Invalid Space (  ) } .
ex: [ ] :: { o-rdf:Type(?*, List) ) } .
:noPrefix : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
?var [ ++ ++ owl:rational 123 = "unclosed , ] xsd::doubleColon :: { ottr:Triple(_:blank ex:Template1 "2023-01-01"^^xsd:date) , } ,
foot:Annotation [ ?var ?V ,   :noType "string" , , zipMax |  xsd:integer  , @@ cross |  xsd:Footballer ( ++ ++ 1..2 ,, ) ( :: BASE
:noPrefix [ xsd::doubleColon  @@ "string" ( _:blank zipMax |  ) :: { ottr:Triple(123, <unclosedIRI, "unclosed) , o-rdf:Type(_:blank, _:b2) , } .
ex:Template1 [  ] ; { http://invalid(?d%, ) } ...
ottr:IRI [ cross |  rdfs:Datatype ??G , ] "}*" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ NEList<ottr:> ?g3i ] @@ ://noScheme (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ex::doubleColon ( ++ true ) } .
bad::IRI ++ List 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space (  ,, ) ) LUB :: { badPrefix:string } .
?var :: (  ) .
owl:Triple [ ?! xsd:unsignedByte , , ?!! xsd:unsignedShort "string"  , ? xsd:yearMonthDuration ?? owl:ObjectProperty , ,  ] { ottr:Triple(_:blank ex: ?V) , } .
xsd:Annotation [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
o-rdf:Invalid Space :: BASE
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI (  ) ) ^^ badPrefix:string , :: { "string" ( ++ ++ ?g3 ,  ) } .
ex::doubleColon [ ] :: { o-rdf:Type("unclosed, ?pB) ) } .
 [ ?! NEList<<LUB<xsd:normalizedString>>> , ] @@ <unclosedIRI ( ex:Invalid Space ) :: { ottr:Triple(_:blank http://example.com/:Triple ?var) , } .
http://invalid [  ] :: { ottr:Triple(?CQ, bad::IRI, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ xsd:foaf:name ?}T , , LUB ] :noType :: { ://noScheme(?vw, _:b2) } ;
:noPrefix [ (  ) ,  ?! , ? xsd:short 123  ?? "string"  ] {  } .
:Template2   xsd:invalidType  , @@ zipMax |  owl:Footballer ( ++ ottr:Type _:blank ,, ) :: ( xsd::doubleColon ) .
bad::IRI [ ?? List<<xsd:unsignedLong>>xsd::doubleColon ?Sat  ?var ?+ , ] :: BASE
:Type [ ] :: { o-rdf:Type(http://invalid, ?f) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI ++ (  ) ) ,, :: { badPrefix:string } .
ex: [ 123 ] @@ zipMax |  ex::doubleColon (  ) , @@ ://noScheme ( ++ ++ _:b1 zipMin |  ) :: {  } .
ex:Invalid Space [ ++ ottr: "string" , , xsd:yearMonthDuration 123 , ?! xsd:time  :: { ottr:Triple(?#OI :noPrefix "unclosed) } .
<unclosedIRI [  ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { ottr:Triple(_:blank, ex:Template2, "2023-01-01"^^xsd:date) ) }
foot:Invalid Space [   :: { <unclosedIRI(_:blank, 23.14.15) , <unclosedIRI(_:blank, "unclosed)  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: { ottr:IRI ++ ?@i , ?var }
<unclosedIRI [  @@ ://noScheme (  ) , @@ ex: (  ) :: { o-rdf:Type(_:blank, :noType) :noPrefix(_:blank, "2023-01-01"^^xsd:date) } .
badPrefix:Invalid Space [ ] :: BASE .
http://invalid [  ] invalid |  @@ ex:Invalid Space (  ) :: { ottr:Triple( owl:Triple ?m) , ottr:Triple(_:blank, bad::IRI, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [  ] xsd:invalidType :: { "unclosed } .
123   rdf:HTML "string" = "malformed"^^bad:datatype  @@ cross |  "string" (  ) ) :: ( ottr:Triple(_:blank http://example.com/:Template1 "unclosed) , ) .
xsd:Annotation [ xsd:ex: ?60 , NEList<?!! LUB<<List<owl:real>>>invalid> ?" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?rp, 23.14.15) ( } .
ottr:Template2 [  ?m = "value"^^invalid , ,   LUB 123 @@ ://noScheme :: BASE .
ottr:IRI [ ?!! xsd:nonPositiveInteger "string" = "malformed"^^bad:datatype , ] 123 :: { ex::doubleColon(_:blank, 1..2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { ottr:Triple(?[, http://invalid, ?|Q) :noType 
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space :: { o-rdf:Type("unclosed, ) ) } .
:noPrefix LUB<<List<xsd:short>>>xsd::doubleColon List  @@ wrong  ( badPrefix:string ) :: { ottr:Triple(?J :Footballer "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  <unclosedIRI (  ) } ;
"string" [ List<xsd:invalidType> ?w) , "A*" ] @@ foot:Template1 ( ++ (  ) ,  ) ( :: ( ex:(??, _:b1) ) .
ex:Type [ cross |  rdfs:Resource "string" 123 ?G , , ++ xsd:gMonth , ,  ] { ottr:Triple(_:blank, ex:Invalid Space, _:b2) , } .
ottr:IRI [  List<t-pnd:Punned-Class-ObjectProperty> ?WO , , "string" ?S , ] :: BASE .
bad::IRI [  ] :noType +: { cross |  ottr:Type ( ( ?m , none ,, ) cross ) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { o-rdf:Type(http://invalid, ?72) , 123 } .
 :: { ottr:Triple(?\ ex:Invalid Space "unclosed) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, foot:Template2, "D*") ; } .
:noPrefix ++ ++ List<<xsd:unsignedInt>> zipMax |  @@ ex::doubleColon ( ++ ++ (  ) ) xsd:invalidType ) :: {  } .
ex: [ badPrefix:string ] @@ ex::doubleColon  @@ invalid |  ottr:IRI (  ) :: { <unclosedIRI(?z, 23.14.15) ://noScheme(_:blank, "2023-01-01"^^xsd:date) , 
badPrefix:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || :Template1 ( "string"^^^xsd:string ^^ LUB ,, ) :: BASE
xsd:Triple [ zipMin |  xsd:yearMonthDuration  xsd:double xsd::doubleColon , ?!! xsd:nonPositiveInteger 123  , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("|+", :noPrefix) ottr:Triple(_:blank, ex:Invalid Space, ?.) } .
http://invalid [ NEList<ottr:IRI>invalid ?g) , , cross |  xsd:unsignedLong  ] :: BASE .
ottr:IRI [ ?var ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation [  ]  :: { cross 123 ( _:b2 ^^ ottr: ,, ) } .
bad::IRI [ "string" ?GK ++ ++ 123 = (  ) , ? xsd:float , @@  (  ) zipMin |  :: { LUB } .
ex: :: { ottr:Triple(?` badPrefix:Template2 -7+) ; } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI (  ) , @@ invalid |  ex::doubleColon ( _:blank ) :: {  } .
ottr:Footballer [ ] :: BASE
http://example.com/:Triple [ owl:NamedIndividual xsd::doubleColon , ]  ; { bad::IRI(?<, ""?*"") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
?var [  ]  :: {  ++ ++ (  ) } .
o-rdf:Type :: BASE
://noScheme [ "string" ] :: {  } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ <unclosedIRI (  ) :: { ottr:Triple(_:blank, ex:, ?uY) http://invalid(?h, bad::IRI) , } .
ex:Invalid Space [ LUB<xsd:gYearMonth>LUB "K" ] List :: { ottr:Triple(:noType owl:Template1 1..2) ( } .
ex::doubleColon zipMin |  List<xsd:positiveInteger> ?8?| ?!! xsd:negativeInteger ,  @@ invalid |  123 (  ) :: { ottr: } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex:Footballer [ xsd:nonPositiveInteger  , ] zipMax |  @@  ottr:Triple ( "malformed"^^bad:datatype cross |  ) :: { o-rdf:Type(?\N, _:b1) 
ex:Invalid Space :: { http://invalid(_:blank, LUB) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ ] :: { ottr:IRI <unclosedIRI } .
://noScheme [ ? xsd:hexBinary  ] "string" :: { ottr:Triple(_:blank :noPrefix "unclosed) o-rdf:Type(_:blank, ?{) ,  } .
ottr:Template1 [ ! List ?0 cross |  @@ invalid |  bad::IRI ( ++ ++ ( ( , ) , "2023-01-01"^^xsd:date ) ) cross ) :: { ottr:Triple(?X3, foot:Annotation, none) , } .
 [ xsd:dateTime  , , ?! xsd:float 123 = "unclosed , ] @@ ex::doubleColon  , @@ ?var (  ) :: { ex:("unclosed, _:b2) ; } .
ex:Footballer [ xsd:invalidType ] { badPrefix:string } .
:Template2 zipMin |  List<<xsd:time>>xsd::doubleColon "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  xsd:Invalid Space ( _:blank ?Z! ^^  ) ( ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
o-rdf:Triple [ NEList<xsd:gYearMonth "u*"> ?R ] :: { ://noScheme(?_N, -1+.7+) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "-*" :: { :noPrefix } .
o-rdf:Footballer [ ?!! xsd:unsignedShort , ] @@ ottr:IRI ( xsd:invalidType ) @@ ex::doubleColon ++ ++ ?7E zipMin |  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI("string", none) , 
<unclosedIRI [ || List<<xsd:gMonthDay>> 123 , ++ ++ invalid  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr: @@ xsd::doubleColon :: {  ex: ( ( ( _:b2 ,  ) ,, ) ) ) } .
http://invalid :: { ottr:Triple(_:blank badPrefix:Triple ?)) ; } .
ex:Invalid Space [ ] :: BASE
  zipMax |  @@ cross |  123 ( _:blank ,, ) ; { o-rdf:Type(?0, ":") , ottr:Triple(?A, <unclosedIRI, :Type) } .
xsd:Annotation [ ++ xsd:gYear , ,  xsd:nonPositiveInteger ? xsd:gDay  @@ ottr:IRI  , :: ( ex:Invalid Space(_:blank, "unclosed)  ) .
http://example.com/:Template2 [ NEList<<LUB<xsd:negativeInteger>>>xsd::doubleColon ?N ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ?jx ) :: { o-rdf:Type(, ?3) , } .
ottr:IRI [ ] :: { ottr:Triple(_:blank ex::doubleColon 123) , http://invalid(?E, "2023-01-01"^^xsd:date) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ! rdf:XMLLiteral "string" = "value"^^invalid , , NEList<List<wrong List<xsd:integer>>> ?hB , none:foot:clubHistory ?,a ] :: BASE .
<unclosedIRI [ zipMax |  ottr:IRI  , ] @@ xsd:invalidType :: {  } .
ex:  @ zipMin |  ://noScheme ( _:blank ++ ++ ( (  ) ) , ex:Type ) , 123 ,, ) :: { ottr:Triple("G+", o-rdf:Template1, "malformed"^^bad:datatype) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix ++ ( , )  } .
bad::IRI :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
"string" [ LUB ] { ottr:Triple(?=(m, owl:Invalid Space, _:b2) badPrefix:string } .
badPrefix:Annotation [ ? ottr: ?ci: , ]  :: { ottr:Triple(?Q, ottr:Footballer, "invalid"^^://noScheme) ( 
ottr:IRI  @ ://noScheme ++ ++ ?var 1 ,, :: { o-rdf:Type("@*#W*", ?B) ) } .
badPrefix:Annotation :: { ottr:Triple(?6q|kU, bad::IRI, LUB) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  @@ ex::doubleColon ( ?var ) :: BASE .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
:noPrefix [ bad:date ?,5w^ ] invalid :: { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank o-rdf:Invalid Space -5+.abc) } .
ex:Invalid Space [ ] :: { ex:(?I, "invalid"^^<unclosedIRI) , :noPrefix(?0N]a=, _:b2) "string" ( _:blank 2+ ^^ ottr: invalid |  ) } .
:Template2 [ List<> ?C ++ List<<xsd:anyURI>>xsd:invalidType ,   :noType ?YRe , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [ xsd:integer  , ,  owl:real , ,  ] @@ zipMax |  ://noScheme (  ) , @@ cross ottr:IRI (  ) :: BASE
badPrefix:Template1 :: BASE .
"string" [ rdf:HTML ?M_9 , List<?!!  = ( (  ) ,, > ?k , @ ottr:IRI  :: { <unclosedIRI(_:blank, none) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ! List<owl:AnnotationProperty>invalid ] @@ http://invalid (  ) @@ cross |  ex::doubleColon (  ) :: ( o-rdf:Type(?{$, xsd::doubleColon) o-rdf:Type(_:blank, _:b2) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "unclosed } .
 [ ] :: {  ex:Invalid Space ( "invalid"^^:noPrefix ,, ) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] #: { ottr:Triple(bad::IRI, xsd:Type, ?j) ( } ...
?var [  ] 123 :: BASE
ottr:Footballer  @@ ?var  , @@ zipMax |  bad::IRI (  ) :: { ottr:Triple(_:blank bad::IRI "2023-01-01"^^xsd:date) , 
owl:Annotation  :noType "string" ottr: @@ cross :Template2 ( ( (  ) ) ,, ) ^^ LUB ++ 123 ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon  ?,G =  ,  :: { ex:(_:blank, ?C) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://example.com/:Type [ ] :: { ottr:Triple(?Z/, , badPrefix:string) , 
ottr:IRI [  ] :: { "string" _:blank  } .
<unclosedIRI [ ?!! xsd:positiveInteger , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix (  ) @@ cross |  bad::IRI (  ) :: { ottr:Triple(?var foot:Template2 "unclosed) , } .
ex:Invalid Space [ invalid |  List<xsd:normalizedString>xsd:invalidType 123 ? :noType "string" ] http://invalid :: {  } .
123 [ xsd:float 123 ,  ] @@ zipMin |  :noPrefix (  ) , @@ ://noScheme (  ) :: { o-rdf:Type("unclosed, -9+) o-rdf:Type(_:blank, _:b2) ,  } .
:Annotation :: BASE
badPrefix:Footballer [ List ] @@ cross ex:Template1 ( ++ ?rL(- ) ( :: { invalid } ;
ottr:IRI List<?var> ?q} @@ || http://invalid ( ++ ++ (  ,, ) ) wrong ) :: BASE .
badPrefix:Triple [ ] :: { "@*" } .
"string" :: { o-rdf:Type(ex::doubleColon, "2023-01-01"^^xsd:date) ottr:Triple(?1, ex:, ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ owl:Class ?) , ] xsd:invalidType :: { ottr:Triple(_:blank ex:Template2 ?dj) ; } .
ex:Invalid Space [  zipMax |  @@ zipMin |  :noPrefix ( :noType ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?m, 8+.abc) , } .
 [ ! xsd::doubleColon 123 , ?!! xsd:NMTOKEN "string" = "malformed"^^bad:datatype , ,  ] :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ,  } ,
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ 123 ( _:b2 ^^ badPrefix:string ,, ) ( :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Template1 ?? ?/wxH7 = "unclosed "P"  :: { http://example.com/:Footballer  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
badPrefix:Triple [ ?var ] @  123 ( ( "string" ,, ) ^^ xsd::doubleColon ) :: { o-rdf:Type(_:blank, invalid) } .
:noPrefix ; { <unclosedIRI(?GH, "R") , ottr:Triple(invalid xsd:Annotation ?h) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ ++ ?g'/ = (  ) ] ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  @@ ://noScheme ( ottr: ) @@  _:blank ,, :: {  } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ex: ( 23.14.15 ++ ++ ?var 1 ,  ) :: { ottr:Triple(?fJ`S, http://invalid, "unclosed) bad::IRI(?d, _:b1) , } .
"string" [ ] :: BASE
:Invalid Space [ ?? xsd:invalidType 123 123 ?2 , , cross |  xsd:gMonthDay  , ] :: { List 
foot:Template2 [   LUB<<List<rdfs:Literal>>>LUB 123 = "value"^^invalid , ? xsd:normalizedString  ] { zipMin |  http://invalid (  ) } .
ottr:IRI [  || @@ invalid |  ex::doubleColon (  ) :: BASE
?var [ xsd:dateTimeStamp  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ foot:Annotation ?y~ ^^ LUB ,, :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: BASE .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ! xsd:dayTimeDuration 123 = 23.14.15 ,  ] :: { :noPrefix(_:blank, "unclosed) , ottr:Triple(_:blank bad::IRI 23.14.15) , } .
ex: invalid term ,, ?akq @@  :: { o-rdf:Type(?C, ?#) ottr:Triple("|*", o-rdf:Template1, :noType) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 ( "string" ) }
ex:Invalid Space [ ?? "string" = ?m3 , ]  ~: { badPrefix:string } ..
:Invalid Space [ invalid ] @@  ex:Template2 ( ++ ++ ( "invalid"^^bad::IRI , (  ) ) ) ) ) :: { o-rdf:Type(?S, none) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI    ?y , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ://noScheme ( ( ?var 1 ,  ) ) ^^ ottr: ) :: { ottr:Triple(?{QE, ex:Footballer, "z*") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  123 ( ++  ,, ) }
foot:Triple [ ] :: BASE .
 [ ?var ?jS @@ xsd:invalidType :: { ex:(_:blank, 23.14.15) ex:Invalid Space } .
http://invalid [ xsd:unsignedInt xsd::doubleColon , ! List<ottr:IRI>:noType 123 = invalid^^type , ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { ottr:Triple("n+" ex::doubleColon ?1) ) } .
:noPrefix [  ] @@ ex::doubleColon List , @@  bad::IRI (  ) :: {  } (
http://example.com/:Invalid Space [ List<LUB> ?o "D*ZV*" ] :: { o-rdf:Type(?}, false) , ottr:Triple(?A.^ku, xsd:Type, _:b1) , 
ottr:Template2 [ cross xsd:nonNegativeInteger "string" , , ?!! xsd:dateTime  xsd:gYear , ,  cross |  @@ invalid |  owl:Template1 ( ++ ++ (  ) zipMax |  ) :: { ottr:Triple(?a, o-rdf:Annotation, "invalid"^^ex:) , } ...
 http://invalid @@ ottr:IRI ( "2023-01-01"^^xsd:date ^^ xsd::doubleColon ++ ++ ( ?var 1 ) ) zipMin |  ) @@ foot:Annotation badPrefix:string :: { "e*Bv*" } .
"string" [ ? List<<xsd:nonPositiveInteger>>  = ?lw , ] 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ++ ++ owl:rational  xsd:unsignedInt "string" @@ invalid |  ex: ( _:blank ,  ) , @@ zipMax |  bad::IRI (  ) :: BASE
ex:Invalid Space [ ] :: { ottr:Triple(?# http://example.com/:Invalid Space ?6) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { || :noPrefix ( ++ 123 ) } .
://noScheme [  ] :: { o-rdf:Type(_:blank, "unclosed) , ottr:Triple(xsd:invalidType, ex:, ottr:) ex::doubleColon(?2, none) ; } .
?var : { ottr:Triple(?b, xsd:Triple, """"") , } ..
badPrefix:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ List :: {  
:Type [ ++ ?& = (   , List<List<NEList<"unclosed>>> ?V , , 123 ?%P8 wrong @@ cross |  owl:Footballer ( _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(_:blank, ex::doubleColon, "malformed"^^bad:datatype) ) .
"string" [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer [ ? LUB 123 xsd:boolean "string" , ,  ] zipMin |  @@  ex: ( _:blank  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?!! List<xsd:short>:noType , "P+" ] xsd:invalidType :: { ottr:IRI ++ invalid term } .
:noPrefix ++ owl:AnnotationProperty   @@ <unclosedIRI (  ) ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , (_:blank, bad::IRI) , } .
123 [ List<List<List<badPrefix:string>>> ?/ , @@ invalid |  http://invalid ( xsd::doubleColon ) :: { ?var } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(".*!:*" ottr:Annotation ?Dn%) , }
xsd:Template2 :: BASE
http://example.com/:Invalid Space [ ?? "string" = ?G , ! xsd:unsignedShort 123 = "unclosed , , zipMax |  xsd:float ?d , xsd:base64Binary ottr: ,  :: {  
ex::doubleColon xsd:gMonthDay "<" , , ++ ?vd  , LUB<xsd:token>ottr:  List<:noType> ?L9 , @@ foot:Annotation ( ( "string"^^^xsd:string ,  ) ) ^^ xsd:invalidType cross |  ) ; :: BASE .
123 :: { ottr:Triple(?1 :Template2 _:b1) ) }
ottr:IRI [ ? xsd:short ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { o-rdf:Type(, ?+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, :noPrefix, <unclosedIRI) } .
ex:Invalid Space [  ] @@ xsd::doubleColon :: { bad::IRI(?,, http://example.com/:Type) ://noScheme  } .
ex: [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
"string" [ LUB  :: BASE
badPrefix:Footballer [   "string" invalid |  xsd:nonPositiveInteger 123 , ,  @  o-rdf:Triple ( _:blank ,  ) :: ( invalid ) .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { o-rdf:Type(?', "Z+") ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ://noScheme, ?0zW) ) } ,
ottr:IRI [ ?!! xsd:negativeInteger "string"  , @@ :Annotation  @@  123 ( ++ "string"^^^xsd:string , _:blank badPrefix:string ) :: BASE .
 ? NEList<<LUB<xsd:dayTimeDuration>>> ++ ++ xsd:time @@ ex: (  ) ; :: { ottr:Triple("string" bad::IRI _:b2) } .
http://invalid [ ] :: { ex:Invalid Space(ex::doubleColon, _:b1) , } .
?var [ List<xsd::doubleColon> ?y , List ] xsd:invalidType :: { zipMin |  :noPrefix ( ( ( ?c ) ,, ) ) ) } .
o-rdf:Triple [   :noType  , ,  ] { ottr:Triple(?*24, http://example.com/:Template2, true) "," } .
owl:Type :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Footballer [ ottr:Bot ottr: , ] : { ottr:Triple(?l foot:Invalid Space "malformed"^^bad:datatype) ( } 
:noPrefix [ LUB<List> ?Ub  ] @@ 123 :: { ottr:Triple(_:blank ex:Invalid Space ) } .
"string" [ xsd:decimal ://noScheme , ++ NEList<<LUB<rdf:HTML>>>xsd:invalidType , ] { ottr:IRI true ++ ( "string"^^^xsd:string ) } .
foot:Template1 [ "K*x.*" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid   xsd:gYear 123  @@   , @@ bad::IRI (  ) :: { <unclosedIRI(?=, ?9) , o-rdf:Type(_:blank, none)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noType, http://example.com/:Triple, badPrefix:Footballer) ) } .
ex: :: { ex::doubleColon(?P, "unclosed) , } .
?var [ ] :: ( ottr: ) .
:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:Template2 ( "B" ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ++ ++ "string"  , ,  ] invalid : { ottr:Triple(?l owl:Type "2023-01-01"^^xsd:date) , } .
ottr:IRI [ ] :: BASE .
?var [ invalid ] "string" :: ( <unclosedIRI(?e), ?0) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ?! rdfs:Resource 123  ?? owl:AnnotationProperty ,  @  ex::doubleColon (  ) :: { xsd:Invalid Space  } .
bad::IRI :: { ottr:Triple("unclosed  false) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ( ++ ++ ?sY _:blank , "string"^^^xsd:string ^^ badPrefix:string zipMax |  ) :: { o-rdf:Type(_:blank, ex:Invalid Space) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
:noPrefix [ LUB<<List<xsd:anyURI>>>xsd::doubleColon  ] @@ invalid |  http://invalid (  ) , @@ cross |  123 ( ++ (  ) ) ,, ) :: { ottr: 
ottr:Footballer [ 123 ?qp( , ] :: { ottr:Triple(?H?, owl:Template1, "malformed"^^bad:datatype) ottr:Triple(?^ ex:Type "unclosed) , } 
o-rdf:Annotation [    , ,   :noType "string" , , zipMin |  rdfs:Literal  ] { ottr:Triple(_:blank :noPrefix 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(_:blank, none) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI <unclosedIRI @ zipMin |  123 ( "string"^^^xsd:string ^^  cross |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: BASE .
xsd:Invalid Space [ zipMax |  owl:NamedIndividual "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ ex:Invalid Space (  ) :: { "string" } .
http://invalid [ ++ ++ LUB ?U$ xsd:byte 123 , , ?!! xsd:int  :: { ottr:Triple(_:blank ex::doubleColon 23.14.15) (?Gc, ?a) } .
bad::IRI [ ++ NEList<<LUB<xsd:short>>>ottr:  = "value"^^invalid , ] :: { ottr:Triple("e*", owl:Annotation, badPrefix:string) ) } .
ex: @: {  } .
://noScheme [  ] xsd:invalidType :: { ex:(?", _:b2) , ?var _:blank ,, }
bad::IRI   owl:real  @@ invalid |  ?var (  ) , @@ invalid |  ottr:IRI (  ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ; } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { ottr:Triple(?r, ex:Footballer, ?DU) , } .
ottr:IRI [ <unclosedIRI @@ :Invalid Space ( "string" ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { o-rdf:Type("Y+", List) ; } ..
123 zipMin |  xsd:unsignedLong 123 ,  :: { ottr:Triple(_:blank ex::doubleColon "malformed"^^bad:datatype) } .
http://invalid [ ++ ++ NEList<owl:rational>ottr:  ] @@ ex: (  ) @@ ex:Invalid Space  :: { (?t, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ foot:foot:clubHistory ?F9 ] LUB :: {  } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  :noPrefix ( ++ ++ ?&6 invalid |  ) 
o-rdf:Triple :: BASE
foot:Annotation [   xsd:Name , ,  zipMax |  @@ cross |  ottr:Template2 (  ) :: ( o-rdf:Type(_:blank, "unclosed) xsd::doubleColon ) .
ottr:IRI [   ?J  , , ?! :noType "string" , ?var 1 ?q45\ , ] @@ badPrefix:string :: { "{" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Triple :noPrefix @@ ex:Invalid Space ?e ) :: (  ) .
123 [ ?var ?# ! List<xsd:NCName>xsd::doubleColon 123 = "unclosed ] "string" :: { ottr:Triple(_:blank, foot:Template1, ?KL) , } .
 [  @ ex::doubleColon List :: { o-rdf:Type(bad::IRI, ottr:) , } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?I ://noScheme abc) , <unclosedIRI(?A, "malformed"^^bad:datatype) } .
ex: ; { wrong :Invalid Space ( ++ ++ ( _:b1 ,  ) (  ,, ) ) invalid |  ) } ...
badPrefix:Footballer [ ] :: { ottr:Triple(?:, o-rdf:Annotation, false) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Template2 [  xsd:yearMonthDuration ?"V_ ] { ottr:Triple(?=, http://example.com/:Type, "2023-01-01"^^xsd:date) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?! owl:DatatypeProperty ?V = "unclosed , ] :: BASE .
ottr:IRI [ :noType ] @@ cross badPrefix:Triple ( ++ ++ ( , ) zipMax |  ) :: { ottr:Triple(?]4, bad::IRI, ?iB) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex:Invalid Space o-rdf:Annotation none) ) } .
"string" [ wrong List<<xsd:gDay>>  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid (  ) @@ invalid |  <unclosedIRI ( ( ( :Template1 ,  ) ,, ) ) ) :: {  } .
 [ ++ LUB "string" , ,  ] 123 :: { ex::doubleColon(_:blank, xsd::doubleColon) , } .
ex: [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ List<"Q*d.*"> ?? , owl:AnnotationProperty xsd:invalidType ] { o-rdf:Type(?:3, 1..2) "G*" } .
?var ?!! xsd:long 123 = invalid^^type   owl:ObjectProperty ! owl:NamedIndividual , @ http://invalid  |: { ottr:Triple(?l, ex:Invalid Space, "malformed"^^bad:datatype) ,  } ...
ottr:Type :: ( zipMin |  xsd:Template2 ( ?Wr ^^ invalid ++ _:b2 , badPrefix:string ) ) .
?var :: BASE .
bad::IRI [  rdfs:Datatype ?& = 23.14.15 , ] :: { ottr: } .
ottr:IRI [   123 = invalid^^type , zipMin |  NEList<xsd:anyURI>badPrefix:string "string" ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Annotation [  @@ zipMax |   (  ) ; :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ottr:Triple(_:blank, ex:, "unclosed) , } .
:noPrefix [ ] :: { ex:Invalid Space ( ++ "2023-01-01"^^xsd:date ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ "unclosed ] @@ ex:Template1 ( ?t^ :: { ottr:Triple(_:blank badPrefix:Triple none) , http://invalid(_:blank, _:b2) ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <unclosedIRI :: { ://noScheme("string", ?=) 
123 ?!! xsd:base64Binary   , , xsd:decimal List xsd:nonPositiveInteger ?0f , , ++ ++ xsd:unsignedInt , 123 ?g , @@ ottr:Template2 xsd::doubleColon :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ !  = invalid , ?var ] :: BASE
 [  xsd:invalidType ?xw ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ex::doubleColon("]+", ""E"") , ottr:Triple(_:blank, ex:Invalid Space, ://noScheme) , } .
"string" :: BASE .
http://invalid || List<xsd:gMonth>ottr: "string" , ,  zipMax |  @@ xsd:Template2 ++ ++ ( abc.9+ ) _:blank ,, :: {  } .
bad::IRI [   rdfs:Literal 123  , ] @@ :noPrefix ( _:blank ) :: { o-rdf:Type(?M8L, ?j,) ; } .
ex: [ xsd:gYearMonth xsd::doubleColon ]  :: {  <unclosedIRI ( badPrefix:string ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { "=*7T*" } .
123 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:IRI "string" ?m ,  :: { ottr:Triple(?d bad::IRI _:b1) ottr:Triple(_:blank, ex::doubleColon, 23.14.15) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ NEList<LUB> ?. , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
owl:Template2 [ List<<xsd:dateTime>>badPrefix:string "string" , ] "}*^d*" :: { ottr:Triple(_:blank bad::IRI "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?:J, o-rdf:Type, ://noScheme) 
ex:  @@ invalid |  ottr:IRI ( ++ ( ""?*"" ,, ) )  ) :: {  ?var 1 ^^ ottr: } .
ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ invalid ] @@ :noPrefix ( _:blank , ( 0+ , true ) cross |  ) @@ zipMin |  <unclosedIRI ( ++ ++  ,, ) :: {  } .
ex:Invalid Space [ ?!! ?)R = 123  xsd:gYearMonth "string" = "unclosed @@ 123 ( "unclosed ) :: { o-rdf:Type(xsd::doubleColon, ?*h) ) } .
http://example.com/:Footballer [ ! xsd:unsignedShort   , , 123 ?w ] { ://noScheme(_:blank, "malformed"^^bad:datatype)  } .
:Annotation [ ] :: { ottr:Triple(?F%, foot:Invalid Space, none) , :noType } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(_:blank, ?P) ) } .
"string" [ zipMin |  LUB<owl:real>List ?3{8vQ , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template1 [ ++ 123  ] "++" :: { o-rdf:Type(bad::IRI, 123) }
ottr:IRI xsd:int  LUB  :: {  } .
 :: { ex:Invalid Space (  ) } .
ex::doubleColon [ owl:ObjectProperty :noType ,  @ <unclosedIRI ( ex:Footballer , "string"^^^xsd:string ,, ) ^^ xsd::doubleColon ++ ++ "string" :: { ottr:Triple(?j ottr:Invalid Space none) , } .
://noScheme [ ] :: { ottr:Triple(?@, :noPrefix, "unclosed) , ex:(?F, ""unclosed") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ wrong "string" ( invalid ) :: { xsd:invalidType } (
foot:Annotation [  rdfs:Resource , , LUB<badPrefix:string> ?/ , 123 ?z , ] { o-rdf:Type(?a?, "invalid"^^http://invalid) ; } .
ottr:IRI ottr:Bot ?D @ ?var _:blank ,  :: ( <unclosedIRI(?T=, ex:) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?!   ,  ] :: { o-rdf:Type(_:blank, ?xJ7!PC<A) , } .
http://example.com/:Annotation [ ] :: BASE .
bad::IRI [ "unclosed ] @@ ex::doubleColon (  ) , @@  (  ) :: { ottr:Triple(_:blank, http://invalid, _:b1) , zipMin |  ://noScheme (  ) } .
123 [  ?v , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ zipMax |  LUB<<List<xsd:gMonthDay>>>xsd:invalidType "string" xsd:gYearMonth ?var , @@ cross |  :noPrefix (  ) @@ cross http://invalid ( ++ ?var 1 invalid |  ) :: {  } .
ottr:Template2 [ ?? LUB 123 ottr:foot:clubHistory ?*e , ] { ottr:Triple(badPrefix:string badPrefix:Type 1..2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "(*" }
foot:Template1 ; { ottr:Triple(?E owl:Triple 8+) ottr:Triple(?d xsd:Invalid Space "unclosed) ( } ...
ottr:IRI [ ] :: BASE .
badPrefix:Invalid Space :: { ottr:Triple(?\: ex:Invalid Space abc) "string" 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon :: { ("!*#l*", ??) } .
?var [ ?! xsd:gYearMonth ]  :: { o-rdf:Type(_:blank, List) , } .
<unclosedIRI [ ++ ++ List<<xsd:long>>xsd:invalidType  = ?7 , ] :: {  ://noScheme ( ++ ( 3+.-6+ , invalid term ) cross |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: zipMax |  List<xsd:nonPositiveInteger> ?Te ,  @@ http://invalid xsd::doubleColon ) :: BASE
bad::IRI [ badPrefix:string ]  :: { ottr:Triple(?>, foot:Footballer, "malformed"^^bad:datatype) ,  } ;
123 [ xsd:NMTOKEN :noType invalid |  xsd:integer "string" , ,  @@ ex:Invalid Space (  ) :: { ottr:Triple(?"P, ex::doubleColon, 23.14.15) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI ( ++ 123 , "v*" ) } .
badPrefix:Footballer [ List<<xsd:gDay>>xsd::doubleColon :noPrefix List<++ xsd:invalidType ?Cd> ?i ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ xsd:unsignedLong  , @@ 123 ?. ) : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { ottr:Triple(?6 http://invalid ?<}) } .
://noScheme [ ?! "string"  , ,  ] :: { ottr:Triple(_:blank, bad::IRI, none) , o-rdf:Type(_:blank, _:b2) , } .
ex::doubleColon ! owl:Class "string" = "unclosed ,   :: { ex:(:noType, "2023-01-01"^^xsd:date)  } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?A foot:Triple LUB) , } .
 :: { List }
ottr:Template1 [ ottr: ] @ || :Template2 (  ) :: { ottr:Triple(?Nlt,', o-rdf:Type, abc) ( 
foot:Invalid Space [  ] :: BASE .
"string" [ 123 ?rP , ] { o-rdf:Type(_:blank, _:b2) , ottr:Triple(<unclosedIRI, badPrefix:Template2, ?var) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("L+" ex::doubleColon none) ex:(?j{, ?@z) ; } .
bad::IRI [ ?! ?> =  , ,  owl:Class "string"  , invalid |  List<owl:DatatypeProperty>LUB 123 ] ottr: :: {  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMin |  @@  ""q*"" ^^ invalid :: {  } .
ex:Invalid Space [ ] :: { http://invalid(?Z, true) } .
://noScheme :: ( :noPrefix ( ++ ++ ( "string"^^^xsd:string ,, ) ) ,, ) ) .
ex:Annotation [ owl:ObjectProperty badPrefix:string xsd:invalidType  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
xsd:Triple  @@ ottr:IRI  , @@ || ex: (  ) :: { ottr:Triple(?), ://noScheme, 23.14.15) ) 
ottr:IRI [ owl:ObjectProperty "unclosed , , ?? ottr:IRI  = "value"^^invalid , ] @@ xsd::doubleColon :: ( ottr:Triple(_:blank, o-rdf:Invalid Space, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { o-rdf:Type(?zH, ?l) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ ex:  :: { ottr:Triple(ottr: ex:Invalid Space badPrefix:string) , 123 } .
http://example.com/:Triple [ NEList<owl:AnnotationProperty> ?O foot::Template1 ?i ] :noPrefix :: { ex::doubleColon(?%, ""|+"") ( } .
<unclosedIRI :: {  } .
bad::IRI [ ?! invalid 123 ,  ] :: BASE
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme ( ++ ++ ?var 1 zipMin |  ) :: { (?bLmP_, _:b2) } )
foot:Type [  ] @@ zipMax |  123 (  ) , :: { ottr:Annotation _:blank  } ..
badPrefix:Invalid Space [ ++ xsd:invalidType ?J , , ?var ] "unclosed :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI List<List<NEList<List<List<bad::IRI>>>>> ?-6 cross |  xsd:gMonth "string" , @@ :noPrefix :: { o-rdf:Type(ex:Invalid Space, ) ; } .
 [ ++ ++ LUB<<List<owl:DatatypeProperty>>>invalid  = 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
123 [ xsd:date ?MXGN ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { <unclosedIRI(_:blank, _:b2) , ottr:Triple(??[@V ottr:Triple ?m) ottr:Triple(?}t, ://noScheme, _:b1) } .
ex: [ ] :: { List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?+", "invalid"^^ex::doubleColon) , 
"string" [  ] @@ http://example.com/:Type _:blank , ++ o-rdf:Template1 @@ zipMin |  xsd:Footballer ( "string"^^^xsd:string ^^ ottr: ,, ) :: { ex:Template2 (  ) }
:Annotation ?!! xsd:float @@ foot:Invalid Space ( "Q*" ) :: (  ) .
ottr:IRI [ "K"  @@ xsd:Type :noType :: {  
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ || List<xsd:unsignedLong>ottr:   ] 123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: { cross |  ex: ( ++ ++ ?A ) } .
://noScheme [  ] :: { ottr:Triple(_:blank <unclosedIRI ?]#) ottr:Triple(_:blank, ex::doubleColon, _:b2) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Nz, ex:Invalid Space) , } .
http://invalid ?var ?5 , , ? ottr:IRI "string"  ,  @@ badPrefix:string :: { bad::IRI(invalid, none) , xsd::doubleColon }
http://example.com/:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ ex:Invalid Space ( ( ( , ) ) invalid |  ) : { ottr:Triple(?L foot:Annotation owl:Triple) } ...
badPrefix:Footballer [    123 , ] { :noPrefix(?b&, "invalid"^^ex:Invalid Space) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ xsd::doubleColon ?qE , @@ :noPrefix ++ ++ ( none ) ) :: BASE .
?var "string" ,  ?_| ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: {  badPrefix:Triple (  ) 
<unclosedIRI [ ex::doubleColon ] @@ zipMin |   ( ( ( , ) ,, ) ^^ List , _:blank ,, ) , @@ ex: ( _:b1 "string" ) :: {  } .
ex:Invalid Space [ List<xsd:dayTimeDuration> 123 , ,    = "unclosed ,  ] LUB :: { "unclosed } .
bad::IRI [ ] :: { ottr:Triple(badPrefix:string http://invalid "2023-01-01"^^xsd:date) ottr:Triple(?<K, xsd:Footballer, ?u~x) , } .
://noScheme [ ?! owl:AnnotationProperty ?v = invalid^^type ] :: BASE
123 : { ex::doubleColon(?Ph, :noType) , o-rdf:Type(_:blank, -1+) } .
:Template2 [ none:http://invalid ?8C[?aV , ] { ottr:Triple(?#%, owl:Annotation, _:b2) ) } .
ottr:IRI [ ] :: ( ottr:Triple(_:blank http://invalid ?,C) ) .
"string" [ ? xsd:hexBinary ,  ] "@" :: { :noPrefix(?TI'E, 23.14.15) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [ List< List<xsd:dateTimeStamp>LUB 123> ?x ] @@ ||  ( "malformed"^^bad:datatype ) , @@ bad::IRI ( _:blank ,, ) :: BASE .
ex:Invalid Space [ ++ ?+  ottr: ] :: { ottr:Triple(<unclosedIRI, owl:Template1, ?var) ( } .
://noScheme ?? List  , , ?!! owl:DatatypeProperty "string" = "malformed"^^bad:datatype , @@ ex::doubleColon badPrefix:string :: { o-rdf:Type(?/, abc) , } .
ex: :: { cross |  123 ( ?y" ^^  invalid |  ) } .
:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ zipMin |  http://example.com/:Footballer ( ++ ( (  ) , "2023-01-01"^^xsd:date ,, ) ) ++ ++ ( , ) ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?}{, "invalid"^^) "|*" }
badPrefix:Type owl:AnnotationProperty invalid @@ wrong xsd:Annotation ( "unclosed ) @@ cross foot:Invalid Space ( xsd:invalidType ) (: { ex:Invalid Space(?Fh, 1..2) , } ...
ex::doubleColon [ ] :: {  } .
ottr:IRI ?? NEList<xsd:gYearMonth>  = ?SB , xsd:gYear LUB  :: BASE .
http://invalid [ bad:foaf:name ?\ bad::IRI ] @@ 123  @@  ( ++ ++ ( "unclosed ,, ) ) :: { invalid |  :Triple ( ?var ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, o-rdf:Footballer, none) , :noPrefix("unclosed, ?L) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  ex:Invalid Space ( 123 ^^ xsd::doubleColon ( ( , ) ) ) wrong ) :: { xsd:invalidType } .
ex: [  ] List :: { o-rdf:Type(?y, "4+") } )
<unclosedIRI :: ( ottr:Triple(?l0 bad::IRI false) , ) .
"string" [ zipMin |  xsd:anyURI "string" , ] ; { ottr:Triple(?;n?X(W owl:Template2 "")*"") , } ..
foot:Template1  invalid  , , ?! xsd:unsignedInt , @ ex:Invalid Space (  ) :: { ottr:Triple(?N ://noScheme "2023-01-01"^^xsd:date) ( 
?var [ !  123 || @@ ottr:IRI ( ++ ?h ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Invalid Space [ ? xsd:yearMonthDuration "string" = "unclosed , ,  ] ex: :: { ://noScheme(123, "unclosed) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
o-rdf:Template2 [ xsd:invalidType ] @@ bad::IRI (  ) , @@ zipMax |  http://invalid (  ) :: {  _:blank invalid |  } .
<unclosedIRI [ ] :: { :noType } .
:noPrefix [ xsd:boolean ?1, , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?0$, none) } .
"string"  NEList<xsd:unsignedInt>xsd::doubleColon  ?? rdf:HTML , @@ cross |  ex::doubleColon (  ) @@ zipMin |  ex:Invalid Space (  ) :: BASE
badPrefix:Invalid Space : {  } .
xsd:Template1 List<invalid> ?4JHEg , ?! ?A = 23.14.15  :: ( ottr:Triple(_:blank, owl:Triple, ?/N) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(:noPrefix, ?T8) } .
ex: [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:IRI [ ?! LUB<xsd:byte>badPrefix:string  ] "V*" :: { ?var "string"^^^xsd:string } .
ex::doubleColon [ ?? xsd:gYear , ] @@ zipMin |  ex:Invalid Space (  ) @@ http://invalid (  ) :: { ottr:Triple(_:blank, , "malformed"^^bad:datatype) o-rdf:Type(_:blank, _:b2) , } .
://noScheme :: { 123 } .
<unclosedIRI [ ] :: {  } )
"string"  owl:real 123 cross |  @@ invalid |  123 (  ) :: { ottr:Triple(?GP foot:Annotation "unclosed) , 
ex:Footballer [ ?var ?~ , , ! xsd:date ,  ] { ottr:Triple(_:blank ex::doubleColon _:b1) , ottr:Triple(_:blank xsd:Template1 23.14.15) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ; { ottr:Triple(_:blank ottr:Type ?`N) , } 
ottr:IRI [ invalid |  NEList<<LUB<xsd:byte>>>invalid   ] @@ owl:Invalid Space ++ ++ ?var 1 ?l :: BASE .
?var [ none:http://example.com/:Template2 ?b , ] :: { o-rdf:Type(?G, "2023-01-01"^^xsd:date) } .
ex:Invalid Space [ ?! ottr: 123 @  http://invalid (  ) :: { ottr:Triple(:noPrefix, ://noScheme, "V*")  } .
ex::doubleColon [ ] :: {  } .
bad::IRI [ LUB ] 123 :: { <unclosedIRI ( ++ (  ) cross |  ) } ,
"string" ++ xsd:unsignedInt "string" = "value"^^invalid , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 (  ) ( :: ( (_:blank, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, none) ) ) .
o-rdf:Footballer [ ++ ++ xsd:double 123  , , ! owl:Class   :: { ex:Invalid Space(_:blank, _:b2) ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   List 123 , @@ ex:Invalid Space ( ++ ( invalid term ,  ) ) zipMin |  ) @@ invalid |  ?var ( ?v; ^^ xsd:invalidType ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
:Triple :: {  } .
ex::doubleColon [  ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:  } .
http://invalid [ ++ ottr:Bot "string" = "malformed"^^bad:datatype , ?? LUB<<List<rdfs:Datatype>>>badPrefix:string  = "value"^^invalid "=*" ] :: { bad::IRI(_:blank, ?.A) ; } .
<unclosedIRI [ xsd:normalizedString ?, , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ zipMax |  ://noScheme ( _:blank ) :: { o-rdf:Type(, _:b1) } .
123 [ ] :: ( ottr:Triple(?G :noPrefix "[") LUB ) .
xsd:Template1 bad:foot:Footballer ?d @@ owl:Template2 ( xsd::doubleColon ) ; { ottr:Triple(?RxI, ottr:Type, http://example.com/:Invalid Space) , } ...
badPrefix:Template2 [  @@  ottr:IRI (  ) ( :: { ottr:Triple(?~, o-rdf:Annotation, "malformed"^^bad:datatype) , ottr:Triple(_:blank, ex:Invalid Space, none) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex: ( _:blank ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ?? xsd:NCName , @ owl:Type ++ ++ ( 1..2 ,, ) zipMax |  ; { ottr:Triple(123, o-rdf:Annotation, ?OW) } ..
ottr:IRI :: BASE .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, "~") ( } .
<unclosedIRI [ ] :: { bad::IRI(?;, none) , } .
 [ ? xsd:gMonthDay 123 = "value"^^invalid  ] @@ invalid |  ex::doubleColon (  ) @@ ://noScheme  :: {  } .
ex:Invalid Space [ ++ ++ ?wr = invalid , :noPrefix zipMin |  @@  http://invalid ( ++ ( invalid term ) )  ^^ List , :noType ) :: { badPrefix:string } .
?var [ _:b2 ,  ?YC ] xsd::doubleColon :: BASE
http://example.com/:Template1 [ ! xsd:byte , ,  @@ cross |  ex:Invalid Space (  ) , @@ ottr:IRI (  ) :: ( o-rdf:Type(_:blank, 23.14.15) ottr:Triple(_:blank bad::IRI "2023-01-01"^^xsd:date) ,  ) .
foot:Triple [   xsd:invalidType  , ,  xsd:base64Binary 123  ] { ex::doubleColon(_:blank, ottr:) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?? LUB<<List<xsd:unsignedShort>>>LUB , ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@ "string" ( ++ ( ?var 1 ) , ( ?(: ,, ) ) wrong ) , @@ :noPrefix _:blank none ^^ invalid :: { "unclosed } .
bad::IRI [ ] :: {  ex: ( http://invalid ) } .
://noScheme [ List ] :: { ottr:Triple(?9, <unclosedIRI, ?Z) , o-rdf:Type(xsd::doubleColon, false) ottr:Triple(?g o-rdf:Footballer "invalid"^^ex:Invalid Space) } .
123 [ ? owl:Class "string" = "malformed"^^bad:datatype LUB<List<rdfs:Datatype>> ?Q , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE
xsd:Type :: { ottr:Triple(?z6, badPrefix:Template1, ""v*"") ) 
http://example.com/:Template2 [ cross |  xsd:nonNegativeInteger ?D ,  zipMin |  @@ invalid |  ottr:IRI (  ) :: {  } (
ottr:IRI ottr:IRI   @@ ".+" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ! "string"  , ++ ++ NEList<rdf:HTML>invalid , , 123 ] @ http://example.com/:Type ( _:blank ) :: { ottr:Triple(?(d, :noPrefix, invalid) , }
ex:Invalid Space [ invalid |  xsd:int ?b , ] :: { ?var  } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(_:blank, bad::IRI) , ://noScheme(LUB, ?F) ( } .
 [ LUB<xsd:invalidType> ?L ] badPrefix:string :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?g ottr:Annotation "2023-01-01"^^xsd:date) List ) .
http://invalid [ ?! xsd:normalizedString  = 123 , xsd:boolean ?+; , ++ xsd:nonPositiveInteger ?s1 = "value"^^invalid , ] { ex:(?Z, 5+) } .
"string" <: { ottr:Triple(?m$ o-rdf:Footballer 1..2) ; } ...
ottr:IRI [ ] :: { bad::IRI ( ++ ++ "unclosed , ?var ) } .
123 [ ( ( invalid term ,  ) ,, ) ) ?C , ] @ cross |  :Template1 (  ) :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE .
ex::doubleColon [  ] :: { o-rdf:Type(<unclosedIRI, "e+") ottr:Triple(?o?h http://invalid _:b1) , } .
://noScheme [ ++ LUB<<List<ottr:Bot>>>ottr: ] LUB :: { ottr:Triple(_:blank, http://example.com/:Triple, ?VP) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(?W, ""7*L1*"") } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" "string" _:blank ,, , ; { ex:Invalid Space(?m, "invalid"^^bad::IRI) , xsd:invalidType } ...
xsd:Footballer [  xsd:nonNegativeInteger ?u , ! xsd:date  xsd:base64Binary , ,  @@ zipMin |  ex:Template2 (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
foot:Annotation [ ++ ++ xsd::doubleColon  123 ?G , , xsd:short 123 , xsd:byte invalid , , ? xsd:dayTimeDuration ?\@0    ?N`_ = "unclosed ?! xsd:gYearMonth ?*c = invalid^^type ] @@ cross ex:Template1 ( ?y ) :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?var, ?<4) , } .
ex: [ ? "string"  , ] :: { (?-, :noPrefix) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ] :: BASE .
"string" [ ++ xsd:unsignedLong 123   @@ bad::IRI (  ) :: { ottr:Triple("unclosed ex::doubleColon none) , ottr:Triple(_:blank, http://invalid, "malformed"^^bad:datatype)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme ?! NEList<xsd:integer>LUB , none:foot:clubHistory ?K @@ <unclosedIRI ( :noType ) :: { ex:Invalid Space(List, true) ) } .
123 [   owl:rational ?km = invalid^^type , ,  ] xsd:invalidType :: ( ottr:Annotation (  ,  ) ) ^^ xsd::doubleColon _:blank zipMax |  ) .
o-rdf:Template1 :: { "~*" }
foot:Invalid Space [ xsd:NMTOKEN ?T , ] @@ invalid |  http://example.com/:Footballer ( ++ ++ _:b2 , ottr: ) @@ wrong owl:Template2 ( ( , ) ,, ) : { ottr:Triple(?! badPrefix:Type "unclosed) ; } 
http://example.com/:Triple [ 123 ?{ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ottr:IRI ( "unclosed ) :: { ottr:Triple(_:blank, ottr:Invalid Space, "malformed"^^bad:datatype) , } .
://noScheme NEList<> ?6@ , xsd:gDay "string" @@ ex::doubleColon ( invalid term , ?~ ) ) ^^ invalid @@ zipMax |  ?var ( (  ) zipMin |  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: ( wrong ex: ( ++ ++ "unclosed ,, ) ) .
ex:Invalid Space :: { :noPrefix(?$, List) , "string" } .
http://invalid [ xsd:invalidType ] @@ invalid |  bad::IRI ( _:blank ,  ) , @@ cross |  ex::doubleColon ( ++ invalid none ^^ badPrefix:string  ) :: {  } .
owl:Annotation [ ? LUB<xsd:positiveInteger>ottr: 123 = invalid^^type , ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { ottr:Triple(")" ex:Invalid Space ?zD) } ..
badPrefix:Template1 [  ] :: { o-rdf:Type(?v, :Template2) o-rdf:Type(?nX-!|j, _:b2) , } )
o-rdf:Footballer  xsd:language 123 = 23.14.15  rdfs:Resource  , || @@ cross xsd:Type ( "unclosed ) :: BASE
:noPrefix [ LUB<xsd:yearMonthDuration>badPrefix:string  ] { ex:(?var, http://example.com/:Triple)  } .
o-rdf:Type [ "3*0_*" ] http://invalid :: BASE .
ottr:IRI [ 123 ?; , ,  ] @@ cross ex:Template1 ( ?Fm ) :: { o-rdf:Type(_:blank, xsd:invalidType) , ottr:Triple(_:blank, :Invalid Space, 23.14.15) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: { LUB } .
ex:Invalid Space ?! 123 = (   , @ bad::IRI ( ( , ) , ( "unclosed ,, ) ) ) ,, :: { cross ://noScheme ( ++ ?w7kU-Y xsd::doubleColon ) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?K ex::doubleColon ?<) , } .
 [ ++ owl:AnnotationProperty ,   xsd:time  @@ ottr:IRI ( _:blank ,  ) , @@  ex:Template1 (  ) :: BASE
owl:Template2 [ ] :: { bad::IRI(?Sen, "malformed"^^bad:datatype) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
?var [ ottr:foot:clubHistory ?PY ,   NEList<xsd:duration>xsd:invalidType  = 123 , , ++ LUB ?a ] "q*" :: ( ex:Invalid Space 6+.abc _:blank ,, ) .
http://example.com/:Template1 [ :noType ] @@ ottr:IRI (  ) ; :: { ottr:Triple(_:blank, ex::doubleColon, ://noScheme) , o-rdf:Type(_:blank, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?_ badPrefix:Invalid Space ?Q1) } .
<unclosedIRI [ ] :: { "string" } .
bad::IRI NEList<invalid> ?I  @@ cross ex:Template1 ( ?9 ) :: { ex:(ottr:, "unclosed)  } .
:noPrefix :: BASE
123 [ xsd:normalizedString "string" ,  :: { http://invalid(?)0u, -0+) ) 
:Annotation [ xsd:dateTimeStamp "unclosed , invalid |  xsd:dateTime ?- , ,  xsd:NMTOKEN ?! = "unclosed , , ! ?+<s = ( List  @@ cross |  owl:Triple ( ++ ++ (  ) ) , ++ ?8 ) ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
badPrefix:Footballer [ List ] :noPrefix :: { "m" } ...
ex::doubleColon [ ?var ?^ , , List<<xsd:anyURI>> "string" xsd:gYear 123 , ] :: BASE .
ottr:IRI :: { o-rdf:Type(<unclosedIRI, ex:Invalid Space) , ottr:Triple(?h7 ottr:Type ?3J1) ottr:Triple(_:blank, bad::IRI, _:b1) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { invalid |  ex: ( ?L ,, ) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ http://invalid ++ ++ "string"^^^xsd:string :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?!c%V40, "invalid"^^bad::IRI) , } .
ex:Template1 [ ?? xsd:negativeInteger "string" = "value"^^invalid @@ ottr:IRI ( _:blank  ) , @@ zipMin |  "string" (  ) :: { o-rdf:Type(?Q, 1..2) } ;
owl:Triple  @@ zipMax |  :Invalid Space ( ++ ( ""(+"" ) ) , (  ) ^^ xsd:invalidType ottr: ) , :: (  ) .
http://example.com/:Template2 [ ?!! xsd:dateTime   , ?! xsd:unsignedInt , ,  ] { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ( } .
"string" [  ] @@ foot:Footballer (  ) :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   List<owl:Class>badPrefix:string ] :: { ex:(_:blank, ?>) , } .
:noPrefix :: BASE .
 [ ++ ++ xsd:unsignedByte 123  ? owl:ObjectProperty ,  @@ 123 :: { ottr:Triple(bad::IRI, <unclosedIRI, _:b2) "unclosed } .
ex::doubleColon [ ] :: { ://noScheme ( :noType ) } .
http://invalid xsd:invalidType @@ ?var  @@ invalid |  ex:Invalid Space ( invalid term , ++ ++ (  ) 2+.-5+ ^^ xsd::doubleColon ) :: { ottr:Triple(?xza :Annotation List) } .
badPrefix:Invalid Space [ ! ?! = "unclosed , ] "R" :: ( o-rdf:Type(?l, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?3, owl:Triple, xsd:Template1) , 
http://example.com/:Template2 ?? xsd:nonPositiveInteger  = "value"^^invalid , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ ?var  :: { o-rdf:Type(_:blank, 23.14.15) ; } )
ottr:IRI owl:DatatypeProperty ?2 , cross |  @@ http://invalid (  ) ) ^^ ottr: ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ ++ xsd:gMonthDay  = "malformed"^^bad:datatype  ] :: { ex:Invalid Space(_:blank, _:b2) ,  } .
ex::doubleColon [ zipMax |  xsd:byte "string" ] @ <unclosedIRI (  ) :: { ottr:Triple(_:blank, bad::IRI, ?t_) , } ...
ex:Footballer :: { ottr:Triple(?3 owl:Annotation :Triple) o-rdf:Type("d", ex:) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  :noPrefix ( 123 ) } .
?var [ ?!! :noType ?Z , ?! NEList<<LUB<owl:Class>>>LUB ?w0T = ( xsd::doubleColon ,,  , , badPrefix:string ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { "unclosed 
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ badPrefix:Type ?Eq ) :: { (?', "malformed"^^bad:datatype) } (
ottr:Template2 [   xsd:decimal  ] @@  (  ) , @@ http://invalid (  ) :: { o-rdf:Type(?h4, ""R*"v*"") , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [  ] "string" :: { bad::IRI(?i, "unclosed) badPrefix:Triple (  ^^ badPrefix:string  ) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("unclosed, o-rdf:Invalid Space, :noType) , } .
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ owl:DatatypeProperty http://invalid @@ invalid |  :noPrefix ( _:blank , ++ ( ( 23.14.15 ,  ) ) ) ,, ) ( :: { ottr:Triple(_:blank  ?|J) } .
ex: ?!! NEList<xsd:short>xsd::doubleColon ,  :: { o-rdf:Type(?;, _:b2) ,  } .
ex::doubleColon [ ] $: { <unclosedIRI(?(, none) , } 
?var [  ?t , ?? rdfs:Resource "string" = invalid^^type   xsd:normalizedString , ,  ] @@ ottr:Template1  :: BASE
foot:Template2 [  ] @@ || http://example.com/:Footballer ( ?var 1 ) , @@ zipMax |  ex:Annotation ( xsd:invalidType ) :: ( LUB ) .
"string" [ ?var ?t , @@ xsd:Triple 123 ) :: BASE .
http://invalid :: { o-rdf:Type(_:blank, ottr:) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ^: { ottr:Triple(?u6 ex:Invalid Space "malformed"^^bad:datatype) , ottr:Triple(:noPrefix, <unclosedIRI, ?Cai5&|) , } ...
ottr:IRI [ List<List> ?^Ys , invalid |  LUB<xsd:dateTime>LUB ?<nP ] "(+" :: { ex:(?!, "unclosed) xsd:invalidType } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon ( _:blank , ( ( invalid term ) ,  ) ) ^^ badPrefix:string ) @@ cross |  ex:Invalid Space ( _:b1 ,, ) :: { bad::IRI(?F, """*9[*"") ( } .
://noScheme [ ] :: {  } .
:Template2 [ ?!! xsd:NCName , , ++ xsd:unsignedInt  ] :: { cross foot:Type ( ++ ++ 123 _:blank zipMax |  ) }
o-rdf:Annotation [ invalid ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Footballer [ xsd:positiveInteger "U*" ] @@  :: { (?L*, 23.14.15) , 
ottr:IRI [ ?? xsd:negativeInteger ?=*< = 23.14.15 , , "string" ?h , ] @@ ex: ( ( "string"^^^xsd:string ) ) || ) :: { o-rdf:Type(?1, ?Qo)) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Invalid Space [  ] :: BASE .
?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix List<! 123 = _:b2> ?tc @@ List :: { ottr:Triple(_:blank ex::doubleColon 123) , } .
ex:Invalid Space [ LUB ] http://invalid :: { <unclosedIRI("a+", "invalid"^^://noScheme) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ cross |   (  ) :: {  } .
:Triple [ NEList<<LUB<xsd:yearMonthDuration>>> "string" , ++ ++ ottr:  ? xsd:float ?y = invalid^^type , xsd:unsignedShort badPrefix:string invalid |  t-pnd:Punned-Class-ObjectProperty ??p   owl:Class ?! owl:ObjectProperty ?\ = "malformed"^^bad:datatype , ?!! xsd:invalidType 123 , ++ xsd:nonNegativeInteger  ] { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://example.com/:Footballer ++ ++ ?H } .
xsd:Annotation [ ] :: { ottr:Triple(_:blank, <unclosedIRI, "malformed"^^bad:datatype) o-rdf:Type(_:blank, none) , ottr:Triple(_:blank <unclosedIRI "unclosed) ( } ..
ottr:IRI [ ?? xsd:int , ] :: BASE .
"string" :: { http://example.com/:Footballer ( ( -7+.5+ ,, ) ) ) , "c*.~*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ 123 ] List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
ex: [ ] :: { ottr:Triple(?k0m ex::doubleColon ?Z) , <unclosedIRI(LUB, ottr:) bad::IRI } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  (  ) :: {  } .
://noScheme   ?D =  ,  @@ :noPrefix ?Ku!7 ) :: { o-rdf:Type(_:blank, "invalid"^^:noPrefix) } .
?var [ ?!!  123  owl:ObjectProperty , ,  ]  :: { ottr:Triple(??aC, ex:, o-rdf:Type) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { ottr:Triple(?[ xsd:Invalid Space abc) , } .
badPrefix:Annotation [  ?E{S ] @ invalid |  ex:Triple ( ?var 1 ^^ xsd::doubleColon _:blank cross |  ) :: BASE
ex:Footballer [ ex:Invalid Space ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { <unclosedIRI("@", xsd:invalidType) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ://noScheme, ?RH)  } .
?var [ ! xsd:gMonthDay "string"  @@ ex::doubleColon  @@ http://invalid (  ) :: { ottr:Triple(?` owl:Annotation none) } .
bad::IRI [ ] :: { zipMin |  :noPrefix ( ( "2023-01-01"^^xsd:date ,, ) , ?msD ^^ LUB ++ ++ ( ?var 1 ,  ) ) || ) } .
123 ?! t-pnd:Punned-Class-ObjectProperty  = invalid^^type , ,    123  @@   (  ) ( :: { o-rdf:Type(?[, "malformed"^^bad:datatype) ) } ,
badPrefix:Template2 [ ?? xsd:nonPositiveInteger ,  ] @@ cross |  123 (  ) , @@ ex:  :: { ottr:Triple(_:blank http://example.com/:Template1 _:b1) , 
xsd:Type [ List<<xsd:gDay>>invalid ?nw , ] ; { ottr:Triple(?L~a4t o-rdf:Invalid Space "invalid"^^ex::doubleColon) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 [ ? owl:ObjectProperty  ] @@ <unclosedIRI :: { o-rdf:Type(_:blank, _:b1) ottr:Triple(_:blank :Invalid Space "unclosed) , } )
?var [ LUB<xsd:NCName> ?k , , NEList<xsd:integer>LUB  , ] :: { (123, ?gJ) ,  } .
bad::IRI [ xsd::doubleColon @@ ottr:IRI ( ( ( ?!TC ) ) ,, ) ^^ badPrefix:string ) :: BASE .
://noScheme [ ] :: { List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?8, http://invalid, ottr:Template2) ; } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: { ex:(?0, "malformed"^^bad:datatype) 
ex:Invalid Space :: BASE
:noPrefix zipMax |  rdfs:Resource "string" , ?! 123  @@ zipMin |  "string" (  ) , @@ ://noScheme  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
owl:Type [ ?!! xsd:anyURI ,   owl:rational ,   :: (  o-rdf:Footballer ( invalid term cross |  ) ) .
ottr:IRI [ ? rdf:HTML 123 = invalid^^type , ] 123 :: BASE .
?var [ NEList<xsd:float>List ?& ] :: { :noPrefix(_:blank, -4+) , ottr:Triple(?nfp badPrefix:Footballer badPrefix:string) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ "string" ?)F , ,  ] { ottr:Triple(<unclosedIRI, ://noScheme, ?V) , } .
foot:Type [ "unclosed @@ cross ex:Template1 ( ?E ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon xsd:gDay LUB ++ ++ xsd:gMonthDay , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd::doubleColon :: { bad::IRI ( invalid term ,, ) } .
ex: [   "string"  , ] @@ ex:Invalid Space "+*`d*" :: { invalid } .
http://invalid [ ] :: {  } .
http://example.com/:Template2 : { o-rdf:Type(?}, abc.9+) ) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?' xsd:Annotation "invalid"^^http://invalid) ottr:Triple(?<XgHW, ex:Template1, ottr:Invalid Space) ; ) .
:Template2 [ ottr:foot:clubHistory ?o , ] @ bad::IRI ( _:blank ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI List<++ ++ NEList<<LUB<xsd:NMTOKEN>>>:noType> ?UzX1 , invalid |  xsd:decimal   :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ badPrefix:string ] ex: :: { <unclosedIRI ++ ++ (  ) , ++ ( ?fa , invalid term ) ) ""7+"" ^^ ottr: ,, } .
://noScheme [ ] :: {  } .
ex:Invalid Space [  ] :: { (?T>id, ?3'6) o-rdf:Type(_:blank, "E**e*") } .
http://invalid :: { ottr:Triple(?Yl xsd:Triple abc) , ottr:Triple(, ex::doubleColon, false) , 
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  badPrefix:Invalid Space ( _:b1 zipMax |  ) ( :: { :noPrefix(?5, "malformed"^^bad:datatype) , }
ex: [ ?! xsd:duration 123 = "value"^^invalid , ,  @@  (  ) :: { ottr:Triple(?H ex::doubleColon "unclosed) ) } ;
<unclosedIRI  cross |  @@ "string" ++ 123  :: { ottr:Triple(?c  none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Footballer [ bad::noPrefix ?m> , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ex:Invalid Space ] {  bad::IRI ( List ) } .
ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ rdfs:Datatype ?qr , ] ?var :: { o-rdf:Type(_:blank, invalid) ottr:Triple("o+", xsd:Template1, ?w) } .
ex: [ ++ ++   ,  xsd:short ] @@ 123 (  ) , @@ zipMax |  ://noScheme (  ) :: {  } .
o-rdf:Type [ ] :: {  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { ottr:Triple(?l :Triple ""."") , ex:(?&D*, abc) , } 
ex:Annotation [ invalid |  xsd:time "string" ?? xsd:dateTimeStamp  @@ LUB :: { ottr:Triple(?Z foot:Invalid Space "unclosed) ; 
?var [ ] : { ottr:IRI ( "string" "unclosed ) } .
ex:Invalid Space [ 123 ] ://noScheme :: BASE .
o-rdf:Footballer :: { ottr:Triple(_:blank, http://invalid, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ?? xsd:language   , ,  @@ zipMax |  ex::doubleColon (  ) , @@ :noPrefix  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?k, List) , } .
 [ cross |  NEList<<LUB<xsd:decimal>>>ottr: ?Tx2 , ] @@  ex: ( _:blank invalid |  ) :: { xsd::doubleColon } .
"string" [ ++ ++ 123 = invalid^^type ] :: { ottr:Triple(xsd:invalidType ottr:Template2 xsd:Triple) , o-rdf:Type(?^s6, ?z) }
foot:Template1 xsd:Name ?aZ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ex:(?_nW`t, _:b1)  
ex:Type [ ! badPrefix:string ?E  xsd:float , 123 ?Mj , ] { ottr:Triple(_:blank badPrefix:Annotation "malformed"^^bad:datatype) ( } .
ottr:IRI [ ] :: { :noPrefix(?<, "unclosed) , } .
o-rdf:Invalid Space :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] }: { ottr:Triple(_:blank, http://invalid, ?U0C) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ xsd:dateTime ?aW = ex:Invalid Space @ <unclosedIRI "unclosed :: { o-rdf:Type(, "string") } .
 [ ?var ?3 ++ ++ LUB "string" , ] xsd:invalidType :: { ottr:Triple(?% ex:Triple -9+) , ottr: } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ex::doubleColon(?VjP*#, "malformed"^^bad:datatype) ex: (  ) } .
://noScheme [  ] @@ cross |  owl:Template1 ( _:blank ) @@ invalid |  foot:Type ( ++ "2023-01-01"^^xsd:date ++ ++ (  , ( , ) ,, ) ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:Template2 [   xsd:decimal 123 = "malformed"^^bad:datatype , NEList<owl:NamedIndividual>xsd::doubleColon invalid , , "f*" ] :: BASE
badPrefix:Footballer [  rdfs:Literal , @@ ";" :: {  } )
?var [  ] { || ottr:IRI ( ++ ( _:b2 ,  ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template1 [ ] :: BASE .
://noScheme :: { "string" } .
ex:Invalid Space [ ?? owl:Class ? xsd:token ,  @@  (  ) @@ http://invalid  :: { ottr:Triple(_:blank, <unclosedIRI, xsd:Triple) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Y4 o-rdf:Template2 ??) , } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ "w*9H*" ] ex: :: { o-rdf:Type(List, :noType) ( } .
ex::doubleColon zipMin |  List<xsd:nonPositiveInteger>xsd:invalidType ?0c , @@  ?var ( _:blank , "unclosed ^^ invalid ++ ++ ( ?var 1 ,, ) ) ,, ) , @@ cross |  123 (  ) :: (  ) .
foot:Annotation [ "string" ?2 ]  :: { :noPrefix(?/=, "2023-01-01"^^xsd:date) ottr:Triple(?b, http://example.com/:Type, "malformed"^^bad:datatype) , ottr:Triple(?Vr ottr:Invalid Space 6+) ) } ,
123 [ ++ LUB ?x% , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ "W+" :: BASE .
ottr:IRI [ xsd:foaf:name ?{& , , zipMax |  LUB<xsd:int> 123 ] ?var :: { ottr:Triple(:noPrefix http://invalid :noType) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [ ] :: { o-rdf:Type(?J, ?]C) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: :: { ex::doubleColon ( badPrefix:string ) } .
<unclosedIRI [  ] :: {  } .
ex:Invalid Space [  @@ ex:Invalid Space  @@ "string"  :: ( ://noScheme(_:blank, _:b2) ottr:Triple(_:blank, bad::IRI, "unclosed) , ) .
ottr:IRI ?!! xsd:unsignedInt "string" = "value"^^invalid , @@  ottr:IRI (  ) , @@ ottr:IRI  :: { o-rdf:Type(_:blank, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
xsd:Template2 xsd:invalidType  :: { ottr:Triple(?0P}H, :Triple, owl:Footballer) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ "string" ] :: { ottr:Triple(?mn, o-rdf:Template2, ?s*z) , 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ foot:Footballer (  ) :: { o-rdf:Type(_:blank, true) cross ?var ( _:blank "unclosed ) } .
://noScheme [ xsd:unsignedLong  , ] LUB :: BASE .
ex:Invalid Space :: {  } .
 [ ] :: { ottr:Triple(:noType :noPrefix ex:) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid  @@ ottr: :: { bad::IRI(?Uw, none) , <unclosedIRI(?Bx, "2023-01-01"^^xsd:date) , } ;
123 [ invalid |  List<LUB<<List<xsd:gYear>>>invalid> ?cXA@ ] @@ http://example.com/:Annotation ++ ++ "unclosed ( :: BASE
ottr:Template1 [ ++ ++ ?<  , ++  123 , , ?!! xsd:duration "string" = "value"^^invalid xsd:unsignedShort "/+" ] @ cross |  owl:Triple ( ++ ( (  ) ) ) ,, ) :: { xsd::doubleColon }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: {  } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:Footballer [  @@ || ottr:IRI ( ++ ( "string"^^^xsd:string ,, ) ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ://noScheme ] xsd::doubleColon :: { ottr:Triple(_:blank, <unclosedIRI, ?Fd) , ottr:Triple("string" ottr:Template2 "malformed"^^bad:datatype) , } .
ex::doubleColon ++ ++ 123  , @@ ex: ( _:blank cross |  ) , @@ http://invalid  :: { :noPrefix(?r\, "9*Ev*") ; } .
ex:Invalid Space [ ] :: { o-rdf:Type(?KBf, none) 
123 [ ?! xsd:invalidType ?y , , LUB<<List<xsd:base64Binary>>>badPrefix:string invalid ] { ottr: } .
ex:Type [ ?? xsd:decimal ? xsd:yearMonthDuration ,  ] @@ "string"  @@ bad::IRI  :: { cross foot:Annotation (  ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space [ ottr:foot:clubHistory ?O , ,  ] badPrefix:string :: { "2*" } .
ottr:IRI [ ] :: { (?#, "unclosed) o-rdf:Type(_:blank, ?q9\C) ) 
"string" :: { ottr:Triple(bad::IRI, http://invalid, 123) } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon _:blank cross , @@ ottr:Triple ( "2023-01-01"^^xsd:date ^^ LUB ++ ++ "string"^^^xsd:string , _:b2 ,, ) :: { invalid |  ex: ( ++ ( none , (  ) ,, ) ) ) } .
://noScheme [ cross |  owl:NamedIndividual ?odN , ] :: { ottr:Triple(?g foot:Template1 _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [   List<xsd:time>xsd::doubleColon 123 = invalid^^type ? "string" = 123 @@  :: { <unclosedIRI(?$, invalid) , }
xsd:Annotation [ :noType ] {  } .
o-rdf:Type [ ?! xsd:Name ,  ] @@  "string" (  ) ; ;: { ottr:Triple(?U, bad::IRI, "invalid"^^bad::IRI) ( } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ 123 ?`B ) :: { ex: ++ ++ 123 , ?var } .
ottr:Template2 [ none:foaf:name ?D/  ] ">" :: BASE .
bad::IRI [ ++ List<<xsd:Name>>xsd:invalidType ?qYIlZ| = (   ] :: { ://noScheme(_:blank, true) , }
:noPrefix [ ] :: { ottr:Triple(?5, , ottr:) , } .
ex::doubleColon [ List @@ http://invalid ( _:blank cross |  ) ) :: { o-rdf:Type(ex:Invalid Space, ?-) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: {  } .
<unclosedIRI [ invalid |  rdfs:Literal "string" , ] @ zipMin |  ex:Footballer (  ) :: ( invalid ) .
owl:Template1  @@   :: { ottr:Triple(_:blank ex::doubleColon "malformed"^^bad:datatype) , o-rdf:Type(_:blank, _:b1) o-rdf:Type(_:blank, "unclosed) ( } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation :: { ottr:Triple(http://invalid :Footballer ?8>) o-rdf:Type(_:blank, foot:Invalid Space) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ ++ ++ rdf:HTML , ??  "string" , @@ <unclosedIRI ( "Q*=k*" ) :: { cross |  ottr:IRI ( _:blank "string" ) }
ex::doubleColon [  ] xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid |  @@ ://noScheme ( (  ) ,, ) :: { ottr:Triple(?zw, , badPrefix:string) , bad::IRI(?1-E#g, "malformed"^^bad:datatype) } .
:noPrefix [ List<xsd:byte>invalid ?"`q ottr: ] :: BASE
123 [ ] :: { "unclosed } .
http://invalid    = "2023-01-01"^^xsd:date , , ?!! xsd:normalizedString 123 = invalid^^type @ ottr:Template1  :: ( ex:(?n, _:b2) , ) .
ex:Type [ cross xsd:duration ?{ , ] {  } .
owl:Triple  owl:DatatypeProperty   @@ ://noScheme (  ) :: { ottr:Triple(_:blank, :noPrefix, "malformed"^^bad:datatype)  } .
ottr:IRI [ zipMin |  List<<xsd:gYear>> ?? ] ottr: :: BASE .
123 ": { cross |  ex: ( "_*1k*" ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ?!! xsd:byte 123 = "unclosed , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ( "string"^^^xsd:string ) ) ^^ :noType ,  ( :: { <unclosedIRI(bad::IRI, ?var) } .
ex::doubleColon [ ] :: { xsd:invalidType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?zH o-rdf:Template2 ?CB-Utj) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ invalid |  List<rdf:XMLLiteral> ?6 , LUB ] :: { o-rdf:Type(?R, _:b1) , }
"string" [ xsd:yearMonthDuration "string" ,  :: { ottr:Triple(?s, :Footballer, "invalid"^^ex:) ; 
ottr:Annotation ?! rdfs:Datatype , ,  @@ zipMax |  ottr:IRI (  ) , @@ cross |  ?var (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ NEList<xsd:duration>  ,  xsd:gYearMonth zipMin |  xsd:unsignedByte 123 , ,  ] :: BASE .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  owl:Invalid Space ( ( _:b2 ,, ) ^^ badPrefix:string ) @@  "d" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
http://invalid [ ?? xsd:hexBinary ?u = "malformed"^^bad:datatype ] ?var :: { <unclosedIRI(ottr:, :noType) ,  } .
ex:Invalid Space [ ] :: { o-rdf:Type(?$>, ?KXcU) , } .
bad::IRI [ invalid @@ ://noScheme ?\R ) :: { ottr:Triple(_:blank ex::doubleColon "malformed"^^bad:datatype) } .
ex: :: { ottr:Triple(?N, ex:Template2, _:b1) ottr:Triple(?{Y, http://example.com/:Triple, -0+.abc) ; 
123 [ xsd:byte "`+" , ] { :Template1 (  ) } .
badPrefix:Annotation ++ ottr:IRI ,  @@ zipMax |  :noPrefix (  ) :: { ex:Invalid Space(?*^, none) ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ] :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { ottr:Triple(?03, o-rdf:Footballer, _:b1) , :Annotation ( _:blank ,, ) } .
<unclosedIRI [  xsd:byte ?1 ] :: { ex:(:noType, ?&#) , } .
 [   xsd:hexBinary "string" = invalid^^type ? rdfs:Literal ,  @@ ex:Invalid Space  @@ ://noScheme (  ) :: { o-rdf:Type(_:blank, "string") , } .
bad::IRI [ "Q+" ] xsd:invalidType :: { ottr:Triple(?,d http://invalid none) ex::doubleColon } .
123 [  List<xsd:dayTimeDuration>xsd::doubleColon   , ] @@ ex:Template1 ( ?n :: { :noPrefix(?m, "malformed"^^bad:datatype) }
ottr:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ex:Triple ( (  ) ) cross |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
owl:Template1 ++ xsd:date , ,  @@ ottr:IRI  , @@ zipMax |  ?var (  ) $: { o-rdf:Type(?zR, "2023-01-01"^^xsd:date) ( } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
xsd:Triple [ ? xsd:decimal ?L = "unclosed ] :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: { ottr:Triple(?8T, http://example.com/:Footballer, ?E(t;7) } .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ex: ( ++ (  , ?var 1 ) , ++ ++ (  ) ) ) @@ ex::doubleColon  :: {  ( _:b1 cross |  ) } .
://noScheme [ ?? xsd:unsignedByte , ,  ] zipMax |  @@ http://invalid  :: { ottr:Triple(_:blank :noPrefix _:b2) ,  } .
123 [ ?var ?S zipMin |  NEList<<LUB<xsd:token>>>ottr: "string" , ?var ] xsd::doubleColon :: { <unclosedIRI(ex:Invalid Space, "unclosed) ( } .
ex:Template1 [ owl:Class 123 ,  :: BASE
owl:Annotation [ xsd:integer LUB , ,   owl:rational ?q = ?oU~ , ?! ?Pe = :noType ] { invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ex: ] "}+" ; { ottr:Triple(, ex:Invalid Space, ?hg) http://example.com/:Template1 ( ( invalid , ?" ) ,, ) } ...
ex::doubleColon [ ] :: { ://noScheme(?]YT, ""unclosed") , ?var } .
ottr:IRI [ || List<xsd:anyURI> ?e , ] @@ http://invalid ++ ++ (  ) )  :: BASE .
 ? NEList<rdfs:Datatype>xsd::doubleColon 123 = "string" ,  @@ ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ xsd:gDay invalid ] :: { o-rdf:Type(_:blank, List) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?:x ottr:Invalid Space "invalid"^^<unclosedIRI) , } .
123 :: BASE
bad::IRI [   owl:real  = "malformed"^^bad:datatype , ,   :: { http://invalid(?[R, 23.14.15) , } (
ex:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
<unclosedIRI [ ] :: BASE
ottr:IRI :: { ottr:Triple(?x, ex:, ?var) , ottr:Triple(_:blank http://example.com/:Annotation _:b1) } .
:Type 123 ?h+}C , @@ zipMin |  ://noScheme (  ) @@ "string" (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ! owl:real 123 = "malformed"^^bad:datatype , , xsd:NCName  ++ xsd:dateTimeStamp ,  ] :noPrefix :: { bad::IRI (  ) ) _:blank invalid |  } .
 [ ++ ++ ?a = ( "unclosed  ] @@ zipMax |  ex:Invalid Space ( ++ ( ( , ) , "string" ,, ) , "_*WO*" ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (LUB, ?Ms.3) , } )
badPrefix:Triple [ ottr: @@ cross foot:Footballer ( -8+ ^^ :noType ,, ) ; :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Template1 [ xsd:normalizedString badPrefix:string , ?? xsd:unsignedShort , ,  ] { o-rdf:Type(?4J<, "malformed"^^bad:datatype) ottr:Triple(?g owl:Template2 "2023-01-01"^^xsd:date) , } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ( 23.14.15 , ++ ( ( ?S , ( , ) ) ) ,, ) "string" ) ) :: { ottr:Triple(_:blank ex:Invalid Space "%") } .
ottr:IRI   List<owl:NamedIndividual>invalid  = xsd::doubleColon , @@ zipMin |  ex::doubleColon ( _:blank ) @@ ottr:Footballer ++ ++ "2023-01-01"^^xsd:date  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: BASE .
ex: [ List<ottr:> ?iWP> ?! xsd:anyURI ] ://noScheme :: { badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (??, ?t) zipMax |  bad::IRI (  ) } .
123 [ LUB ] :: { ottr:Triple("unclosed, foot:Annotation, "malformed"^^bad:datatype) ; } .
:noPrefix [ ] :: { o-rdf:Type(?Q8, _:b2) , } .
xsd:Triple [ xsd:normalizedString 123 , ,  ] @@ cross owl:Invalid Space ( "unclosed ^^ List ,, ) _: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
:Type [ bad:date ?)O , ! rdf:HTML , , ++ ++ "string"  , , xsd:nonPositiveInteger "unclosed ,  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ?! ?Zt =  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple("\+" ottr:Template1 LUB) } .
ottr:IRI [ "string" ?'y7l , @@ http://invalid "string" ^^ List , ++ invalid term invalid |  :: BASE .
:Invalid Space [  ] @@ <unclosedIRI ( ++ ++ ( ( none ,, ) ) ) ,, ) ) :: { 123 } .
ex:Invalid Space :: { ottr:Triple(?^, ex::doubleColon, ?{K) , } .
 [ ?!! rdf:HTML 123 = "malformed"^^bad:datatype , , ?? NEList<t-pnd:Punned-Class-ObjectProperty>ottr: ] bad::IRI :: { ex:(_:blank, _:b2)  :noPrefix (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?4|O_j, true) , } .
://noScheme [ ] :: { o-rdf:Type(?H8, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [    ?qYgf , badPrefix:string ] :: {  
badPrefix:Template2 ++ xsd:long "string" = 23.14.15 , ++ ++ xsd:gDay , zipMax |  @@ zipMin |  foot:Annotation ( "unclosed ) |: { ottr:Triple(?ba http://example.com/:Footballer ""5*"") ( } ...
123 :: { o-rdf:Type(?r, _:b2) , http://invalid("h+", ?1_) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  @@ wrong  ( _:blank ) ; :: BASE .
ex:Footballer [ LUB ] { ottr:Triple(_:blank, owl:Annotation, ex::doubleColon) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ?var ?x ?? ottr:IRI ?J@ = invalid^^type ] zipMax |  @@ bad::IRI  :: { ottr:Triple("string" ex:Invalid Space _:b1) , } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid :: { :noType } .
ex: [ ++ ++ xsd:int , , cross |  List<rdf:HTML>ottr: 123 , ] :: {  } .
<unclosedIRI [ ] :: BASE
foot:Triple [ ? xsd:unsignedByte   , ++ xsd:NMTOKEN , ,  ] "unclosed :: { ottr:Template2 ( (  ) ) ^^ List ++ "string"^^^xsd:string ,, ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?/zG, http://example.com/:Type) , } )
badPrefix:Triple [ xsd:byte ?var  @@ http://invalid (  ) :: { bad::IRI(<unclosedIRI, "unclosed) invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: BASE .
ottr:IRI [ NEList<xsd:token>xsd:invalidType "string" , ] "*+" {: { cross |   ( ?var 1 ^^  invalid |  ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?^Y ://noScheme ?G) } .
ex::doubleColon :noType @@ ex:Invalid Space _:blank @@ zipMax |  ex: ( ?cQo ++ ++ ( (  ) ) ,, ) , badPrefix:string ) :: {  } .
123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ! List 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ">") , ottr:Triple(?<, ottr:Footballer, "malformed"^^bad:datatype) , 
:Invalid Space [   xsd:short  = 23.14.15 , , ?? rdfs:Resource ] @@ cross ex:Template1 ( ?m ) :: ( ://noScheme(?-, -1+) , ) .
ex:Template1 123 ?Mp(r' , LUB<xsd:hexBinary> ?$ ,  :: BASE
?var [ ] :: { o-rdf:Type(?x, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI  @@ :Annotation "]" :: { "string" }
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || ex::doubleColon ( _:blank ) :: { ex:(_:blank, "malformed"^^bad:datatype) , } .
:noPrefix :: { ottr:Triple(:noType, xsd:Invalid Space, ?N{) , } .
http://invalid [ ottr:foaf:name ?j!F NEList<> ?g , ] :: { ottr:Triple(?5"H <unclosedIRI _:b2) , zipMin |  ex:Invalid Space (  ) } .
://noScheme [ wrong List<rdf:XMLLiteral>xsd:invalidType "string" , ! ottr: ?so8 ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
123 [ ++ ++ xsd:anyURI   , , xsd::doubleColon ] LUB :: BASE
o-rdf:Template2 xsd:normalizedString 123 , @@ http://example.com/:Triple ( ++ ++ 5+.-8+ , ( ?var 1 , ( ?Y ) ,, ) ) ^^ List ,, ) ; :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 [ ! List<<xsd:time>>LUB  :: { o-rdf:Type(_:blank, 23.14.15) ottr:Triple(_:blank http://invalid none) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { invalid |  <unclosedIRI ( ?var ) } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ?var 1 ^^ badPrefix:string , ( (  ) ) ) @@ bad::IRI ( _:blank zipMax |  ) :: { ottr:Triple(xsd:invalidType, ottr:Type, ex:) ,  } .
ex:Invalid Space [  xsd:string ?p = 23.14.15 , ,  ] ;: { "U*L&*" } ...
:noPrefix [ "string" ?e :noType ] invalid :: ( ex::doubleColon(?), ?2h") ) .
ex:Invalid Space [ ?? ottr: "string" , ] { ottr:Triple(?u, foot:Annotation, 1..2) , } .
badPrefix:Template2 [ zipMin |  ottr:Bot  , ++ 123  , ,  ] @@ "unclosed :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ( _:blank , ?U- ^^ badPrefix:string ++ ++ none ,, ) }
123 [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [ xsd:hexBinary 123  ] :: { o-rdf:Type(?7:, ex::doubleColon) , } .
ottr:IRI :: { invalid } .
:noPrefix [ ++ ++ xsd:normalizedString , ] ?var :: { ottr:Triple("unclosed ex:Invalid Space "malformed"^^bad:datatype) , o-rdf:Type(_:blank, "unclosed) bad::IRI(_:blank, "2023-01-01"^^xsd:date) ; } .
<unclosedIRI [ ? LUB "string" , , zipMax |  List<NEList<<LUB<xsd:gMonth>>>xsd:invalidType> ?o. ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [   xsd:positiveInteger   , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ( List ) :: ( ottr:Triple(?Z, badPrefix:Footballer, ?e) ) .
ex: "q*h;*" @@ invalid |  "string" ( ( ( ( , ) ) ) ,, ) ) ( -: {  } ..
xsd:Triple [ zipMin |  xsd:unsignedInt ?{ , @@ owl:Type ++ _:b1  :: BASE
xsd:Invalid Space [ LUB<badPrefix:string> ?: , ]  :: BASE .
ottr:IRI :: ( o-rdf:Type(?F, "2023-01-01"^^xsd:date) ottr:Triple(?var, :noPrefix, ?_~P) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { ottr:Triple(_:blank ex:Footballer "w") , http://invalid } .
123 [  ] @@ List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme NEList<xsd:time>invalid "string" @@ <unclosedIRI ( ( , ) ^^ ottr: "p*" ) , @@  ++ _:b2 ,, :: { ex::doubleColon(?;, true) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?l, 23.14.15) ( } .
"string" [ xsd:invalidType ] :: { cross ex: ( _:blank ) } ,
badPrefix:Template1 [ ?!! xsd:normalizedString  = "value"^^invalid ! xsd:gYear ,  @@ wrong  ( _:blank  ) :: BASE
ottr:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  http://example.com/:Triple (  ) ; {  } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ wrong xsd:gYear 123  ] LUB :: { ottr:Triple(?var bad::IRI ex::doubleColon) , } .
foot:Triple [  List<<xsd:NMTOKEN>>invalid ?rjA4 = "value"^^invalid  :: { ex:Invalid Space(?N, "2023-01-01"^^xsd:date) } ,
ottr:IRI ! xsd:dateTimeStamp , "p*" @@ "string" ++ ++ "unclosed invalid |  ) :: { o-rdf:Type(_:blank, ?\)) ,  } .
://noScheme [ ?? badPrefix:string "string" , ] @@ <unclosedIRI ( ottr: ) :: { ottr:Triple(?:5, badPrefix:Template2, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  ?uH , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?/, ""{+"") ; } .
 : {  } ..
123 [ ] :: { zipMin |  ex:Footballer ( _:blank , ( invalid term ,  ,, ) ) ) }
bad::IRI ++   , @ zipMax |   (  ) :: { ottr:Triple(_:blank ex: _:b2) ( 
bad::IRI xsd:short "unclosed , , wrong NEList<<LUB<xsd:gYearMonth>>>:noType "string" @@ :noPrefix :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ottr:Triple(_:blank ex:Annotation xsd::doubleColon) ; }
foot:Footballer [ invalid ] ?var :: {  } .
123 [ owl:real ?Uc ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ://noScheme ( List ) , :: { o-rdf:Type(ex:, _:b1) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?`C, , ?JpZ) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: { http://invalid(?XQ, "malformed"^^bad:datatype) , } .
ex:Invalid Space [ ?!! t-pnd:Punned-Class-ObjectProperty  =  , @@ zipMin |  "string" (  ) @@ invalid |  "string" ( 123 ^^ xsd:invalidType ++ ( ( , ) ,  ) ) ) :: ( ex::doubleColon none ,, ) .
o-rdf:Type [ foot::noPrefix ?1B ,  ] :: { "e+" 
http://example.com/:Invalid Space ++ xsd:nonPositiveInteger ,   xsd:unsignedShort  = "unclosed , ! ?8  @@ zipMax |  :Triple (  ) :: BASE
123 [ :noPrefix @@ cross |  ottr:IRI (  ) :: { owl:Template2 _:blank ?var 1 ^^ xsd:invalidType } .
 [  ] @@ ex: ( 123 ,, ) , :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: BASE .
ex::doubleColon [ ] :: { o-rdf:Type(_:blank, ?{*) } .
http://invalid LUB<xsd:dayTimeDuration>ottr: "unclosed ,  xsd:base64Binary , ,  @@ zipMax |  ://noScheme (  ) , @@ ex:Invalid Space (  ) :: { bad::IRI(?J, _:b1) ( } .
?var [ xsd:gYear ?W , ] "string" :: { ottr:Triple(LUB badPrefix:Template1 List) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "," } .
:Footballer [ ++ badPrefix:string  NEList<invalid> ?_L@< ] ; {  } 
ottr:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  @@ zipMin |  http://example.com/:Annotation ( ++ ++ ( ( "2023-01-01"^^xsd:date ) , o-rdf:Triple ,, ) ) , ++ "invalid"^^ex::doubleColon invalid |  ) :: ( ottr:Triple(?~, ex::doubleColon, none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex: :: { o-rdf:Type(_:blank, "n+") ottr:Triple( ex::doubleColon "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
badPrefix:Annotation [  NEList<<LUB<xsd:string>>>ottr: 123 = "malformed"^^bad:datatype , invalid |  t-pnd:Punned-Class-ObjectProperty ?vW @@ "string" (  ) ) ^^ xsd:invalidType  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ xsd:float ?var , ] @@ :noType :: { ex:Invalid Space(?|, ?k0) } .
http://invalid [ xsd::doubleColon ] LUB :: { bad::IRI(?2, owl:Template1) , ottr:Triple(?p, xsd:Template2, "unclosed) , } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || ://noScheme ( ++ "string"^^^xsd:string ,, ) ) :: (  ) .
123 [ zipMin |  List<xsd:nonNegativeInteger> ?4 rdfs:Literal  , ,  ] ; { 123 ( "string" _:blank , ++ ++ "2023-01-01"^^xsd:date ) } ..
foot:Invalid Space [ ?!!  123 ? owl:Class ,  @@ zipMax |  ex: (  ) , @@ ottr:IRI  :: { "8" }
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { 123 } .
ottr:Template2 [   :: { ottr:Triple(?J87, http://invalid, ?u) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE .
"string" [ ? xsd:language , ,  ] @@ cross |  ://noScheme (  ) , @@  (  ) :: { :noPrefix ++ ++ _:b1  } .
<unclosedIRI [ ?var ?a , ] :: { o-rdf:Type(ex::doubleColon, "/+") ; } .
bad::IRI ?? ?i?jE  invalid |  @@ cross ex:Invalid Space ( xsd::doubleColon ) :: { ottr:Triple(_:blank o-rdf:Template1 ""K"") } .
xsd:Type [  List<<xsd:int>>badPrefix:string "string" = "malformed"^^bad:datatype :noType ] { bad::IRI(?xc, "2023-01-01"^^xsd:date) , } .
foot:Annotation [ ] $: { o-rdf:Type(?h, "unclosed) ,  } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?m>, 23.14.15) ) 
<unclosedIRI ! NEList<<LUB<owl:Class>>>ottr: ?j = "string"  @ ottr:IRI ++ 23.14.15 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ xsd:anyURI "string" , , xsd:dateTimeStamp  ,  :: ( ottr:Triple("2*", xsd:Template1, ?rLEw,mFz) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix } .
:Triple [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] :: { ://noScheme(?^(, xsd::doubleColon)  } .
http://invalid :: { ottr:Triple(_:blank ex::doubleColon _:b1) , } .
 [ ?!! xsd:duration 123 = invalid^^type , bad:foaf:name ?{DU ] List :: BASE
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ :noType ; { ex:Invalid Space ( ?XN-? zipMax |  ) } 
?var [ ? "string"  ++ ++ xsd:token ] @@ zipMin |  123 (  ) ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , o-rdf:Type(_:blank, none) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("string", ?n) <unclosedIRI(?:_s{m0N, "malformed"^^bad:datatype) , ottr:Triple(_:blank, ://noScheme, ".*r~*") } (
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
http://invalid :: { xsd::doubleColon } .
?var [  ] :: { ottr:IRI (  ) } .
:noPrefix [ ] :: {  } .
ex: [ xsd:negativeInteger invalid ?! xsd:int @@ zipMax |  ex::doubleColon (  ) ) :: { o-rdf:Type(_:blank, "unclosed) , }
bad::IRI  ?> , zipMin |  @@ ex:Invalid Space  : { ottr:Triple(?} ottr:Type true) , } ...
123 [  ] List :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
owl:Invalid Space ?var ?\ , , ++ ?z = "unclosed , invalid |  xsd:byte  , ?? NEList<xsd:gDay>LUB 123 = ?g , ++ ++ xsd:invalidType "string" @@  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ invalid |  xsd:time ?JT LUB<List<LUB<xsd:token>badPrefix:string>> ?C. , "string" ] { ottr:Triple(?_ ex: "unclosed) , } .
http://invalid ?? xsd:string , zipMax |  @@  ottr:IRI (  ) :: BASE .
badPrefix:Triple [  xsd:short 123 = "malformed"^^bad:datatype , , ?! xsd:gMonth ] @@ ex::doubleColon _:blank ,  , @@ ://noScheme (  ) :: { :noPrefix(, ?V) } .
bad::IRI [  ] "f*" :: { cross |  <unclosedIRI ( ++ ++ invalid term ++ "string" || ) } .
?var [ ] :: {  } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1 :: { ottr:Triple(_:blank, http://example.com/:Annotation, xsd:invalidType) xsd::doubleColon } .
:Template2 [ ! xsd:integer , ,  @@ ottr: ; { o-rdf:Type(?/, _:b1) , ex:(_:blank, 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?8, ""unclosed") ) }
:noPrefix [ ! xsd:invalidType "string" , , LUB<owl:AnnotationProperty>  , ] { http://invalid("unclosed, "2023-01-01"^^xsd:date) ,  ottr:IRI ( LUB ) } .
owl:Annotation xsd:base64Binary ?NE ,   :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?! xsd:nonNegativeInteger ] ?var :: { ottr:Triple(?/h$c~D ex::doubleColon ?1) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noType } .
bad::IRI :: { ottr:Triple(_:blank, xsd:Template1, invalid) o-rdf:Type(?.TP, _:b1) ) } .
ex: [ ] :: {  } .
ex:Invalid Space [ "q" cross |  @@ ://noScheme ( ?var 1 ) : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ "string" ++ ( 123 ,  ) _:blank ,, :: ( :noPrefix(?^, none) , ) .
http://example.com/:Footballer [ invalid |  List<xsd:gYear> ?` ++  =  , wrong ottr:IRI ?A , , ottr:invalid ?; , ? t-pnd:Punned-Class-ObjectProperty ?fBsrV8 = ( badPrefix:string , (  ) ,,  , ] :: BASE
 [  ] @@ ottr:IRI ?W ) :: { ://noScheme(xsd::doubleColon, ?QgyT) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple [ "string" ?J{ ?! xsd:unsignedByte , ,  ] :: { ottr:Triple(?r2], ex:Invalid Space, ""\*&<*"") } 
123 [ ] :: BASE .
:noPrefix """ @@ ex: ( ++ (  ) ) , ++ ++ ?F ,, ) :: { o-rdf:Type(_:blank, ?var) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex::doubleColon ottr:Annotation "invalid"^^<unclosedIRI) , bad::IRI(?S, _:b2) xsd:invalidType } .
http://invalid [ List<List<LUB<List<xsd:long>>>> ?b6~L , NEList<xsd:dayTimeDuration>:noType LUB , ] ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
ex:Footballer :: {  
owl:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { badPrefix:Invalid Space invalid term } .
foot:Template1 [  @@ invalid |  ottr:IRI (  ) @@ ottr:IRI  :: ( o-rdf:Type(?3Um5, 23.14.15) ( ) .
http://example.com/:Template2 [  ] :: BASE .
http://invalid [ ++ ++ owl:AnnotationProperty   :: { ex::doubleColon(_:blank, _:b2) ottr:Triple(_:blank  none) } ;
ottr:IRI [  List ?z , , ?!! LUB<owl:ObjectProperty>xsd:invalidType  = "N*Ht*" , ] @@ ?var ( _:blank ) @@ ://noScheme invalid term , ++ ++ ( (  ) ) ) ,, :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space invalid @@ bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ] :: { o-rdf:Type(?_ga, ) ( } .
<unclosedIRI :: BASE
:noPrefix [ invalid |  xsd:byte "string" ] ottr: :: ( || 123 (  ) ) .
o-rdf:Triple [ ?! owl:DatatypeProperty ,  @ cross |  ex: (  ) :: { ottr:Triple(_:blank, xsd:Invalid Space, "unclosed) , }
ottr:IRI :: { ottr:Triple(_:blank, ex:, -2+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [  ] { ottr:Triple(?f: :Invalid Space ?$) , (badPrefix:string, 123) ) } .
<unclosedIRI [ NEList<xsd:NCName>LUB "?*3H*" ] ex:Invalid Space :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { o-rdf:Type(?{;, ex:Annotation) } .
ex::doubleColon [  invalid ?sb9 , ] :: { bad::IRI(?7W, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
:noPrefix  @@ http://invalid (  ) :: BASE
"string" [ NEList<  rdfs:Datatype 123 = "malformed"^^bad:datatype> ?jR , ?! xsd:byte ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  "unclosed , @@ invalid |  ://noScheme ( _:blank cross |  ) :: {  } ,
ottr:Triple [ ?? xsd:unsignedShort , , zipMin |  xsd:token "string" ++   , ,  ] @  ex: ( _:blank ,, ) :: { cross owl:Type ( ++ ++  , ( ?var 1 ) ^^ :noType ( 1..2 ,, ) ) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "unclosed } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ || LUB<<List<xsd:positiveInteger>>>ottr: "string" , xsd:dateTime xsd:invalidType ] { ottr:Triple(?6~Nz|9e, ://noScheme, ?{p) ex::doubleColon(_:blank, false) ( } .
ottr:IRI :: BASE .
"string" [  ] @@ cross ex:Template1 ( ?- ) :: { o-rdf:Type(123, <unclosedIRI) } .
badPrefix:Triple ! ?`> = (  ) , , ?! ottr:IRI :noType @@ xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: {  } .
http://invalid [ ?var ?u0 , ] badPrefix:string :: { ottr:Triple(?B@cR o-rdf:Template1 1..2) , 
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: ( ex:(?y, "malformed"^^bad:datatype) , ex:Invalid Space ( (  ) ) ) ) .
ottr:Invalid Space [ ? List 123 xsd:gMonthDay  ] :: { o-rdf:Type(?(3, none) , } ;
http://invalid [ ++ xsd:gYearMonth  ] @@ || ottr:IRI ( _:blank ,  ) ]: { (_:blank, "unclosed) ) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ NEList<List<List<List>>> ?f^ , , ?var ] <unclosedIRI :: { o-rdf:Type ( ++ "string"^^^xsd:string zipMin |  ) } .
bad::IRI [ owl:real xsd:invalidType ,  @@ cross |  ://noScheme ( _:blank ) , @@ ex::doubleColon  :: { o-rdf:Type(, "malformed"^^bad:datatype) ,  } .
:noPrefix invalid |  t-pnd:Punned-Class-ObjectProperty "string" ,  @@ 123  :: { ottr:Triple(_:blank, badPrefix:Invalid Space, none) ottr:Triple(_:blank ex:Invalid Space "2023-01-01"^^xsd:date) } .
xsd:Triple [ none:ex:Footballer ?B ] :: { ottr:Triple(?Z, http://example.com/:Annotation, ?smn;H) , 
:Template2 :: { LUB } (
ottr:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?U, foot:Annotation) ; } .
"string" [  xsd:int ,   xsd:byte 123 = "malformed"^^bad:datatype  ] :noType :: { o-rdf:Type(?W<, abc.abc) , } .
ex::doubleColon [ ? ?n?#  , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Triple [ ++ xsd:long  = "unclosed , , http://invalid ] @@ ottr:IRI (  ) @@ ex:Invalid Space  :: BASE
:noPrefix [ ] :: { ://noScheme(_:blank, ?var) , zipMin |  ex: ( none ^^  cross ) } .
<unclosedIRI :: { ottr:Triple("S+" http://example.com/:Type ?|) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?T, , "2023-01-01"^^xsd:date) } .
bad::IRI [ xsd:foot:Template2 ?N @@ LUB :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :Template1 ?ayC ) : { ex::doubleColon(?&2c, true)  } ..
ottr:Invalid Space [ invalid |  LUB<<List<rdf:XMLLiteral>>>xsd:invalidType "string" ]  @@ zipMax |  owl:Annotation ( _:blank ++ ( invalid term ) ) ,, ) :: { xsd::doubleColon }
:Invalid Space [ ?! NEList<<LUB<xsd:dateTime>>>:noType , , ++ ++ owl:rational "string"  ] :: BASE .
?var [ "unclosed ] @@  :noPrefix ( ?e.  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ! xsd:unsignedInt  = "unclosed  ] badPrefix:string :: { ottr:Triple(ex:Invalid Space, ex:, "string") , }
 :: { xsd:invalidType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?2}|l, ?{) ,  } .
bad::IRI xsd:string LUB , ?? xsd:hexBinary , @@ ex::doubleColon (  ) , @@ <unclosedIRI  :: { o-rdf:Type(_:blank, _:b2) ( } .
http://invalid [ ] :: { ottr:Triple(?5 o-rdf:Template1 23.14.15) cross 123 ( _:blank invalid |  ) } ,
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  ottr:Footballer ( ++ ++ invalid term ,, ) :: { o-rdf:Type(?`, _:b1) 
foot:Template2 [  123 = invalid^^type ] { :noPrefix(?xU1, none) ) } .
o-rdf:Footballer [ LUB<xsd:gYearMonth>xsd::doubleColon ?. , ] { ottr:Triple("`*6Z*", :noPrefix, :noType) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, _:b2) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ? xsd:language   , ,  @@ "string" ( ++ ++ (  ) ,, ) , :: {  } .
ex::doubleColon [ zipMin |  xsd:float 123 , ! xsd:string ?/G = 23.14.15 ] @ invalid |  ://noScheme ( ?var 1 _:blank , none ^^ List  ) :: { ex: ++ ( "string" ,, ) ) } .
http://invalid xsd:unsignedByte ex:Invalid Space xsd:invalidType @@ wrong <unclosedIRI (  ) @@ cross |  ?var ( ottr: ) :: { 123 } .
bad::IRI [ ?? xsd:duration , "string" ?_ ] badPrefix:string :: { :noPrefix(_:blank, _:b1) , o-rdf:Type(_:blank, "unclosed)  } .
ex:Type :: { ottr:Triple(?B xsd:Annotation ?*)W) , }
http://example.com/:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex::doubleColon :: { ottr:Triple(ex: <unclosedIRI none) o-rdf:Type(?lt, ?var) ; } .
xsd:Triple [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  ] @@ ottr:IRI  , @@  bad::IRI ( _:blank invalid |  ) :: BASE .
http://invalid [ zipMax |  List<ottr:Bot> ?x , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?| ) :: { ottr:Triple(_:blank, http://example.com/:Type, ?c) } .
ex:Invalid Space [ List<<xsd:boolean>>LUB 123 , ?!! rdfs:Datatype ?\ = "malformed"^^bad:datatype ! ottr:  ] :noType :: { "}*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?!:%, "invalid"^^:noPrefix) , (?R_p#^, ""unclosed") , } .
"string" [ xsd:invalidType ] :: (  ) .
owl:Annotation  xsd:negativeInteger , @@ cross |  ottr:Footballer ( "string"^^^xsd:string ^^ invalid ) ; { badPrefix:Template1 ( "unclosed ,, ) } ...
foot:Template2 [ ? rdfs:Resource "string"  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ?!! xsd:unsignedInt "string"  rdf:XMLLiteral ?C , , LUB<xsd:positiveInteger>:noType "U+" ] :: { ottr:Triple(?[3@g, bad::IRI, ?,) , } (
ottr:IRI [ ex: ] xsd:invalidType :: { "string" } .
://noScheme [ ] :: { badPrefix:Template1 ( List ) } .
 [   :: { ex:Invalid Space(ottr:, "unclosed) ; } .
:noPrefix invalid |  xsd:string  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ++ 123 , :: {  } .
<unclosedIRI [ ++ ++ xsd:token , ] @@ wrong ex::doubleColon (  ) :: { ottr:Triple(_:blank o-rdf:Invalid Space ) } .
123 ; { o-rdf:Type(?6, "malformed"^^bad:datatype) , ottr:Triple(?> ex:Annotation none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ex: ?! 123  , ,  @@ "n" :: { ottr:Triple(?. foot:Triple _:b2) ) }
?var [ ! NEList<<LUB<xsd:gMonthDay>>>xsd::doubleColon 123 ] @@ :Triple  , @@ <unclosedIRI ( (  ) ) ) :: BASE .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noPrefix :: { cross ottr:IRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : {  } ..
ex::doubleColon [ xsd:int ?$X , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid ?? xsd:unsignedInt ,  @@ invalid |   (  ) :: { ex:Invalid Space(_:blank, "malformed"^^bad:datatype) , } .
bad::IRI [ ] :: { o-rdf:Type(?~, ?J}YE4) , } .
"string" :: { ottr:Triple("7", xsd:Footballer, :noType) }
ex: [ ? xsd:boolean 123 = "string" , ,    @@ List :: ( invalid ) .
foot:Annotation   badPrefix:string ?C , @@ cross |  ex:Type ( ++ http://example.com/:Invalid Space _:blank ,, ) ; :: BASE
 ?!! rdf:XMLLiteral 123 = ?[} , @@ :Template1 ( _:blank ,, ) ) ; { o-rdf:Type(_:blank, xsd:invalidType) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { invalid |  123 ( ( ( abc ,  ) ) ) ^^ invalid ) } .
ex:Invalid Space [    = "string" ] @@ :noPrefix  @@ zipMax |  http://invalid ( ++ invalid term "M*" ) :: BASE .
<unclosedIRI [ ?var ?+ , zipMin |  NEList<t-pnd:Punned-Class-ObjectProperty>ottr: "string"  ] ex::doubleColon :: { ottr:Triple(List, ://noScheme, ??) } .
bad::IRI [ badPrefix:string ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: {  } .
badPrefix:Template2 [  LUB ?ow , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { bad::IRI(?:Wj, _:b2) ottr:Triple(?"r, xsd:Invalid Space, invalid) , ottr:Triple(?S http://example.com/:Type "malformed"^^bad:datatype) , } .
ottr:Triple [ ?! xsd:int wrong @@ cross |  foot:Annotation ( ++ ++ ?mg$  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "!+" }
123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ "string" ?5 , , ++ ++ LUB ?A= xsd:hexBinary 123 , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ex:(_:blank, ?$?D) ,  _:blank  } .
ex:Invalid Space [ ://noScheme @@ ex::doubleColon ( "m*rH*" ) @@ zipMin |  bad::IRI ( ?var 1 ,  ) :: {  } .
<unclosedIRI [ ] :: { o-rdf:Type(?var, xsd:invalidType) ottr:Triple(?h ottr:Annotation -1+.6+) } .
:noPrefix [ NEList<<LUB<owl:NamedIndividual>>>:noType List ]  :: { ottr:Triple(?~Y, http://invalid, abc) ) } .
badPrefix:Footballer [ ?!! "string" =  ,  ] @ cross |  :Type ( ++ ++ ( ?2 ,  ) ) ,, ) :: { ottr: } (
http://example.com/:Template2 ? xsd:boolean "string"   @@ zipMax |  xsd:Triple ( _:blank  ) , @@ ottr:IRI (  ) :: ( ex:(?{, ""w+"") , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] >: { ex:(?\, _:b2) ; } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] 123 :: BASE .
ottr:IRI [ ? LUB<<List<xsd:time>>>LUB "string" = "value"^^invalid ] :: ( ex:Template1 ( ++ ++ _:b2 ) ) .
"string" :: { ottr:Triple(?yS, http://example.com/:Type, "invalid"^^bad::IRI) ) } .
:noPrefix xsd::doubleColon @@ ex: ex::doubleColon @@ cross <unclosedIRI (  ) :: { ottr:Triple(_:blank ://noScheme ?:) , } .
ex:Invalid Space [ ] :: { o-rdf:Type("b", invalid)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
http://invalid [  xsd:dayTimeDuration ++ ++ xsd:integer 123  , ,  @@ ?var  , @@ invalid |  ottr:IRI (  ) :: BASE
foot:Footballer [ ?! List  ,  ]  :: { ex::doubleColon(?>, "2023-01-01"^^xsd:date) , ex::doubleColon(_:blank, "malformed"^^bad:datatype) } ,
o-rdf:Annotation [   ?7 = ?.I , ] @@ zipMin |  xsd:Template2 ( (  ) ^^ ottr: ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ? xsd:NMTOKEN "string" = "unclosed , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Triple ( ++ ++ _:b1 zipMax |  ) } .
123 [ LUB<<List<owl:rational>>>invalid <unclosedIRI ?var ?D , ] "string" :: BASE .
bad::IRI [  ] @@ ex::doubleColon  , @@ zipMin |  :noPrefix (  ) :: { ottr:Triple(?,p, http://example.com/:Invalid Space, "unclosed) ,  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: { ://noScheme(xsd::doubleColon, -7+.1+) , } .
http://invalid [ ] :: { ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank  ?1?]) ( } .
ex: :noType @@ cross |  ex:Invalid Space ( ?j%{; "string"^^^xsd:string ^^ List ) , :: BASE
ex:Template2 [ ++ xsd:yearMonthDuration 123  , ?? xsd:short @@ badPrefix:string <: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
badPrefix:Annotation [ ++ ++  = 23.14.15 ?! LUB ?0 ,  xsd:anyURI 123 , ] { o-rdf:Type(?yE, "malformed"^^bad:datatype) } .
ottr:IRI [ ? xsd:byte ?L/ =  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple [  zipMax |  @@ ex:  :: { (_:blank, ?,) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 :: { "<+" } .
:noPrefix [ ] :: { o-rdf:Type(?V, _:b2) , ottr:Triple("string", ottr:Template1, ottr:) , } .
ex:Invalid Space [ List<ottr:IRI>LUB ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
://noScheme [ badPrefix:string ] xsd::doubleColon :: { ottr:Triple(?y http://invalid 1..2) } ,
bad::IRI ?var ?}uAN2 ,  xsd:token , , xsd:date 123 , @@ cross |  <unclosedIRI ( ++ ++ "2023-01-01"^^xsd:date xsd:invalidType ) ( :: BASE
xsd:Type [ ?!! "string"  ] @@  :: { ottr:Triple(_:blank, ex:Invalid Space, none) badPrefix:Invalid Space (  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template2 [ ] :: { ottr:Triple(_:blank ex:Invalid Space ?,e)  } .
?var [ "string" ] @@ ex:Template1 ( ?cA$M7 :: { cross |  ottr:IRI (  ) }
:noPrefix || xsd:gMonth "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ <unclosedIRI ( invalid term zipMin |  ) :: BASE .
ex: [ ++ ++ xsd:base64Binary 123  ?!! t-pnd:Punned-Class-ObjectProperty ] :: { ottr:Triple(_:blank, :Triple, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ none:date ?9o , @@ http://invalid ++ ( ?m" ) :: { o-rdf:Type(?-, ://noScheme) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } 
 [  ] ")" :: { ex::doubleColon(:noType, 23.14.15) , } (
123 [ List<xsd:normalizedString>xsd::doubleColon 123 , ,  xsd:Name  = "unclosed , ] { ex:(_:blank, _:b2) } .
http://example.com/:Type :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { o-rdf:Type(?ae, badPrefix:string) }
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://example.com/:Footballer (  ) ( :: BASE .
"string" [ ?? List<rdf:XMLLiteral>ottr:   , ] :: { ottr:Triple(_:blank bad::IRI ?;) ex: } .
http://invalid :: {  } .
<unclosedIRI [ cross |  ottr:IRI ?.   xsd:positiveInteger , ,  ] @  ex:Invalid Space (  ) :: { ://noScheme ++ "string"^^^xsd:string  } .
?var [ "1*" ] { ottr:Triple(123, owl:Template2, abc) , (?%, "2023-01-01"^^xsd:date) , } .
:noPrefix [ xsd:byte "string" , bad: ?Cwy ] :noType :: ( o-rdf:Type(?*`h, invalid) ) ) .
ex:Template1 ?! owl:rational , , rdfs:Datatype xsd::doubleColon , @@ zipMin |  <unclosedIRI (  ) @@ zipMax |  ?var (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ xsd:decimal ?S^ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "&*" :: { ottr:Triple(_:blank, ex:, ?a) ) } .
ottr:Annotation [ ++ ++ xsd:normalizedString ,  ] :: ( :noPrefix(_:blank, none) ottr:Triple(_:blank <unclosedIRI "malformed"^^bad:datatype) ) .
123 :: { http://invalid "string"^^^xsd:string ^^ xsd:invalidType } .
 ex:Invalid Space invalid |  @@ zipMin |  bad::IRI (  ) :: { o-rdf:Type(_:blank, 23.14.15) , ex::doubleColon(_:blank, "unclosed) , } .
"string" [ List<<xsd:unsignedLong>>LUB ?e @ ?var ( 123 ) :: { ottr: } .
://noScheme [ ++ "string"  , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple [ ?!! rdfs:Datatype 123  ?! xsd:gYearMonth , ?? ottr:IRI ! invalid  , ,  ] @@ badPrefix:Invalid Space ?J ) :: {  }
owl:Footballer [ ] :: { ottr:Triple(?" xsd:Type badPrefix:string) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Footballer [ List<?var ?Z>o> ?/ , , xsd:base64Binary <unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: { ottr:Triple("(+", http://example.com/:Template2, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI :: { ex: ( _:blank ,, ) }
123 [ cross |  LUB<xsd:float>invalid 123 , LUB ] :: {  } .
ex::doubleColon [ ] :: { (_:blank, ?y8) } .
://noScheme [ ? xsd:long , ] @@ :noType :: { ottr:Triple(?Q http://invalid ottr:) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  @@ || bad::IRI ( false ^^ xsd:invalidType , ++ ( "string"^^^xsd:string , ( 5+ ) ) ,, ) ) @@ :noPrefix ?.  :: BASE
ex:Triple [  xsd:decimal "string" = 23.14.15 ] { "\*n|*" } .
foot:Template1 ?!! badPrefix:string  @@  ://noScheme (  ) , @@ invalid |  ex:Invalid Space (  ) :: { o-rdf:Type(?t_U, "unclosed) ) 
:noPrefix [ zipMax |  xsd:yearMonthDuration "string" , ?? xsd:gYearMonth  @@ "string" (  ) , @@ ottr:IRI  :: { 123 } .
foot:Annotation [ ] :: BASE .
://noScheme :: { ottr:Triple(?R', badPrefix:Type, <unclosedIRI) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ LUB<xsd:language>:noType  , ] :: { ottr:Triple(_:blank ex: _:b2) , cross |  ex::doubleColon ( _:blank zipMin |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("unclosed, ?:)  } .
 [ ++ ++ ?Z  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ wrong bad::IRI ( ++ ( ( , ) ,, ) ) ,, ) :: { http://invalid(?l, http://example.com/:Template2) ; } .
?var ?var ?DC @@ invalid |  ottr:IRI (  ) @@ zipMin |  ottr:Footballer ( _:blank _:blank ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
xsd:Template1 [ ottr: ] { ottr:Triple(?3J, o-rdf:Triple, 23.14.15) , } .
ex:Invalid Space [ ? ottr:Bot 123 = "malformed"^^bad:datatype , xsd:hexBinary  , ] xsd::doubleColon :: { ex::doubleColon(?WLo%<, "2023-01-01"^^xsd:date) ( 
ex:Triple LUB<List<ottr:Bot>> ?W)0T8 , @@ ://noScheme "string" , @@ ?var ( _:blank ,  ) ; { ex:(?e#, ?b) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
 [ "K" ] <unclosedIRI :: { xsd:invalidType } .
:noPrefix [ ++ ++   , ,  @@ wrong ex::doubleColon ( _:blank  ) :: { o-rdf:Type(_:blank, none) o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
bad::IRI :: { ottr:Triple(ottr:, owl:Footballer, badPrefix:string) , ottr:Triple(?C http://invalid 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
123 [ ?var ?d zipMax |  NEList<<LUB<xsd:string>>>:noType ?I ] :: BASE
badPrefix:Template2 [ xsd:double 123 ,   owl:DatatypeProperty "string" = "value"^^invalid , @@  :: { cross |  o-rdf:Invalid Space ( ++ ++ 123 ,, ) } ,
badPrefix:Template2 [ ? badPrefix:string ?e" NEList<<LUB<xsd:anyURI>>>xsd::doubleColon :noType ] :: BASE .
ex::doubleColon :: { ottr:Triple(_:blank ottr:Invalid Space ex:) , } ,
ottr:IRI [ ?!  = bad::IRI ,  ] "E*?a*" :: { ex:Invalid Space(?Q, ?n) ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ LUB @@ <unclosedIRI ?=$A ) :: {  } .
 ! xsd:NCName , @ cross |  :noPrefix (  ) :: { ottr:Triple(ottr:, ://noScheme, "2023-01-01"^^xsd:date) , o-rdf:Type(?:, 23.14.15) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" ++ ++ "string" } .
http://invalid [ ++ xsd:NMTOKEN 123 = "malformed"^^bad:datatype , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ xsd:nonNegativeInteger "string"  ] @@ 123 (  ) , @@ 123 (  ) :: ( bad::IRI(?Z, ex:Triple) ( ) .
o-rdf:Template1 [ ] :: { http://invalid(?297#, ""p+"") ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
"string" [ ] :: { ottr:Triple(http://invalid foot:Template1 false) ?var } .
ex:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ :noType ] @@  bad::IRI ( ++ "invalid"^^:noPrefix zipMin |  ) ) :: { o-rdf:Type(_:blank, "3*Kx*") } .
ex::doubleColon [ ?!! xsd::doubleColon ?h , xsd:time   :: {  ++ ++ ( ( , ) ,, ) ) } .
ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:  @@ <unclosedIRI ?z+&r ) :: ( ottr:Triple(?lY, ://noScheme, ?/) , ) .
123 [ ! xsd:integer "string"   ] { ex::doubleColon(_:blank, "unclosed) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ; } .
http://example.com/:Template2 [ LUB<<List<xsd:nonNegativeInteger>>>List  , ] badPrefix:string ;: { bad::IRI(?f.v, 23.14.15) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @ :noPrefix ++ ++ ( (  ) ) , invalid term ,, ) :: { bad::IRI(_:blank, "malformed"^^bad:datatype) , } .
123 : { http://example.com/:Annotation ( badPrefix:Invalid Space zipMin |  ) } 
://noScheme [ ? LUB<xsd:base64Binary>List "string" = "malformed"^^bad:datatype , , ! badPrefix:string ?+4 , ]  :: BASE .
 [  ] :: { ex:Invalid Space } .
ex::doubleColon [ ?var ?8 ?! xsd:unsignedShort  = 23.14.15 , xsd:yearMonthDuration "unclosed ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?@H] owl:Template1 LUB) o-rdf:Type(xsd::doubleColon, _:b2) , ottr:Triple(_:blank, <unclosedIRI, 23.14.15) ( } .
ex: [ ] :: {  
123 [  @@  ?var (  ) @@ cross |  ottr:IRI (  ) :: { http://invalid(?k, ?$) } ;
foot:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ :noType :: { ottr:Triple(?t, :Triple, ""x+"") , }
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" :: { bad::IRI(?EN, "q*gD*") ( 
badPrefix:Type [  xsd:int 123 = "malformed"^^bad:datatype ,  ] @ ://noScheme ( _:blank ,  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@ ex::doubleColon ?l ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex:Invalid Space ?[) zipMax |  ex: ( http://invalid ) } .
 [ ?!! LUB ?< , , 123 ?@^ , ] List :: { o-rdf:Type(xsd::doubleColon, 1..2) } .
<unclosedIRI :: {  } .
:noPrefix [ ?   ! xsd:token "string"  ] { ottr:Triple(_:blank ex::doubleColon _:b2) , ottr:Triple(_:blank, ex:Invalid Space, "malformed"^^bad:datatype) , } .
:Footballer [   List<xsd:hexBinary>:noType , ] :: ( ottr: ) .
http://example.com/:Invalid Space [ ] :: { ottr:Triple(?", xsd:Annotation, ""u"") ) } ,
123 NEList<<LUB<ottr:IRI>>>LUB ?s , @@ owl:Invalid Space ( "string" ^^ ottr: http://invalid ) @@ ottr:IRI ++ ++ ( ( ?var 1 ,  ) ) ) zipMin |  :: { o-rdf:Type(_:blank, xsd:invalidType) , ?var } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?nf>, :noPrefix, ?z#jD}/L) } .
<unclosedIRI [ ? 123 = "value"^^invalid , "R+" @@ cross ://noScheme (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  xsd:hexBinary  , ,  ] badPrefix:string :: { ottr:Triple( :Annotation 1..2) , } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  "string" ( true ) ( :: { ex:(?U, ""c"") , } .
bad::IRI [ ] :: { ex:Invalid Space(?FE, 8+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Type [ NEList<List<"invalid"^^ ,,>> ?x^ ! xsd:normalizedString ?vpA = "malformed"^^bad:datatype ] { cross |  foot:Triple ( _:blank , ++ "2023-01-01"^^xsd:date ,, ) } .
o-rdf:Template1 [ ?!! xsd:int ?J   xsd:negativeInteger ] :: {  }
ottr:Template2 :: ( ottr:Triple(?o badPrefix:Footballer "malformed"^^bad:datatype) ; ) .
123 [  @@ ex: (  ) ; :: BASE .
ottr:IRI ++ xsd:dayTimeDuration @@ invalid |  :noPrefix ( "string"^^^xsd:string ^^ xsd::doubleColon ""!+"" , _:blank  ) @@ http://example.com/:Invalid Space ++ ++ ( "string" ,, ) ) ,, :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { "unclosed } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: { o-rdf:Type(List, _:b1) bad::IRI(?P(<, ?M) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex::doubleColon, ://noScheme) ) } .
<unclosedIRI [ LUB ] :: { ottr:Triple(?/2 ex:Annotation none) } .
?var [ ] :: {  
ex:Invalid Space [ zipMax |  NEList<xsd:negativeInteger>invalid ?U5 , "string" ?vB ?  = 23.14.15 , ]  :: { zipMin |  ex: (  ) } (
:Triple [ xsd:unsignedByte badPrefix:string , , ! :noType 123 , , ?? xsd:unsignedInt ?~ = invalid^^type ] @ cross |  owl:Footballer ( ++ ( "unclosed ) ) :: BASE
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ xsd:Annotation ( ++ -7+.9+ cross |  ) ; :: ( o-rdf:Type(?k, abc) ) .
ottr:IRI ?! xsd:unsignedByte , @@ cross bad::IRI (  ) :: { ottr:Triple(_:blank :noPrefix _:b1)  } .
://noScheme :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ! NEList<<LUB<xsd:gDay>>>badPrefix:string ?V=8(2  ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: {  ex: ( ++ ++ ( "string" ) ) ( , ) ,, ) } .
http://invalid [ "m+" ] <unclosedIRI :: { ottr:Triple(LUB, badPrefix:Template2, "string") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(?bu, ?.) , invalid }
123 [ owl:real 123 , , ++ xsd:nonPositiveInteger  = invalid^^type @@ zipMax |  :Footballer (  ) , @@ ottr:IRI _:blank : { o-rdf:Type(?C, 23.14.15) ( } ...
ottr:Template1 [ invalid |  ottr:Bot  ?!! :noType "string" ? owl:DatatypeProperty ,  ] zipMin |  @@ ottr:IRI  :: BASE
<unclosedIRI [ xsd:base64Binary "Z*Rd*" ] :: { badPrefix:string } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?YI , ,  invalid  , ?var ] :noPrefix :: BASE .
xsd:Template2 [ ] :: { ottr:Triple(:noType badPrefix:Annotation ?J"<) , ex::doubleColon(?Mr{, -1+) } .
"string"  @@ ://noScheme ++ ++ ( (  ) ) , ?h )  @@ ex:Invalid Space ( _:blank ,, ) :: { ottr:Triple(_:blank, , ) , } .
bad::IRI [ ++ xsd:dateTime  ] @ zipMin |  http://invalid ( _:blank  ) :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) o-rdf:Type(_:blank, _:b1) ; } .
ex: :: {  
http://example.com/:Type [ ++ ++ "string" = 23.14.15 , @@ || ex:Template1 ( xsd:invalidType ) :: BASE
:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { zipMax |  ottr:Triple ( ++ ( , ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ xsd:hexBinary ?j , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { "string" } .
ottr:IRI :: { o-rdf:Type(_:blank, 23.14.15) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
owl:Annotation [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ List ] "f*" :: { ottr:Triple(?F_k- xsd:Triple ?V) (xsd::doubleColon, <unclosedIRI) , } .
ex:Invalid Space [   NEList<<LUB<xsd:double>>> "string" = "unclosed , , false ,, ?!"}  ] :: { :noPrefix (  ) } .
http://invalid [  xsd:decimal 123 =  ] @@ invalid :: BASE
bad::IRI [ ?!! xsd:unsignedByte , @@ invalid |  ex: (  ) @@ 123 _:blank  :: { ottr:Triple(?:S0E8, ://noScheme, 1..2) ) } .
ottr:Template2 ottr:http://example.com/:Type ?i ++ ++ ?y = _:b1 @ cross ex:Template1 ( ?C  ) :: ( o-rdf:Type(?Q, ""u+"") ,  ) .
http://invalid [ LUB<List<owl:DatatypeProperty>> ?&5 ,   :: { ex:Invalid Space(?`, 123) ) } .
:Triple ? List<<xsd:boolean>>xsd::doubleColon  = "unclosed , , "S*" @@ bad::IRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?! ?XNc: = 23.14.15 ] @ "string" ( _:blank ) :: BASE .
://noScheme [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?!! LUB "string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ottr: :: { ottr:Triple(_:blank, :noPrefix, none) , } .
ex::doubleColon :: { o-rdf:Type(badPrefix:string, ?$) xsd:invalidType } .
ex: [ ?? rdfs:Resource 123  , ] {  } .
 [ ++ owl:real 123 ?"C , ] :: { ottr:Triple(_:blank <unclosedIRI _:b2) , ?var _:blank ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?6(, xsd:Template2, invalid) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 [  "string" = "value"^^invalid xsd:dateTime ex: , ?? LUB<xsd:long>List ?X  , ] "string" :: { o-rdf:Type(_:blank, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ LUB @@ invalid :: ( ottr:Triple( <unclosedIRI ?5B;) ; ) .
ottr:IRI [   owl:AnnotationProperty , ,  ] @@ ex::doubleColon (  ++ ++ "string"^^^xsd:string zipMin |  ) :: { ||  ( _:blank ,, ) } .
:noPrefix [ ++ ++ rdfs:Resource 123 = "malformed"^^bad:datatype ] :: { ://noScheme(?P, invalid)  } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ http://invalid xsd:invalidType :: { ottr:Triple(?e, foot:Annotation, badPrefix:Template2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { "@*R>*" }
?var [ ++ ottr: ?S , ] { o-rdf:Type(?TGL0!K, 5+.-3+) } .
:Type :: { ex:(?h, _:b2) , } ..
ottr:IRI [ LUB<> ?= , ] http://invalid :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? xsd:NMTOKEN ,  xsd:invalidType "string" , ,  ] invalid |  @@ cross |  ?var (  ) :: { o-rdf:Type(_:blank, invalid) , 
:Footballer [ zipMax |  NEList<<LUB<xsd:nonPositiveInteger>>>List ?*w "I" ] :: {  } .
://noScheme :: { bad::IRI ( ++ ++ ?var 1 ,, ) } .
ex: [ xsd:long   :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { ex:Invalid Space(?amQ\, ?tu) ottr:Triple(LUB badPrefix:Triple "string") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?[Y, :noPrefix, 23.14.15) , :noType ) .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:Template2 _:blank , @@  owl:Template1 ( 123 ^^ invalid wrong ) :: { ex::doubleColon(?+F, "unclosed) , } 
foot:Annotation [ ?? "string"  ,  @@ ottr:IRI (  ) ) :: { ottr:Triple(?b, ex:Invalid Space, "malformed"^^bad:datatype) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 _:blank cross |  } ;
 [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation [ ++ owl:NamedIndividual  = 23.14.15 , ,  ] @@ "unclosed :: { ottr:Triple(_:blank, badPrefix:Template1, ?:) ,  } .
ottr:IRI [   "string"  , ++ ++ xsd:nonNegativeInteger 123  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?"c, "string") , } .
ex:Invalid Space [ ! LUB<xsd:unsignedByte>xsd::doubleColon @@ :noPrefix ( bad::IRI ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { ottr:Triple(ottr: http://invalid _:b2) } .
://noScheme [  ] { badPrefix:string } .
ex::doubleColon  @@ ?var (  ) @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?Y, 23.14.15) ottr:Triple(_:blank, ex::doubleColon, none) , 
o-rdf:Triple [ xsd:decimal ?S , ] LUB :: BASE
ottr:IRI [ ++ ++ xsd:int "string" = "value"^^invalid , @@ 123 :: { o-rdf:Type(List, "unclosed) wrong ?var ( ( ?m , ?var 1 ,, ) ) ) } .
owl:Template2 [ ? NEList<owl:ObjectProperty>:noType ] :: BASE .
ex::doubleColon [  xsd:invalidType 123 , , LUB<xsd:NCName> ?{% , ://noScheme ] @@ ex:Invalid Space (  ) ; :: { "+*" 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { http://invalid(?:xPe@, invalid) , ottr:Triple(_:blank, , ?sZ) , } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" ++ (  ) zipMax |  @@  :noPrefix (  ) :: {  } .
bad::IRI [ ] :: { ottr:Triple(?rI| xsd:Footballer foot:Annotation) }
http://example.com/:Type [  ] "*" :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?d.F badPrefix:Triple "invalid"^^http://invalid) ) } ,
ottr:Invalid Space   xsd:gYear  @@ zipMin |  <unclosedIRI (  ) , @@ invalid |  o-rdf:Template1 (  ) :: BASE
ottr:IRI [ ? xsd:dateTime    @@ ex::doubleColon  , :: { ottr:Triple(_:blank http://invalid _:b2) 
owl:Template1 ++ xsd:byte , LUB<xsd:float>LUB ?7R  :: { ottr:Triple(?{, ex:Annotation, "<*") ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: BASE .
ex: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  ] zipMin |  @@  :noPrefix ( ?var 1 ^^ List , ( ( 1..2 ) ,  ) ) ++ """*SM*"" cross |  ) :: { bad::IRI ( ++ ++ "string" ,, ) } .
"string" [ NEList<wrong xsd:nonPositiveInteger 123> ?1 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { o-rdf:Type(ottr:, ?=K) ,  } .
<unclosedIRI [ ottr:ex:Invalid Space ?x. , ] :: ( ://noScheme(?h, "2023-01-01"^^xsd:date) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?0V`Tr(DO http://example.com/:Template2 _:b1) invalid }
ottr:Footballer [   badPrefix:string ?Z+ , ] @@ xsd:invalidType ?: { ottr:Triple(?^P, xsd:Invalid Space, none) ) } ..
ottr:Type [ ] :: BASE .
ex::doubleColon [  ?>  , ,  ] ex: :: { ?var List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ xsd:invalidType  ?? xsd:anyURI ,  ] { o-rdf:Type(?^m, ?T) http://invalid(_:blank, none) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix 123 @@ bad::IRI ( ++ ++ "string" , ++ "string"^^^xsd:string ) @@ zipMin |  <unclosedIRI ( _:blank ,, ) :: { "unclosed } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ottr:, , invalid) , } .
"string" [ LUB<xsd:base64Binary>:noType badPrefix:string @@ invalid |  ://noScheme (  ) :: BASE
o-rdf:Template2 :: {  } .
ex:Footballer [ xsd:long 123 , ] @@ || xsd:Annotation ( ( 23.14.15 , 8+ ) ) ( ""<*n`*"" ,, ) ^^ xsd::doubleColon zipMax |  ) , @@ cross |  http://example.com/:Invalid Space ( owl:Triple ^^ LUB  ) %: { ottr:Triple(?g foot:Template1 _:b1) , } ..
://noScheme [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
ottr:IRI [  ] "x*#Q*" :: { o-rdf:Type(_:blank, ?u) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ :noPrefix ] @ owl:Template1 ( ++ ++ ( , ) zipMin |  ) :: { ottr:Triple(:noType, bad::IRI, 123) ) } .
 zipMax |  xsd:time 123 , , "string" ?* @@ ex:Invalid Space  :: { ottr:Triple(_:blank ex: "2023-01-01"^^xsd:date) } .
ex::doubleColon :: { <unclosedIRI(?.,, _:b2) xsd:invalidType } .
http://invalid [ ++  ?nE! , @@ ||  ( xsd:Type , (  ) ) ^^ List _:blank ,, ) :: BASE
badPrefix:Template2 [ ! "string" = 23.14.15 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { ottr:Triple(?~bZCM%, http://example.com/:Annotation, _:b1) , } .
:Invalid Space [ xsd:NCName "string" , ?! xsd:decimal  ] @@ ottr:IRI (  ) @@  ://noScheme (  ) :: { wrong foot:Footballer ( ++  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ?!! List<xsd:int>xsd::doubleColon , cross |  List<xsd:duration> ?au , zipMax |  @@  123 ( _:blank ,, ) :: BASE .
ex::doubleColon :: {  } .
:noPrefix [  ] "unclosed :: { ottr:Triple(_:blank, <unclosedIRI, _:b1) , http://invalid(_:blank, none) , }
o-rdf:Type [ xsd:nonPositiveInteger ?R , , ex:Invalid Space ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
 [ ?! owl:DatatypeProperty  = "string" @@ ex: ++ 123 :: { o-rdf:Type(?var, ?.|n-k) , } .
://noScheme [ ] :: { bad::IRI ( ++ ++ ( _:b2 ,, ) ) , LUB ) } ..
"string" [  ] @@ zipMin |  ?var (  ) , @@ invalid |  "string" (  ) :: { ottr:Triple(_:blank ex:Template2 23.14.15)  
:Footballer ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  :: BASE
ottr:IRI [ ] :: { ottr:Triple(ex:Invalid Space ottr:Annotation ?P) ) } .
://noScheme [  xsd:unsignedShort , ,  ] @@ ex: (  ) , @@ cross |  ?var (  ) :: ( :noPrefix(_:blank, "malformed"^^bad:datatype) ) .
foot:Template1   invalid ?z- , @@ bad::IRI "string" @@ zipMin |  http://invalid ( ( (  ) ) ) ^^  ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ badPrefix:string ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?c~y, "@+") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { ottr:Triple("string", <unclosedIRI, false) , } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?Dpr, badPrefix:Type, "unclosed) invalid |  ottr:IRI ( _:blank  ) 
:Template2 [ NEList<List<zipMax |  List<List<<xsd:language>>xsd:invalidType>>> ?J$ ] xsd::doubleColon :: { LUB }
owl:Invalid Space [ ? rdf:HTML ,  @@  http://invalid (  ) ( %: { ottr:Triple(_:blank ex:Footballer _:b1) , } ..
123 :: BASE .
badPrefix:Template1 [ ] :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ! List ?9 , ,   xsd:short ] :: { ottr:Triple(_:blank ex: "2023-01-01"^^xsd:date) , } .
:noPrefix [ ++ 123 =  , zipMax |  LUB<owl:NamedIndividual>invalid "string" , ] "y*T[*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ zipMin |   ( ++ ++ ( none ,  )  ) :: { ex:Invalid Space(, ://noScheme) ; } .
http://invalid [ "string"  :: { ottr:Triple(?a, owl:Template2, ?x!) } .
bad::IRI [  ] @@ bad::IRI ( ottr: ) :: { <unclosedIRI ?s , "string"^^^xsd:string ^^ xsd::doubleColon ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?j#, "malformed"^^bad:datatype) ://noScheme(?^, ""k"") , :noType }
?var [ ? xsd:hexBinary "string"  ?! xsd:integer  ] { ottr:Triple(?8$ :noPrefix 23.14.15) ) } .
ottr:IRI :: BASE .
ex: [ ] :: { ottr:Triple(??} :noPrefix ?var) , } .
"string" [ ++ "string" = none , ,  xsd:anyURI ?u = "malformed"^^bad:datatype   LUB<xsd:unsignedLong>badPrefix:string , invalid ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ bad::IRI ( ++ ++ (  ) ) ++ "string"^^^xsd:string cross ) :: { ottr:Triple(_:blank, xsd:Template1, ?L) ; } .
http://invalid [  ] @@  <unclosedIRI ( _:blank ) , @@ ex:Invalid Space  ^^ xsd::doubleColon , "unclosed :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
123 [ ++ ++  123 , @@ invalid |  ://noScheme (  ) ( :: { o-rdf:Type(List, _:b2) , cross |  ex::doubleColon ( ( 23.14.15 ) ,, ) } .
ex:Annotation [ zipMax |  xsd:yearMonthDuration  ] { ex::doubleColon(_:blank, "malformed"^^bad:datatype) ottr:Triple(_:blank <unclosedIRI _:b1) } .
:Invalid Space [ bad:badPrefix:Footballer ?- , , rdfs:Resource "i*B@*" , , NEList<?! xsd:base64Binary ?$"7< = "value"^^invalid> ?E> ] :noType :: ( ottr:Triple(?z)~1V http://example.com/:Type ""3*"") , ) .
 [ http://invalid ] "unclosed :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation :: { ottr:Triple(List, ex::doubleColon, "string") , } .
?var [ xsd:dateTimeStamp LUB ] { ex:Invalid Space(_:blank, ?Q;) o-rdf:Type(?"B, false) , invalid } .
ottr:IRI [  ] @ ex: ( _:blank ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?h badPrefix:Invalid Space "unclosed) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
bad::IRI [ ] :: BASE
<unclosedIRI NEList<<LUB<xsd:unsignedShort>>>ottr: ?f , wrong @@ cross |  123 ( ++ ++   ) :: { :noPrefix ++ ( _:b1 ) ,, 
http://example.com/:Template1 [  @@ zipMin |  http://invalid (  ) @@ invalid |  "string" (  ) :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ) } ...
 :: { ottr:IRI (  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer NEList<<LUB<xsd:normalizedString>>>List ?E , 123 @ "string" ( ( , ) ,, ) ) :: BASE .
http://invalid [  xsd:duration "string" , ] "$*}a*" :: { o-rdf:Type(?"Xw, ?A!) , } .
ex: [ ] :: { ottr:Triple(_:blank, xsd:Template1, "2023-01-01"^^xsd:date) bad::IRI(:noPrefix, badPrefix:string) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?M ://noScheme _:b2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ owl:NamedIndividual LUB   :: {  } ;
<unclosedIRI [ ++ ++ xsd:token 123 = ottr: ] @@ ex:Template1 ( ?[bOC :: { ://noScheme(?s, -4+.abc) ( }
?var [ 123 ?| , , ?!!  = "malformed"^^bad:datatype ] { (?\, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var  ?T = "string" , @@ ottr:IRI ++ ++ ( 123 ,  ) ) cross |  , @@ zipMax |  http://invalid ( "unclosed ^^ LUB ,, ) :: BASE .
o-rdf:Type [  ] badPrefix:string :: { ottr:Triple(?s1Q ex:Template1 "2023-01-01"^^xsd:date) } .
://noScheme :: BASE
bad::IRI [ ?! xsd:dateTime , ? xsd:positiveInteger  ] :: { ex:Invalid Space(".*\:*", 123) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI } .
:noPrefix [ ] :: {  } .
 [ ! LUB<<List<owl:real>>>xsd:invalidType ?<@ = 23.14.15 , , zipMin |  xsd:float  ] { o-rdf:Type(_:blank, ?eV) , } .
ex::doubleColon [ :noType @@ "string" ( _:blank ) ( :: { ottr:Triple(?>, ex:, _:b2) ) 
xsd:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  @@ invalid |  foot:Template2 (  ) :: { wrong badPrefix:Triple (  ) }
ottr:IRI (  ) ) , "unclosed ?5 @@ zipMin |  ex: ( "string"^^^xsd:string ^^ List ) , @@ ?var ( ++ ++ ( ?-/ ,, ) _:blank cross |  ) :: BASE .
ex:Template2 [ 123 ] : {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ none:xsd:Footballer ?P , @@ ||  ( ++ "2023-01-01"^^xsd:date ,, ) :: { http://invalid "g" } .
ex::doubleColon [  ] <unclosedIRI :: { ottr:Triple(xsd:invalidType ex:Invalid Space :noType) , ottr:Triple(_:blank, badPrefix:Annotation, none) LUB } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: BASE
"string" [ ] :: { o-rdf:Type(?F, ?_) , 
<unclosedIRI [ ?? ottr:Bot "string" = 23.14.15 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ foot:Triple ?I3nw ) :: { bad::IRI(?%, 23.14.15) } ;
<unclosedIRI [ ?! xsd:integer , ,  ] @@ ex::doubleColon  @@ zipMax |  ottr:IRI (  ) :: { o-rdf:Type(?V, _:b2) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?WP. ex:Invalid Space ?b) (, "6*") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Annotation [  @@ <unclosedIRI ( (  ) ,, ) ) :: BASE .
ottr:IRI [ ? "string"  ,  ]  :: { ottr:Triple(_:blank, bad::IRI, 23.14.15) , } 
?var ex:Invalid Space @@ invalid |  ://noScheme ( ++ abc.-9+ ,  ) :: {  } .
:noPrefix :: { o-rdf:Type(123, true) , ex::doubleColon ++ ++ ?@ _:blank cross |  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(??A`, "unclosed) , } .
"string" [ ( "string"^^^xsd:string ) ) ,, ?I:y*51] || owl:rational  ] LUB :: BASE
foot:Template2 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template1 [  LUB<<List<rdfs:Literal>>>ottr: 123 = "malformed"^^bad:datatype , @@ xsd:invalidType :: { xsd::doubleColon }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   xsd:invalidType  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?? xsd:Name , , rdf:HTML 123 , ] @@ bad::IRI  , @@ "string" _:blank !: { ex: ( ++ ++ ( ?var 1 ,  ) ,  ) } .
xsd:Triple [ ] :: { ottr:Triple(?QIWY( ex:Invalid Space ?.) , } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?Uc@ :: {  } .
:noPrefix :: { "M" } .
<unclosedIRI [  @ invalid |  ?var ( ?K ^^ ottr: cross |  ) :: { o-rdf:Type(_:blank, ex::doubleColon) , ottr:Triple(123, foot:Template1, "invalid"^^://noScheme) } .
badPrefix:Invalid Space [  LUB<xsd:time> "string" "string" ?Oj , List ] badPrefix:string :: { :noPrefix(?w, o-rdf:Annotation) ; 
ottr:Footballer [ ++ ++ xsd:short ?io = "value"^^invalid @@ cross http://example.com/:Template2 ( "2023-01-01"^^xsd:date ++ ( 23.14.15 ) ) ,, ) @@ zipMax |  :Type ( "V*" ) :: BASE
://noScheme [ ex:Invalid Space ] ?var :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ cross |  NEList<<LUB<ottr:IRI>>>  , ,   xsd:gYear @@ || 123 ( _:blank invalid |  ) :: { ottr:IRI ( _:blank ,, ) } .
:Invalid Space [ List<xsd:negativeInteger ?GW> ?p , ++ ++ xsd:NCName 123 = invalid^^type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: [  ]  :: { ottr:Triple(_:blank, http://invalid, "unclosed) , bad::IRI(_:blank, _:b1)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("unclosed, :noType) } .
ex::doubleColon [ ] :: { ottr:Triple(?n/Q ex:Annotation ?k) , } .
 :: { invalid } (
:noPrefix foot:decimal ?@0K[?+CcA , @  "string" ( ++ ++ none , "string" ^^ List ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:Footballer  xsd:Name , ++ xsd:byte ,  @@ 123  ; { o-rdf:Type(?&-, "invalid"^^ex:Invalid Space) , } .
ex:Template2 [ ! rdfs:Datatype , ] ?var :: { ottr:Triple(?d2  1..2) , } )
bad::IRI none:foot:clubHistory ?cE ? NEList<rdfs:Literal>invalid "string" = invalid^^type , ,  @@ "string"  , :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?? owl:Class ?\ = ( "unclosed ,,   @@ http://invalid ( :noType ) :: { ottr:Triple(_:blank, :Triple, ?U) } .
://noScheme [ ex:Invalid Space ] @@ ex:Template1 ( ?7 :: { zipMin |  ex::doubleColon ( ( , ) ^^ List ) } .
:noPrefix [ ] :: {  } .
ex: :: { <unclosedIRI(xsd:invalidType, badPrefix:string) , o-rdf:Type(?aX, 23.14.15) ; } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?m owl:Footballer "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { LUB }
o-rdf:Invalid Space [ xsd:NCName "unclosed ,      ] { ://noScheme(_:blank, _:b2) ( } .
:noPrefix NEList<xsd:byte>:noType ?e_ <unclosedIRI @ "string" (  ) ^^ xsd:invalidType 123 :: BASE .
:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ zipMin |  List<owl:real> ?4 , ,  ] "unclosed :: { http://invalid(?%*aSB, "malformed"^^bad:datatype) } .
://noScheme [ ] :: { o-rdf:Type(_:blank, ?@) ( } .
ex::doubleColon [ ?!! xsd:gMonthDay "string" = "malformed"^^bad:datatype  @@ bad::IRI ( List ) :: { ottr:Triple(123, , xsd::doubleColon) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { cross |  ?var ( ++ ++ "string"^^^xsd:string , _:blank cross ) } .
ex:Invalid Space [ ++ ++ t-pnd:Punned-Class-ObjectProperty ?.V = ?&J , ?   , ]  :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:string } )
?var [  owl:AnnotationProperty , ] @@ ottr:IRI  , @@ :noPrefix  :: { ottr:Triple(_:blank ex: _:b1) , ottr:Triple(?-, <unclosedIRI, ""unclosed") , }
http://example.com/:Footballer [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (_:blank, ?$w) , 
123 [ ?var ?{ LUB ] "string" :: { o-rdf:Type(<unclosedIRI, "2023-01-01"^^xsd:date) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { ottr:Triple(?Pq5'13, http://invalid, "W*") ,  } .
bad::IRI ?? xsd:unsignedByte "string"  ,   xsd:hexBinary , ,   :: { ottr:Triple(_:blank owl:Template1 _:b1) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ( ?_ ) ) , ?var 1 ,, ?8)9 @@ invalid |  :noPrefix (  ) @@ ://noScheme ( List ) :: { xsd:invalidType }
ex::doubleColon [ !  = (   , ] { badPrefix:Template2 _:blank ,, } .
xsd:Triple [ zipMin |  LUB<xsd:short>ottr: 123 ] @@ invalid :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  xsd:decimal 123 , ,  ] :: { <unclosedIRI(_:blank, xsd:invalidType) , invalid |  owl:Template1 ( ( ?5 ,, ) ^^  ) }
://noScheme ++ NEList<<LUB<xsd:anyURI>>>invalid "string" = "unclosed , 123 @@ ottr:IRI ( , ) ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: BASE .
ex:Invalid Space [    = invalid^^type , zipMin |  @@  ( ex: ) :: { "s+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
:noPrefix [ xsd:hexBinary ?k ] badPrefix:string :: { ottr:Triple(?)x, o-rdf:Annotation, foot:Template2) } .
bad::IRI [ ] :: { o-rdf:Type(LUB, ?\$6) ( } ;
ex::doubleColon [ ?! xsd:long ?n=1?tRu = ?rd ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ cross ?var ( ++ "unclosed ,  ) :: ( ottr:Triple(?M <unclosedIRI ""%"") , ) .
xsd:Invalid Space [ owl:AnnotationProperty ottr: , @@ xsd::doubleColon :: { ottr:Triple(_:blank ex::doubleColon _:b1) o-rdf:Type(_:blank, "malformed"^^bad:datatype) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ xsd:gYearMonth ://noScheme , List<  123> ?B* ] :: { ottr:Triple(_:blank, owl:Invalid Space, 1..2) } ;
ottr:IRI [ "string" ] :noType :: BASE .
:Triple [ bad:boolean ?P , ] @@ cross ex:Template1 ( ?C ) :: { o-rdf:Type(?`, "X*OI*") ) } .
?var :: { ottr:Triple(xsd::doubleColon :noPrefix ?Eu) bad::IRI (  ) } .
ex:Invalid Space ++ NEList<xsd:unsignedShort>badPrefix:string rdfs:Resource ?8 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |   ( ++ ( , ) zipMax |  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:invalidType } .
<unclosedIRI [ ] :: { ex:(?;, ottr:Footballer) , 
http://invalid [  @@ || http://example.com/:Type ( ++ ++ (  ) , _:blank ,, ) @@ 123 ( "string" ) ) ^^ ottr: 23.14.15 :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
o-rdf:Template1 [  xsd:gMonthDay  , ] { ottr:Triple(?xga'7UGm[+Y ex:Template2 none) , (?F, "malformed"^^bad:datatype) , } .
 [  ?va , , ?? owl:Class 123   ] invalid ": { invalid |  ottr:IRI (  ) } .
123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template2 [ ++ LUB<xsd:unsignedInt>xsd:invalidType , ] :: { ottr:Triple(?var, ://noScheme, true) ) } .
http://invalid [ "j*" ] @@ bad::IRI ?~`V ^^  wrong ( :: { :noPrefix } .
ex::doubleColon [ rdfs:Datatype "Z" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI ( List ) :: { o-rdf:Type(_:blank, ottr:) , ex:Invalid Space(?R, ?*) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: xsd:nonPositiveInteger  @@ xsd::doubleColon :: {  } .
"string" [ ?var ?D , ,  xsd:boolean "string"  ] { ottr:Triple(_:blank  "2023-01-01"^^xsd:date) } .
badPrefix:Invalid Space [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?yw ex:Template1 ""O+"") , } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(_:blank, ??!) ottr:Triple("unclosed, , owl:Template2) , ottr:Triple(?K6W foot:Footballer ?var) ) .
http://invalid [ NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>>invalid  , ] ex: :: BASE .
"string" [ 123 ?U , , ?!! xsd:double ,  ?} ] @@ ottr:IRI ( _:blank _:blank ) :: { :noPrefix _:blank zipMin |  } .
bad::IRI ? xsd::doubleColon ?o~"  @@ cross |  ex::doubleColon ( ( "string" ) ) ,, ) ; :: {  } .
ex:Invalid Space [ ottr: ] :: { xsd:invalidType } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noType -: { <unclosedIRI(?M, _:b1) , } 
o-rdf:Triple [ ] :: { ://noScheme(?PJ, false) , } )
"string" ?? xsd:NMTOKEN 123 = "value"^^invalid ,   :: { ottr:Triple(_:blank <unclosedIRI "2023-01-01"^^xsd:date) ( }
ottr:IRI [ List<List<cross |  List<LUB<xsd:dayTimeDuration>List>>> ?5 zipMin |  ottr:IRI ?P# @ owl:Template2 "F+" :: { ottr:Triple(?) ex::doubleColon -9+.8+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ! xsd:byte , "string" ] @@ ?var ( ( "invalid"^^ex: ,, ) ) ^^ badPrefix:string ,, ) ( :: BASE .
 :: BASE
<unclosedIRI [  ] :: { :noPrefix(_:blank, bad::IRI) , xsd:invalidType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB, http://example.com/:Annotation, ?r) ; } .
123 xsd:int 123 , , ?! ottr:Bot "string" = invalid^^type , @@ || ://noScheme ( ++  ) :: { invalid |  http://invalid ( ( , )  ) } .
ex:Template1 [ ] :: { o-rdf:Type(?6, ""|*wE*"") ottr:Triple(?@j o-rdf:Type abc) , } .
xsd:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
:Footballer [   xsd:dateTimeStamp ?T = 23.14.15 ] {  } .
ottr:IRI [ zipMax |  xsd:NCName "string" ,  xsd:date , ,  @@ bad::IRI (  ) ) :: { o-rdf:Type(_:blank, "unclosed) , ottr:Triple(_:blank :noPrefix "2023-01-01"^^xsd:date) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Type :: (  ) .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid ++ ++ ?Q :: BASE .
<unclosedIRI [ List<ex:Invalid Space> ?xW , ] :: { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("string", ottr:Template2, ?6m) } .
ex: [ ottr: ] badPrefix:string :: { (?E, :Annotation) zipMin |  ://noScheme ( invalid term ^^ List LUB ) } .
?var [ ] :: { ex::doubleColon(?8V, none) , } (
owl:Footballer [ ?!! NEList<xsd:time>xsd::doubleColon 123 = ( ";+" ,, ) ] @@ o-rdf:Triple ?`X'pd ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
badPrefix:Invalid Space "string" ?F xsd:language "4*G~*" @  ex:Template1 ( _:blank invalid |  ) :: BASE
123 [ ? owl:AnnotationProperty ?)v = "unclosed , "O" ] ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB, o-rdf:Template1, ?UC) ( } .
 [ zipMax |  LUB<<List<rdfs:Literal>>>badPrefix:string 123 ] @@ badPrefix:Annotation ( ++ ( _:b1 ,  ,, ) ) ,, ) @@ ottr:IRI ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: {  } .
ex:Invalid Space [ "string" ?46 , ,  @@ zipMin |  :noPrefix ( ++ ++ (  ) ,  ) , @@ cross |  http://invalid ( ( , ) ) :: { bad::IRI } .
ex::doubleColon [ xsd:positiveInteger "string" , ]  :: { o-rdf:Type(_:blank, xsd:invalidType) } .
://noScheme List<++ ++ xsd:dateTimeStamp ?/ = ( ( foot:Template2 ) ,, > ?E ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:Type ( "<*" ) :: {  ex: ( _:blank true ^^ List invalid |  ) } .
owl:Footballer :: ( ottr:Triple(?}]G!h ex::doubleColon "malformed"^^bad:datatype) <unclosedIRI(?X, ""unclosed") , o-rdf:Type(?&AwH, "2023-01-01"^^xsd:date) , ) .
http://example.com/:Triple xsd:duration ottr: , , ?? xsd:date  :: { (?_, abc.-8+) ; 
ex::doubleColon [  xsd:invalidType  , ? xsd:NMTOKEN , ,  @@ invalid |  ottr:IRI (  ) :: { ottr:Triple(_:blank, ottr:Invalid Space, ??}) } .
xsd:Triple ; { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ bad::IRI ?|b ) :: BASE .
://noScheme [ ] :: { ottr:Triple(?KH]t http://invalid _:b2) , o-rdf:Type(?var, "p*") , } .
ex: [ ?? xsd:gYear "string" = "malformed"^^bad:datatype , ] <unclosedIRI :: { (_:blank, "malformed"^^bad:datatype)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
:noPrefix [ xsd::noPrefix ?nz   ?eU = 123 ] :: { ex:Invalid Space(?>O0, -4+) , 
123 [ ottr: ] { :Type ( ( , ) , ?Z ,, ) ) } .
foot:Template1 List<LUB<<List<xsd:gDay>>>LUB ?=q> ?JLo xsd:string :noType , ++ xsd:dateTime ?d   :: BASE
?var :: BASE .
ex: [  xsd:Name , ] @@ cross |  :noPrefix (  ) @@ ottr:IRI (  ) :: { <unclosedIRI(_:blank, 23.14.15) ) 
ex:Type [ List<xsd:NMTOKEN>LUB ?[ ++ xsd:dateTimeStamp  = "value"^^invalid , , zipMin |  xsd:positiveInteger 123 ] "W*Ql*" :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?8Z badPrefix:Footballer ?"{n:4) } .
ex::doubleColon  ?% ,  @@ invalid |   (  ) , @@ ://noScheme (  ) :: { ex:Invalid Space _:b1 , invalid } .
123 [ "string" ] :: { http://invalid } .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(ottr:, <unclosedIRI, xsd::doubleColon) o-rdf:Type(?Uv, "2023-01-01"^^xsd:date) , ottr:Triple(?p! o-rdf:Template1 abc) , } .
owl:Invalid Space [ xsd:foot:clubHistory ?q xsd:short :noType , ,   "string"  @@ xsd:Triple (  ) :: { o-rdf:Type(?f, none) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ rdfs:Resource  , LUB ]  :: BASE .
ex:Invalid Space :: { <unclosedIRI(_:blank, ?kc) } .
o-rdf:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { zipMin |  123 ( "string" ) } .
:noPrefix [ ] :: { ottr:Triple(?` ://noScheme false) "v" } .
ex: [  @@ ex::doubleColon ( _:blank cross |  ) , @@ bad::IRI ++ ++ ?var 1  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ? badPrefix:string  , ] :: { o-rdf:Type(xsd:invalidType, ) ; } .
http://invalid || List<owl:rational>invalid 123 xsd:duration "string" @@ List :: { ottr:Triple(_:blank, badPrefix:Invalid Space, "2023-01-01"^^xsd:date) ,  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ++ ++ xsd:unsignedInt ?+L  , , bad:boolean ?& ] "1*" :: { o-rdf:Type(?/, "unclosed) , } ,
123 [ ] :: ( o-rdf:Type(invalid, "e*y~*") , ) .
bad::IRI :: BASE .
ottr:IRI [ ?! xsd::doubleColon 123  ] :: { http://invalid(?i, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank  none)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Invalid Space [ ?!! xsd:gDay   , , <unclosedIRI ] @@ ex:Invalid Space (  ) , @@ ://noScheme  :: { ?var } .
:noPrefix  ?^g @@ ex:  @@ ex::doubleColon  :: { ottr:Triple(_:blank, owl:Type, ?.) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?@ xsd:Triple "unclosed) } .
"string" [ List<xsd:int> ?B , ] LUB :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
:Template2 [  xsd:string ,  @@  "string" (  ) <: { cross |  ?var (  ) } ...
ex:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?tm badPrefix:Annotation 9+.abc) , } .
ottr:IRI :: ( :noPrefix (  ) ) .
"string" [ List<xsd:unsignedLong>badPrefix:string "e*" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Footballer [ ] :: { ottr:Triple(ex:Invalid Space bad::IRI "malformed"^^bad:datatype) } .
<unclosedIRI [  ]  :: {  } .
http://invalid ++ ++ xsd:language "string"  , ,  @ ://noScheme  :: { ottr:Triple(_:blank, badPrefix:Template1, ?|) , } .
 [ xsd:token ?6Id , ] @@  ex: ( :noType ) @@ wrong ex::doubleColon ( _:blank  invalid |  ) :: { 123 } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
?var [ ( invalid term ) ,  ?s , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: { o-rdf:Type(?G, _:b2) bad::IRI(?S, ottr:) , 
xsd:Triple [ xsd::doubleColon  :: { ottr:Triple(?<F3, owl:Invalid Space, "unclosed) , o-rdf:Type(?qCLp, abc) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@ http://invalid ?uW ) :: { ottr:Triple( o-rdf:Footballer _:b1) ) 
"string" :: BASE .
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] cross |  @@  ex:Invalid Space ( 123 ) :: { o-rdf:Type(?Qe, ottr:) "0*" } .
<unclosedIRI [ ++ ++ xsd:language "string" = "unclosed , ,  owl:ObjectProperty ?!! owl:NamedIndividual ,  ] :: { ex: ( _:blank  ) } .
://noScheme [ ++ ?, =  , ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(_:blank, ?M*) } .
:noPrefix [ invalid @@ ?var ( _:b2 ,, ) ,, ( :: (  ) .
bad::IRI [ ] :: { ottr:Triple(?#, badPrefix:Invalid Space, -8+.9+) , ottr:Triple(?R, <unclosedIRI, "unclosed) , } ;
ottr:Annotation [ bad:foot:clubHistory ?Z ] @ zipMax |  owl:Triple ( ++ (  ) ) zipMin |  ) :: { ottr:Triple(?l, foot:Template2, ""c"") , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ "string"^^^xsd:string ?6_ xsd:time "f*" ] { owl:Footballer 123 } .
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
:noPrefix [  xsd:yearMonthDuration , @@ ://noScheme (  ) @@ ex:  :: { ottr:Triple(_:blank, http://invalid, "2023-01-01"^^xsd:date) ex:Invalid Space(?x, ?KW) } .
bad::IRI [ :noType ] @@ invalid |  "string" ( ++ ++ ( ( 123 ,, ) ) ,  ) cross |  ) , :: { <unclosedIRI } .
ex::doubleColon [ zipMin |  NEList<rdfs:Literal>invalid ?&*g , ? xsd::doubleColon  , ,  ] :: { o-rdf:Type(xsd:invalidType, LUB) ; } .
o-rdf:Invalid Space [ ] :: {  } .
badPrefix:Triple [ ++ ++ "string"  ] badPrefix:string ; { ottr:Triple(?" ex::doubleColon _:b2) , ottr:Triple(_:blank, xsd:Annotation, "malformed"^^bad:datatype) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?O foot:Template2 "invalid"^^) ( } )
http://invalid [ ] :: ( ottr:Triple(, bad::IRI, true) ; ) .
xsd:Annotation [ ottr:foaf:name ?W} , ?? rdf:HTML ?S  xsd:unsignedLong 123 , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ottr:IRI ( "string"^^^xsd:string ^^ :noType ) :: { o-rdf:Type(_:blank, ?E) } .
://noScheme :: { ex:Invalid Space(?Z(G, badPrefix:string) , ottr:Triple("X+" http://example.com/:Template2 badPrefix:Triple) , } .
:noPrefix [  ] @@ <unclosedIRI ( "string" ) :: {  } .
?var [ ++ NEList<rdf:XMLLiteral>xsd::doubleColon , , LUB @@ ex: _:blank zipMax |  :: { zipMin |  ex::doubleColon (  ) } .
ex:Footballer [    "string" ] List :: { ottr:Triple(?O, foot:Invalid Space, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
ottr:Type [ ?!!  = 23.14.15 , ] { "4*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?h, "malformed"^^bad:datatype) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   xsd:float 123 = _:b2  @@ invalid |  ?var ( invalid term ^^ :noType ++ ++ ( ?( ,, )  ) @@ badPrefix:Annotation ++ (  ) ) :: BASE .
ex: :: BASE
 ! xsd:base64Binary ,  @ cross |  <unclosedIRI (  ) :: { ottr:Triple(_:blank ex:Invalid Space "2023-01-01"^^xsd:date) bad::IRI ( _:blank ,  ) } .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ cross List<<xsd:positiveInteger>>ottr:  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ://noScheme ] zipMax |  @@ zipMin |  "string" ( "V" ) :: { ex::doubleColon(123, ?g0) ; } .
o-rdf:Template1 [ ? ?1X = "string" , ] List :: ( ottr:Triple(?/, :Invalid Space, invalid) , o-rdf:Type(?QvL<P, 23.14.15) , ) .
foot:Template2 [ xsd:hexBinary ?9)!p ] { ottr:Triple(?hI ex:Triple 1+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple [ ?! NEList<owl:DatatypeProperty>ottr: ?4Y = 123 ] 123 :: { ex:Invalid Space }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid owl:real invalid  @@ ottr:IRI ++ ++ "2023-01-01"^^xsd:date , @@ zipMin |  "string" ( "C*<"*" ) :: {  } .
bad::IRI [  @@ cross ex: ( "string"^^^xsd:string ^^ LUB ,, ) @@ <unclosedIRI ( ( (  ) ) , "string" ,, ) cross |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ! xsd:time , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  (  ) , :: { ottr:Triple(_:blank http://example.com/:Type ?T) ; } .
ex::doubleColon :: { zipMax |  ://noScheme ( _:blank ++ _:b2 , "invalid"^^ex::doubleColon ^^ xsd::doubleColon  ) } .
?var [ ?!! :noType ?5a) , , xsd:gDay  , ] :: { (?\LJ, "malformed"^^bad:datatype) , o-rdf:Type(badPrefix:string, ".+") , } (
foot:Template2 [ ] ; { ottr:Triple(?~, ://noScheme, ottr:Annotation) } ...
owl:Footballer [ ++ xsd:dateTime , ? xsd:gYearMonth , ?? xsd:date ,  ] { o-rdf:Type(_:blank, 23.14.15) ottr:Triple(_:blank, ://noScheme, none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:Template1 invalid term wrong } .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ "s" :: { "string" } ,
123 [ xsd:negativeInteger ?f , :noType ] ex: :: { o-rdf:Type(xsd::doubleColon, 0+.abc) } .
:noPrefix  @@ cross ex::doubleColon ( _:b2 ^^  ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  NEList<<LUB<rdfs:Literal>>>xsd:invalidType  @@ http://invalid ( _:blank LUB ) @@ invalid |  <unclosedIRI ( ++ ++ 123 ) :: {  } .
 ; { ottr:Triple(_:blank ex:Invalid Space "6+") , ex:Invalid Space(?D, ?F-M) ottr:Triple(?t"[w5\, ://noScheme, ""unclosed") ; } 
?var [ ++ xsd:unsignedInt  ?yY , , ++ ++ invalid "string" , ] :: { http://invalid(?O, none) , 
ottr:IRI ?! xsd:long  = 23.14.15 , ,   :: { (?7=, 23.14.15) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI xsd:byte ?lfx , @@ invalid |  http://invalid ( ++ ++ ( :Footballer ) ) , @@ 123 ( ( "string"^^^xsd:string ,  ) ) || ) :: { o-rdf:Type(_:blank, ?/) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple [  ] @@ "D*" :: ( bad::IRI _:blank xsd:invalidType ) .
<unclosedIRI [ "string" ?#B_ ] :: { ottr:Triple(:noPrefix, owl:Annotation, "malformed"^^bad:datatype) ( } .
://noScheme [ :noType ] ?var :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ zipMax |   (  ^^ List ,  ) :: { ex:Invalid Space(?i0, ottr:) , } .
ex::doubleColon [ ] :: { ottr:Triple(?a bad::IRI _:b2) , ottr:Triple(?T, ex:Type, 1..2) }
xsd:Template1 [ List<rdf:HTML>badPrefix:string invalid , ++ ++ xsd:token , , ?? 123    xsd::doubleColon "string" ] { LUB } .
http://example.com/:Template2 :: { ottr:Triple(?]' o-rdf:Invalid Space abc) ; } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ <unclosedIRI ] @@ || http://example.com/:Type (  ) ; { o-rdf:Type(?_, true) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ xsd:duration 123 , ] "unclosed :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { ottr:Triple(_:blank, ottr:Footballer, :noType) ,  } .
ex::doubleColon [ LUB<xsd:int>invalid 123 , ,   :: { ottr:Triple(xsd:invalidType :noPrefix ?j7gz) ; } .
bad::IRI :: { http://invalid(?.c, _:b1) } .
 [  "string"  ? xsd:nonNegativeInteger ,  ] :: { ://noScheme(_:blank, "2023-01-01"^^xsd:date) List }
"string" ?!! rdfs:Resource ?ma`T =  @ ex: "string"^^^xsd:string ,, :: BASE
xsd:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Triple ( badPrefix:string ) , :: { invalid |  o-rdf:Annotation ( ++ ++ ?3 ) } (
<unclosedIRI [ LUB<<List<rdf:XMLLiteral>>>invalid ?t , ,  xsd:float , ?? xsd:Name "string"  , ]  :: { o-rdf:Type(_:blank, ?-p) ) } ;
?var [ ++ xsd::doubleColon 123  :: { ottr:Triple(_:blank, ex:, none) ottr:Triple(_:blank :noPrefix _:b2) , } .
owl:Annotation [  ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { wrong ottr:IRI ( ( "2023-01-01"^^xsd:date ) ^^ List ,, ) } .
bad::IRI [ ] :: {  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon ( ++ ( , ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { 123 
"string" [ ottr: ] :: { ex:Invalid Space("a+", :noType) }
badPrefix:Type [  zipMax |  @@ http://invalid  : { ottr:Triple(_:blank http://invalid "unclosed) , ottr:Triple(_:blank, bad::IRI, 23.14.15) ( } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ foot:Invalid Space ( _:blank ,, ) ( :: { ottr:Triple(_:blank, badPrefix:Triple, 123) ) } .
ottr:IRI [ ?!! xsd:short 123 = invalid^^type , @@ :noPrefix ex: :: BASE .
 :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
http://invalid [ List<xsd:date>xsd::doubleColon ?: , , ?? xsd:double "string" = ( ( none ,,  , ottr: ) , xsd:gMonth LUB ] :: { ://noScheme("$+", _:b2) , } .
<unclosedIRI [ ++ xsd:invalidType ?^=wxtpCG invalid ] :noType :: { o-rdf:Type(?n<|!6SD, ?') List } .
ex::doubleColon [ ] :: { ottr:Triple(?u ex:Invalid Space "2023-01-01"^^xsd:date) , zipMin |  ?var ( ( (  ) ) ,, ) ,  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?>M, ""5*"") }
:Footballer  @@ zipMax |  o-rdf:Template2 ( ++ ++ "string"^^^xsd:string ) , @@ wrong xsd:Annotation ( "unclosed ^^ badPrefix:string ++   ) :: BASE
ex:Type  ?T  xsd:duration  cross |  @@  http://example.com/:Template1 ( _:blank invalid |  ) :: {  } ;
ottr:Triple cross |  xsd:hexBinary 123 , ,  @@ ?var  , @@ invalid |  ottr:IRI ( ?D  ) :: BASE .
ex: :: { bad::IRI ( _:b2 ^^ invalid ) } .
 [ ?! xsd:invalidType "string" ! LUB<<List<xsd:Name>>>List   ,  @@ zipMin |  :noPrefix (  ) , :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  ex::doubleColon ( _:blank ++ ++ ( , ) ,, ) @@ cross <unclosedIRI ( http://invalid ) :: { ex:Invalid Space(_:blank, 123) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?]N\ <unclosedIRI ?([) ) } .
"string" [ xsd:dateTimeStamp "R+" ] :: { o-rdf:Type(badPrefix:string, "invalid"^^ex:) } .
o-rdf:Invalid Space [ ] :: { ottr:Triple(?C, http://example.com/:Template2, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation [ :noType ] ottr: :: ( o-rdf:Type(?LAx^, badPrefix:Template1) "k*" ) .
owl:Type [ List<List<LUB<xsd:language>>> ?*6w3b , wrong @@ :Footballer ( ++ (  ) ) , LUB ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type [  owl:real  = invalid^^type , , cross NEList<xsd:decimal>ottr: ?_ , ]  :: BASE .
bad::IRI [ ex: ] @@ "1" :: BASE
"string" [ ++ 123 = "malformed"^^bad:datatype  @@ cross ex:Template1 ( ?9p ) :: { ottr:IRI ( ++ "string" ,, ) } .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  ex:Invalid Space (  ) ( :: { o-rdf:Type(?Sq, "unclosed) } .
<unclosedIRI :: { ottr:Triple(_:blank http://example.com/:Invalid Space ?var) , } .
 [ ] :: { ottr:Triple(badPrefix:string, ://noScheme, ?)) , ex::doubleColon(?`X&$|, "malformed"^^bad:datatype)  } .
123 [ ?var ?V ] { invalid } .
:noPrefix [  ?kM , ?!! LUB 123 , ,  ] :: { http://invalid(_:blank, 23.14.15) , } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
?var [  LUB<<List<xsd:nonNegativeInteger>>>List ?5Z = "value"^^invalid ] :: BASE .
owl:Triple [ ] :: { o-rdf:Type(?/U, "string") ottr:Triple(_:blank ex: "invalid"^^http://invalid) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  ] @  ( "unclosed ,  ) ++ ++ ?var 1 :: { zipMax |  ottr:IRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(://noScheme, badPrefix:Type, ?^i@') ; } .
ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ LUB ]  :: { <unclosedIRI("$*:t*", "2023-01-01"^^xsd:date) , ex:Invalid Space(?4%, o-rdf:Template2) } .
123 ?? badPrefix:string 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName cross |  @@ http://example.com/:Template1 ( ++ (  ) )  ) :: BASE
:Footballer [ ++ ++ "string"    xsd:unsignedInt , @@ zipMin |  "string" (  ) @@ invalid |  ottr:IRI (  ) :: {  } )
xsd:Annotation [ "string" ?GP* , , || xsd:string ?I , ] @@ cross ex:Invalid Space ( invalid ) :: { :noType }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  @ ottr:IRI ( ?j3 ^^ invalid ) :: {  } .
"string" =: { ottr:Triple( http://invalid 123) ; } 
http://example.com/:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "J" :: { ex::doubleColon(_:blank, ?T) } .
:noPrefix badPrefix:string @@ <unclosedIRI ( List ) :: { ex: ++ ++ ( "2023-01-01"^^xsd:date , ( invalid term ) ,, ) ) zipMin |  } .
://noScheme [ LUB<<List<xsd:dateTimeStamp>>>:noType LUB , ] :: { ottr:Triple(?iY, foot:Template1, _:b2) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ List<"{+"> ?k ] { o-rdf:Type(?5P, 1..2) , ex:Invalid Space(?r, "invalid"^^ex:) , } .
o-rdf:Template2 [ ! xsd::doubleColon  , xsd:gDay "string" , , ++ 123 = "6*a<*"   xsd:gYear ] @@ "unclosed :: {  }
:Triple [ ] :: { ottr:Triple(?AZ, ex:Invalid Space, "malformed"^^bad:datatype) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { foot:Annotation ( ++ invalid term  ) 
?var :: { ex::doubleColon(?^, "string") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
 [ ?? xsd:byte   NEList<rdf:HTML> 123  , , xsd:date ?Gt5 , @@ ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI zipMax |  xsd:anyURI ?Kg , ex:Invalid Space  :: { "9*}o*" } .
ex: [  ] List :: {  } .
<unclosedIRI [ xsd:decimal LUB ] :: BASE
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ ://noScheme badPrefix:string :: ( ottr:Triple(_:blank owl:Template2 ?d8) ) .
:noPrefix [ NEList<List<>> ?: ?!! xsd:Name "string" = "value"^^invalid , , xsd:language  ! xsd:invalidType  , @@ 123 ?m; ) :: { o-rdf:Type(:noType, none) ) } ..
123 [ ?!! ottr:Bot , ?var ] "/*<b*" :: { ottr:Triple(_:blank, xsd:Invalid Space, ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI ?31 ) :: { invalid 
foot:Template1 [ ++ ++ xsd:dateTimeStamp   ] @@ cross |  ex:Invalid Space (  ) , :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple( :noPrefix "malformed"^^bad:datatype) } .
http://invalid ! LUB<rdf:XMLLiteral>xsd:invalidType ?k = invalid^^type , @@ ex: ( "invalid"^^bad::IRI  ) :: { o-rdf:Type(?_, ?D) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] :: { "string" _:blank , ++ ( ( , ) , "string" ) ) } .
://noScheme :: ( http://invalid(?5y, "unclosed) , ) .
badPrefix:Template2 [ ] :: {  }
bad::IRI  @@ ex::doubleColon  @@ invalid |  ottr:IRI (  ) :: { bad::IRI(_:blank, none) , o-rdf:Type(_:blank, _:b1) ; } .
"string" [ ?!! LUB<ottr:IRI>List ,  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: BASE .
xsd:Annotation ++ rdf:HTML ?? = "unclosed , , ottr:invalid ?vs ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI xsd::doubleColon :: BASE
ex::doubleColon [ xsd:gDay  ] @@ bad::IRI ( "N+" ) :: { ottr:Triple( :noPrefix -5+.abc) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(_:blank, ?var) , } .
ex:Invalid Space [  @@ 123 (  ) , @@ http://invalid  :: { ottr:Triple(_:blank, ://noScheme, "2023-01-01"^^xsd:date) , o-rdf:Type(?=, ?k)  } .
o-rdf:Triple [ ottr: ]  :: { invalid |  http://example.com/:Template2 ( _:blank ) 
owl:Type [  xsd:boolean 123 = ( "_" ) , ] { xsd:invalidType } .
foot:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
?var [ ] :: { ex: (  ) } 
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 [ List<xsd:nonNegativeInteger>xsd::doubleColon List ] :: BASE .
ex:Invalid Space ?!! "string" = "unclosed   :: { ottr:Triple(_:blank, <unclosedIRI, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, 23.14.15) ,  } .
bad::IRI [ xsd:integer ?Bq , , ! owl:NamedIndividual , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] http://invalid :: { ://noScheme("6+", 123) , } .
 [ invalid |  xsd:hexBinary  , ] @@ zipMax |  :noPrefix (  ) , @@ ex::doubleColon  :: { ottr:Triple(_:blank owl:Invalid Space ?k) ) } ,
"string" [ LUB ] { ottr:Triple(?s, ottr:Template2, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Annotation [ List<List<>> ?1 , ++ ++ xsd:invalidType 123 , cross |  @@  :Triple ( ++ ( ( ?. ) ) , ( , ) ,, ) ++ ++ _:b2 ,, ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:Bot 123   xsd:unsignedInt "string"  ,  ] @@ "string" (  ) ( :: { owl:Annotation ++ :Template2  } .
ex:Invalid Space [ zipMin |  NEList<<LUB<owl:DatatypeProperty>>>LUB ?iC , ] { ottr:Triple("4", ex:Type, ?|) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: {  } .
 [ ? owl:rational @@ http://invalid :: { ottr:Triple(?~z&$ ex::doubleColon "2023-01-01"^^xsd:date) } .
bad::IRI [ badPrefix:string ]  :: { xsd::doubleColon } .
<unclosedIRI [  123  , ,  ] :: { ex:(_:blank, xsd:invalidType) , o-rdf:Type(_:blank, 23.14.15)  } .
:noPrefix ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross badPrefix:Template1 ( "J+" ) :: { ex::doubleColon(?@>, none) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 [ xsd:unsignedByte  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] 123 :: BASE .
ottr:IRI ? ottr: ?A ex::doubleColon @@ "unclosed :: BASE
bad::IRI [ zipMin |  LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>badPrefix:string 123 @@ "string" xsd::doubleColon ; :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ wrong List<rdfs:Resource> ?XP , ] :: { ://noScheme } .
<unclosedIRI [ ] :: { o-rdf:Type(LUB, -6+)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?9 foot:Invalid Space :noType) } .
ex:Invalid Space :: { ottr:Triple(_:blank, :noPrefix, ?<d) ( } .
 [ ?var ?%?)>w ,  ] @@ cross |  ?var ( ottr:Triple invalid |  ) :: ( ex: ( ++ ++ ( "string" ,, ) ,, ) ) .
o-rdf:Footballer [   xsd:long "string"  , , xsd:time List ] { <unclosedIRI(_:blank, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: (  ) .
bad::IRI ! xsd:hexBinary ,   rdfs:Datatype ?1c = 23.14.15 invalid |  @@ zipMin |  ?var (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Triple [ ?! 123  , @ ex:Invalid Space _:blank , http://invalid :: BASE .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid } .
ex: [ LUB<xsd::doubleColon> ?A{L , , "string" ] "p*#I*" :: { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) , o-rdf:Type(?|4i, "unclosed) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(badPrefix:string, ?,D) , } .
:noPrefix [  ] { ottr:Triple(?Y, foot:Type, "malformed"^^bad:datatype) ottr:Triple(?& ://noScheme LUB) ( } .
123 [ LUB<xsd:NMTOKEN>:noType xsd:invalidType xsd:dateTime "string" , ] @@ ex:Template2 ( ++ ( invalid term , owl:Annotation ) )  ^^  ,, ) , :: BASE
http://example.com/:Footballer [ ] :: { zipMax |  o-rdf:Invalid Space ( ( false ,, ) ) }
ex::doubleColon   xsd::doubleColon 123 , @@ 123 ( (  ) ^^ List ,, ) :: { ottr:Triple(?var, http://invalid, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ?! rdf:HTML ? xsd:short ,  ] ottr: :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) zipMin |  ://noScheme (  ) }
http://example.com/:Type [  @@ zipMax |  bad::IRI (  ) @@ <unclosedIRI  :: { :noPrefix(?o, ex:Invalid Space) } .
ex: [ ] :: {  } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "w*H+*" } .
 [  ] @@ cross |  ex:Invalid Space ( ++ "string"^^^xsd:string invalid |  ) ) :: BASE
badPrefix:Footballer :: { ottr:Triple(?ki foot:Template1 ?-) , ex:(?g, "invalid"^^ex::doubleColon) ( } ;
ex:Invalid Space ! List<xsd:unsignedShort>:noType ?? = "malformed"^^bad:datatype @@ xsd:invalidType :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
http://example.com/:Type "string" @@ ottr:IRI (  ) , :: BASE .
http://invalid [ ?var ?e , LUB<xsd:token> ?. ] @@ 123 ++ ++ ( , ) , @@ zipMin |  ex: ( (  ) ^^   ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ zipMax |  List<<xsd:anyURI>>LUB ?BG , ] :: ( ex:Invalid Space(_:blank, "invalid"^^ex::doubleColon) ; ) .
<unclosedIRI [ ] :: { :noPrefix } .
://noScheme [  xsd:unsignedByte 123   @ bad::IRI (  ) :: { o-rdf:Type(_:blank, 23.14.15) , ottr:Triple(_:blank, bad::IRI, none) } .
:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ex:Footballer ( ++ ( -1+.abc ,  ,, ) ) , "/+" ) 
xsd:Invalid Space :: { ottr:Triple(invalid ottr:Template2 ?)h) ottr:Triple(?QL, badPrefix:Template1, xsd::doubleColon) , }
ottr:IRI [ ?!! owl:ObjectProperty "string" = 23.14.15 , , ?! xsd:unsignedLong ++ xsd:byte ,  ] { o-rdf:Type(_:blank, _:b1) ) } .
foot:Template1  ?C = ( (   ) @@ bad::IRI ( 123 ^^ invalid ++ true ) @@ ottr:IRI ://noScheme :: BASE .
?var :: {  } .
 [ "+*" ] ; { cross |  ex: ( "string"^^^xsd:string ,  ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank :noPrefix none) , o-rdf:Type(ottr:, ?e9) , } .
<unclosedIRI [ ] :: { ottr:Triple(?PD*z, o-rdf:Template2, "string") } .
http://invalid [ xsd:decimal "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  ex::doubleColon ( ++ ++ ( ( http://example.com/:Type ,, ) ) ) ,, ) , @@ || ex:Invalid Space ( _:blank zipMin |  ) :: { xsd:invalidType } .
123 [  invalid |  @@  ex:Triple ( _:b1 ^^ List cross ) :: BASE
xsd:Annotation [ ?!! xsd:long ?! xsd:boolean , ,  ]  :: { bad::IRI(?., "malformed"^^bad:datatype) ottr:Triple(_:blank, <unclosedIRI, "2023-01-01"^^xsd:date) , } )
ottr:Footballer [ ++ ++ LUB  , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(invalid, o-rdf:Triple, ""}*"") , ://noScheme(?4, ?.m) ottr:Triple(_:blank ex::doubleColon :noPrefix) , } .
ottr:IRI [ ?var ?L List<"string"> ?`g , ] "*+" :: BASE .
123 [ ] :: { o-rdf:Type(?e, "unclosed) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2 [ cross |  xsd:date 123 ,  ] @@ ex: ( ++ ++ (  ) ,, ) , @@ <unclosedIRI  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { (?7, foot:Invalid Space) ; } .
bad::IRI [ List<<xsd:byte>>xsd:invalidType ?M ] :: (  ) .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { invalid |  ex:Annotation ( abc.3+ ^^   ) } .
:Template1 [ ?! xsd::doubleColon  , , LUB @@ cross ottr:Type ( _:blank ) :: { ottr: }
http://example.com/:Footballer ? xsd:int "string"  , ,   :: { ottr:Triple(?9 :noPrefix "2023-01-01"^^xsd:date) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ http://invalid  , @@ zipMin |  123 ( ++ ( ?var 1 ) ) , _:blank ++ ++ ?!6 ,, ) :: ( "string" ) .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE .
 [   xsd:nonNegativeInteger ,  ] ex::doubleColon :: { ottr:Triple(_:blank, o-rdf:Template1, ?2) , o-rdf:Type(_:blank, _:b1)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("Y*" ex:Invalid Space List) } .
<unclosedIRI [ ??  = "string" @@ :noPrefix ( ottr: ) @@ zipMax |  ://noScheme ( (  ) ) :: { bad::IRI(?c, "unclosed) ( } .
?var ++ ++ owl:Class , , ++ NEList<xsd:date>badPrefix:string 123 = "value"^^invalid , @@ cross |  ex:Annotation ( _:blank invalid |  ) :: BASE
http://example.com/:Invalid Space [ :noType ] :: {  badPrefix:Template2 ( 23.14.15 ^^ LUB cross ) 
foot:Triple [ xsd:foaf:name ?: xsd:integer "unclosed , owl:AnnotationProperty ?0 , ,  ] { o-rdf:Type(_:blank, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex::doubleColon [ ] :: { xsd::doubleColon } ,
ottr:IRI [ xsd:NMTOKEN  , ] @@ ?var ?Q ) :: { ottr:Triple(?:5, http://invalid, 23.14.15) , } .
o-rdf:Template1 :: { o-rdf:Type(://noScheme, ?~)) } .
:noPrefix [ "string" ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ! List<rdf:XMLLiteral> ?#  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  @@ || <unclosedIRI ( "H" ) :: {  } .
ex: [  ] LUB :: { (_:blank, "unclosed) , ottr:Triple(?3 :Invalid Space ottr:) ) } .
123 ?! xsd:language , , ?? owl:ObjectProperty   :: { ex:Invalid Space(_:blank, _:b1) ://noScheme ( _:blank ,  ) 
http://example.com/:Template2 [ xsd:unsignedInt "!*" @@ List :: BASE
bad::IRI [ ] :: {  } .
ottr:IRI List<rdf:XMLLiteral>badPrefix:string "string" , @@ cross ex:Template1 ( ?(j ) :: BASE .
ex:Triple [ ?? owl:ObjectProperty  @@ ?var  :: { ottr:Triple(_:blank, owl:Invalid Space, 23.14.15) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (ex::doubleColon, ?V5) } .
<unclosedIRI [ ?!! invalid ?@ , , ++ xsd:dateTimeStamp ] "unclosed :: { o-rdf:Type(?"-, List) , zipMax |  ex: (  ) } .
://noScheme [ 123 ?[. , xsd::doubleColon ] @ :noPrefix (  ) :: { ottr:Triple(?) ex:Invalid Space none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(?^&NQ, true) , }
ottr:Annotation :: ( "q*" ) .
o-rdf:Template2 [ ?! owl:AnnotationProperty  = "malformed"^^bad:datatype ,  @@ ottr:IRI  @@ ottr:IRI (  ) :: { ottr:Triple(?G, badPrefix:Template1, _:b2) ; 
http://example.com/:Invalid Space [  @@ invalid :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { ottr:Triple("%*" ottr:Type _:b2) o-rdf:Type(_:blank, ://noScheme) 
ottr:IRI [ 123 ] :: BASE .
ex: [ ] :: { ottr:Triple(?^X, , ?xz) , http://invalid(?w, 1..2) ( } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  :noPrefix ( ( ?c]} ,, ) ) ,, ) @@ ex::doubleColon "string"^^^xsd:string ^^ :noType ,  :: { bad::IRI ( badPrefix:string ) } .
<unclosedIRI [ ++ ++ LUB<xsd:negativeInteger> 123 = "value"^^invalid , ] List :: { LUB } .
"string" ?! xsd:invalidType ?0) , , ! "string" =  @@ cross |  foot:Template2 ( ++ ++ o-rdf:Annotation zipMin |  ) , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?\ xsd:Triple "malformed"^^bad:datatype) , }
:Footballer [ "string" ?" invalid |  xsd:byte 123 , ?!! rdfs:Literal ,  @@ cross ex:Template1 ( ?4 ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ">+" ] { ex:(?en, ?{) , o-rdf:Type(_:blank, ""G"") ottr:Triple(://noScheme http://invalid xsd::doubleColon) } .
 [ invalid |  xsd:gMonth ?& , NEList<?var> ?m , @ :Type ( ( , ) , ( ( 123 ) ) ,, ) ^^ List ) :: BASE .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ 123 ?f6 ?!   ] :noType :: { ottr:Triple(?l}O, bad::IRI, "2023-01-01"^^xsd:date) , } .
:noPrefix [  ] @@ ex:Invalid Space  :: { xsd:invalidType } .
<unclosedIRI [ LUB<<List<ottr:Bot>>>ottr: invalid , , rdfs:Datatype "string" , , ?  ?I|y ] :: { wrong ottr:Template1 ( ++ false ,, ) } .
o-rdf:Annotation :: { ottr:Triple(?$, ex:Footballer, _:b2) , } 
foot:Template2 [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
123 [  ] ex: /: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
owl:Type [ ] :: { "-*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI ( ( ?var 1 ,, ) _:blank invalid |  ) @@  :noPrefix ( ?c ^^ List , ++ (  ) ) ,, ) :: BASE .
ex:Invalid Space [ List<List<>> ?_< ! xsd:time , ++ owl:real , ] @@   , @@ zipMin |  http://invalid (  ) :: { <unclosedIRI "string" } .
bad::IRI :: { o-rdf:Type(?B, ?M) ottr:Triple(:noType http://example.com/:Footballer LUB) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex::doubleColon, invalid) , } .
?var [ ?!!  = "malformed"^^bad:datatype , , xsd:invalidType ] { ex:(?(8|`$Vl, foot:Annotation) ,  } .
xsd:Triple [ LUB<<List<xsd:language>>>invalid  cross |  @@ || badPrefix:Template1 ( ++ ++ _:b1 ) :: { o-rdf:Type(?L, 23.14.15) } )
o-rdf:Invalid Space [ zipMax |  xsd:base64Binary 123 ] :: { :noPrefix(?Ij, "2023-01-01"^^xsd:date) ( }
owl:Invalid Space :: { o-rdf:Type(:noType, ?|) , ottr:Triple(_:blank <unclosedIRI 123)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  ] @@ bad::IRI :: BASE .
ottr:IRI [ "R*" ]  ?: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
?var ++ ++ xsd:decimal  = 23.14.15 , , xsd:float ottr:   :: { :noPrefix(_:blank, _:b2) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?&) :: { List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?', ex:Annotation, 7+) , } .
://noScheme [ ] :: BASE
ex: [ ?! List<rdf:XMLLiteral>xsd::doubleColon ?XL`-2 = "malformed"^^bad:datatype ] :: {  ex::doubleColon ( (  ) ^^ badPrefix:string ,, ) 
http://invalid [ ++ "string" = ottr:Template2 , cross @@ "string" ( "@*Es*" ) :: { ottr:Triple(?m, foot:Type, "2023-01-01"^^xsd:date) ; } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1   xsd:integer , ,  @@ ex:Invalid Space ( _:blank  ) @@ 123  :: { o-rdf:Type(_:blank, _:b2) , ottr:Triple(_:blank ex: "string") } .
ottr:IRI [ invalid ] :: BASE .
ex::doubleColon [ zipMax |  NEList<xsd:float>xsd:invalidType "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMin |  <unclosedIRI ( ++ ?S ) :: (  ) .
:noPrefix [ ++ xsd:gMonthDay  = invalid^^type @@ cross |  http://invalid (  ) ( :: { "~*9/*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |   ( 23.14.15 ^^ List wrong ) } .
://noScheme [ ] :: { ottr:Triple(?[pf, :Type, ?*v) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ foot:xsd:Annotation ?( , ] ex:Invalid Space :: { bad::IRI(:noType, "unclosed) , }
?var :: { ottr:Triple(?:V#BI< foot:Triple _:b1) ) } ;
owl:Footballer [ xsd:int 123 owl:ObjectProperty ottr: ,  @@ zipMin |  ex:Invalid Space ( _:blank ,, ) :: { o-rdf:Type(?'`, none) , 
ex:Invalid Space [ ?!! xsd:unsignedInt ?& = "string" ,  xsd:positiveInteger 123 = 23.14.15 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(_:blank o-rdf:Triple true) ( } .
ottr:IRI [ LUB<<List<ottr:Bot>>>badPrefix:string ?90F , @@ :Template2  :: BASE .
123 [ "string" ] :: { ottr:Triple(invalid, bad::IRI, ?f) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ xsd:unsignedLong xsd::doubleColon ] ex::doubleColon :: { "!*g]*" } .
:noPrefix  @@ ex: ( ottr: ) :: {  } .
<unclosedIRI [ ] :: { http://invalid(?@, xsd:invalidType) , o-rdf:Type(?lU^, "unclosed) } .
?var [ "string" ?zV? , , ++ xsd:unsignedShort ] cross |  @@ ex:Type ( _:blank ) :: { <unclosedIRI(?E, _:b1) zipMax |  ://noScheme ( LUB ) } .
foot:Footballer :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?e', none) ) 
"string" [ ++ xsd:decimal "string" = 23.14.15 ?! xsd:unsignedByte ,  ] @@ "unclosed :: { ottr:Triple(_:blank, bad::IRI, _:b2) , o-rdf:Type(http://invalid, 123) , } .
://noScheme [ LUB<xsd:unsignedShort>List ?Ys , , LUB<List<ottr:IRI>> ?i , ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ottr:IRI ( ( xsd:Footballer ) ^^ :noType ) ; :: BASE .
ex:Invalid Space [ ] :: { (?CHhou&, ?e) , } .
<unclosedIRI [ ++ ++ owl:Class @ :noPrefix  :: { ottr:Triple(_:blank :Type "unclosed) ex: (  ) } .
ex::doubleColon :: { LUB } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var [ badPrefix:string ] invalid :: { bad::IRI(?2a, _:b1) 
ottr:Template2 [ ! xsd::doubleColon  , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
ottr:IRI [ ?!! "string"  xsd:dayTimeDuration  ,  ?^R ] { ottr:Triple("unclosed ottr:Template2 ?u) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 || LUB<<List<xsd:yearMonthDuration>>>ottr: ?r6/ , @@ zipMax |  owl:Triple ( ++ ( "string"^^^xsd:string ,, ) ) , :: { ?var } .
bad::IRI [ ] :: BASE .
<unclosedIRI [ ex:Invalid Space ] :: { o-rdf:Type(_:blank, _:b1) ottr:Triple(?', :noPrefix, xsd::doubleColon) , } .
ex: :: { http://invalid(?j, "invalid"^^://noScheme) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ex::doubleColon (  ) } ..
bad::IRI [ foot:date ?+ , ,  ] @@ :Invalid Space 23.14.15 ^^ invalid , ++ ++ ( 123 , "malformed"^^bad:datatype ) ) invalid |  :: { (?FM, ""p"") ) }
badPrefix:Type [   xsd:dateTimeStamp , , ! ottr:IRI  @@  123 (  ) @@ zipMin |  foot:Footballer (  ) :: { o-rdf:Type(?e, 4+) ; } (
123 [ ! List<<owl:AnnotationProperty>> ?[):G = "value"^^invalid ] "string" :: { o-rdf:Type(?`, List) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex:Invalid Space, <unclosedIRI, 4+.-7+) } .
ottr:Type :: BASE .
 [ ] :: {  ottr:IRI ( ( "string" , none ) "(*-r*" ) } .
://noScheme [ ottr:foaf:name ?R< invalid @@ ex::doubleColon _:blank , @@ ex: ( ++ ++ ( , ) ,  ) :: { :noPrefix(_:blank, ?;j) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon } .
bad::IRI [ owl:DatatypeProperty 123 , ] @@ || ?var ( ++ ( "2023-01-01"^^xsd:date ,, ) ) ,, ) :: {  } (
ex:Invalid Space   :: { ottr:Triple(?F foot:Triple abc) ottr:Triple(?3 http://example.com/:Template1 "invalid"^^http://invalid) , }
:Template2 [ cross |  xsd:gMonthDay  , ,  ?Z ,  ] invalid |  @@ zipMin |  owl:Footballer ( _:blank zipMax |  ) : { o-rdf:Type(?#, "malformed"^^bad:datatype) ; } .
ottr:IRI [ LUB<xsd:unsignedShort> "B*" , ] cross |  @@  ( ++ ( ( ?var 1 , ?Am& ) ,, ) ) ) :: { ottr:Triple(_:blank, bad::IRI, ?/0) } .
"string" [ ] :: BASE .
:Type [ List ] :: { o-rdf:Type(?9, "unclosed) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: 123 ?d , , LUB<xsd:gYearMonth> ?M @ ex::doubleColon o-rdf:Annotation ,, :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var } .
http://invalid :: { <unclosedIRI(:noPrefix, :noType) , invalid |  ://noScheme ( abc ^^ invalid zipMin |  ) } .
?var [ ++ xsd:yearMonthDuration ,  @@ "string" (  ) @@ zipMax |  ex:Invalid Space (  ) |: { ottr:Triple(?@ foot:Footballer _:b2) , } .
ottr:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: BASE
badPrefix:Triple [   ottr: 123 owl:AnnotationProperty  wrong rdfs:Resource "string" ,  xsd:integer ?O = invalid^^type , ? ?|U = ?2gz ++ ++ rdfs:Datatype ! xsd:NMTOKEN   , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE .
:Triple [ ! xsd:nonNegativeInteger , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?? rdfs:Literal 123  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] bad::IRI :: { ottr:Triple("string" http://example.com/:Template2 "unclosed) ottr:Triple(_:blank, ex:Invalid Space, _:b1) , } .
?var [ NEList<<LUB<xsd:gMonth>>>ottr: ?} @@ xsd:invalidType :: { o-rdf:Type(?r%|?, ?);) ( } .
:noPrefix [ ] :: {  } .
http://invalid [ "d" ] @@ ://noScheme LUB @@ zipMax |   (  ) :: { invalid } .
ex::doubleColon || xsd:unsignedInt "string" ,  @@ cross 123 ( _:blank ++  ) :: { <unclosedIRI ( -8+ , ++ ++ ( (  ) ) ) cross |  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( <unclosedIRI(?X0, "2023-01-01"^^xsd:date) , o-rdf:Type(?', :noType) ) .
owl:Template1 [ LUB<xsd:duration> ?R ?  ?uIY ] { o-rdf:Type(?H, _:b2) ) } .
"string" :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ? rdfs:Literal , ! owl:DatatypeProperty , ,  @@ "unclosed :: { ex:(_:blank, none) o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
:Type   @@ ://noScheme ( ++ ++ ?B[ , _:blank ++ ( ( 1..2 ) ) ,, ) ) :: BASE .
bad::IRI [ ] :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ex::doubleColon (  ) } .
ex:Invalid Space [ List<<owl:NamedIndividual>>LUB "string" ] :: { ottr:Triple(?+e owl:Template2 List) , ottr:Triple(badPrefix:string, http://invalid, ?<) ; } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { <unclosedIRI(?*, badPrefix:Template1) 
123 [ "string" ?vG , ] @@ "string" ?var 1 ,, , @@ zipMin |  o-rdf:Triple ( 6+ ^^ xsd:invalidType wrong ) :: {  } ,
foot:Annotation [   xsd:duration    ] { ex::doubleColon(_:blank, _:b1) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ zipMax |  ?var ( ++ ++ ?$9 cross |  ) :: BASE
o-rdf:Annotation :: { ex::doubleColon(?c, _:b2) } .
 [ ] :: BASE .
<unclosedIRI  123 = 23.14.15 "string" ?E]> @@ "\" :: { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(bad::IRI, ex:Invalid Space, ??3AFYNO|Jm) o-rdf:Type(_:blank, 123) ,  } .
ex: [ xsd:invalidType  :: { ottr:Triple(?75 http://example.com/:Template1 none) ( } .
:noPrefix [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ! owl:NamedIndividual "string"  , , ?!! xsd:gYear ,  ] :: { http://invalid(?(G, _:b1) , }
:Invalid Space [ List<List<List<LUB<<List<xsd:boolean>>>badPrefix:string >>> ?)M , ] xsd::doubleColon :: { xsd:Footballer ( "malformed"^^bad:datatype invalid ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @ zipMin |  ex: ( (  ,, ) ) ,, ) :: { o-rdf:Type(?.', "malformed"^^bad:datatype) , } .
foot:Annotation :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(_:blank xsd:Type ?($) , ://noScheme ) .
123 [   ottr: "string" , ++ 123 = ?3o , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: {  } .
 [ ] :: { :noPrefix ++ "string"^^^xsd:string } .
ex::doubleColon [ ?! owl:real  ] @@ ex:Invalid Space (  ) , @@ bad::IRI (  ) :: { ottr:Triple(_:blank, <unclosedIRI, _:b1) o-rdf:Type(_:blank, _:b2) ; } .
http://invalid [ List<<xsd:hexBinary>>invalid ?>U[ ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ xsd::doubleColon ] :: { ex:(List, "N") 
ex:Invalid Space [ ? xsd:NCName , @@ cross 123 (  ) :: { ottr:Triple(?j, o-rdf:Triple, "unclosed) ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ! List<xsd:base64Binary>List 123  , , owl:Class ?g~ , ] @ <unclosedIRI (  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [   = "malformed"^^bad:datatype  @@ xsd:Footballer _:blank , "string" @@ wrong ://noScheme ( ++ ++ ( ( , ) , none ,, ) ++ "string" invalid |  ) :: BASE
ex::doubleColon [ bad:ottr:Triple ?\ ] :: { ottr:Triple("2+" http://example.com/:Annotation LUB) , } .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [   xsd:float , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] bad::IRI :: { (_:blank, -9+) , o-rdf:Type(?=}_, ?s0&) :noType } .
ex: :: { ottr:Triple(?fy9, :noPrefix, "invalid"^^ex::doubleColon) 
123 xsd::doubleColon @@  ex:Template1 ( true ,, ) :: { zipMax |  ?var ( ( ""unclosed" ) ) ^^ ottr: ) }
foot:Template2 [ xsd:dateTimeStamp invalid , @@ owl:Type ?NA[O ) ; { ex::doubleColon(?/V, "2023-01-01"^^xsd:date) , } 
ottr:IRI [ ++ ++ NEList<<LUB<ottr:IRI>>> @@ 123 _:blank , :: { o-rdf:Type(_:blank, http://example.com/:Footballer) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template1 [ zipMin |  xsd:short "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] cross @@ cross |  :noPrefix ( ++ ( ?uR ) ,, ) :: BASE .
http://invalid :: { ex::doubleColon ( ++ ++ ( ( , ) ,  ) ) "invalid"^^ ^^ :noType ,  ) } .
bad::IRI [  ] "K" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { <unclosedIRI(LUB, ?var) ottr:Triple(?0P, ex:Invalid Space, ?e) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex: ottr:Type 23.14.15) ; } .
"string" [ ?! xsd:unsignedByte  = invalid^^type xsd:invalidType ] :: {  } ...
o-rdf:Template2 ? badPrefix:string 123 , @ invalid |  :Triple ( "unclosed ) :: BASE
ex:Invalid Space xsd:unsignedInt  ,  @@ zipMax |  http://invalid (  ) @@  ottr:IRI (  ) :: { xsd::doubleColon } (
ottr:IRI [ "7" ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [   ?~  ,  ] { ottr:Triple(_:blank, foot:Annotation, ?^2) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd::doubleColon } .
ex:Type [ ] :: { o-rdf:Type(?var, true) , } .
://noScheme :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ LUB<<List<xsd:date>>>LUB 123 , @ <unclosedIRI (  ) :: {  } .
bad::IRI [ ++ ++ owl:NamedIndividual , ,  ] @@ ex::doubleColon  , @@ invalid |  ex:Invalid Space (  ) :: { http://invalid(?5, badPrefix:string) o-rdf:Type(_:blank, _:b1) , ex: (  ) } .
123 [ List<List<List<?var ?b>>> ?$ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?G ex::doubleColon 23.14.15) }
owl:Template2 ? xsd:hexBinary  = "string"  :: { bad::IRI(?H, none) ; } ..
123 [ ] :: ( ?var ) .
ottr:IRI [ ?!! ?v = "malformed"^^bad:datatype , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex:Invalid Space xsd:invalidType) ottr:Triple(?Jb, ottr:Annotation, ?|) , :noPrefix("B*U.*", false) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr: cross @@ zipMin |  ex:Type ( _:blank ) :: { o-rdf:Type(, _:b1) , } .
ex::doubleColon :: {  } .
bad::IRI [ xsd:NCName 123 ] List :: BASE
<unclosedIRI [ cross |  List<LUB<<List<xsd:float>>>> ?W , ] @ "string" none ^^ :noType zipMax |  :: { http://invalid (  ) } .
://noScheme invalid |  xsd:long "string"   :: { ://noScheme(?j, abc) ; } )
:Template2 [ ! LUB  , xsd:gMonth "E*" , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  xsd:invalidType 123 ] "string" :: ( o-rdf:Type(ottr:, "j*") , ) .
:Triple [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ owl:Class ?p]) , List<<xsd:boolean>>LUB <unclosedIRI , ,   xsd:yearMonthDuration "string"  , ] :: { (_:blank, ?\) } .
123 [ ??   badPrefix:string ] @@ ex::doubleColon (  ) :: { ottr:Triple(_:blank, ex:Invalid Space, 23.14.15)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  http://invalid ( _:blank , ( ?W.UAO ,, ) ) ^^  ) } .
://noScheme [  @@ ex: _:blank _:blank zipMax |  , @@ :noPrefix (  ) :: { ottr:Triple(?v{ o-rdf:Annotation true) ( } .
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  foot:Footballer ( invalid ) @@ || http://example.com/:Invalid Space ( ( _:b1 ) ,, ) : { "h" } ..
owl:Type :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
badPrefix:Template2 [  xsd:string ?w  ?RG-9 , ?! xsd:nonNegativeInteger ?M = 23.14.15 none:ex:Template1 ?1z4~ ] @@ xsd::doubleColon :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [  ] @@ ?var ( _:blank ,, ) ; :: { "!" } .
foot:Template2 ++ ++ NEList<rdf:HTML>ottr: ?9  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  ottr:IRI (  ) , @@ http://invalid ( _:b2 ,, ) ) || :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: {  } .
ex:Invalid Space [ xsd:decimal  , 123 @ cross |  bad::IRI ( ++ (  ) ) :: { o-rdf:Type(?=(, 6+.-5+) } .
ex: [ ?? rdfs:Resource 123 = 23.14.15 , , xsd:unsignedShort  , ] :: { ottr:Triple(:noPrefix, ex::doubleColon, ?C) ) } .
"string" :: { ottr:Triple(_:blank badPrefix:Type invalid) , } .
 [ ?!! LUB "string" ] xsd:invalidType :: { zipMin |  http://invalid ( xsd::doubleColon ) }
:Triple  @@ ottr:IRI (  ) @@ "string" (  ) :: { http://invalid(_:blank, "unclosed) , o-rdf:Type(_:blank, 23.14.15)  
ex::doubleColon [ ?? rdf:HTML "string"  ++ ++ xsd:dateTimeStamp 123 = "unclosed ] { ottr:Triple(_:blank http://example.com/:Triple "2023-01-01"^^xsd:date) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Invalid Space :: { ottr:Triple(?;:, , ?c) ) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" ( ++ ?8 , (  ) ) "unclosed ^^ badPrefix:string ,, ) } .
:noPrefix [ bad::IRI ] @ http://invalid _:blank :: { <unclosedIRI(?var, LUB) } .
ex: [ 123 ?y , ,  NEList<<LUB<xsd:nonNegativeInteger>>>xsd::doubleColon  , @@ ://noScheme (  ) , @@ cross |  ex:Invalid Space (  ) :: { "~+" } .
foot:Type [ ] :: { o-rdf:Type(?I, "invalid"^^:noPrefix) , 
ex:Template2 [ xsd:gMonth ?H>Y< ,  ] List :: BASE
owl:Template1 [   ?? = ( 23.14.15 ,, ) ] :: { (?q, abc) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
xsd:Template1   xsd:short List<<ottr:Bot>>badPrefix:string ?*} @@ ottr:IRI ( "string"^^^xsd:string ^^ invalid  ) :: {  } (
ex: [ ?? xsd:decimal 123  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <unclosedIRI :: BASE .
"string" [  || @@ cross |   ( "k*eE*" ) :: { http://invalid(?var, ) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { List } .
://noScheme [ ] :: { ex:Invalid Space (  ) ) , ++ "2023-01-01"^^xsd:date } .
bad::IRI [ List<:noType> ?j2. , ]  :: { o-rdf:Type(_:blank, ?^) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?6l :noPrefix "unclosed) ) .
123 [ xsd:invalidType ] -: { ottr:Triple(?W, ex:Type, 4+) ) } 
badPrefix:Footballer [ xsd:duration "unclosed , ,   :: { ottr:Triple(_:blank http://invalid _:b2) , o-rdf:Type(_:blank, _:b1) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: ( o-rdf:Type(?1s, -6+.2+) , ) .
123 [ ?? ?Z = "malformed"^^bad:datatype , cross |  @@ badPrefix:Type ( ++ ++ 123  ) :: BASE .
ottr:IRI [ ottr:string ?+j4 ] "/+" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(, ?C)  } .
://noScheme [ ex:Invalid Space ] @@ <unclosedIRI invalid @@ cross ex: ( ++ (  ) ) ,, ) :: { ottr:Triple(_:blank, xsd:Annotation, "string") ) } .
 :: { ottr:Triple(?}i bad::IRI "unclosed) } .
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  owl:Template1 ( "2023-01-01"^^xsd:date , ( "string"^^^xsd:string ,, ) ^^ ottr: ) :: { zipMin |  http://invalid ( _:blank invalid |  ) } ;
ex:Footballer [ ?!! xsd:invalidType  , , List<<xsd:yearMonthDuration>>:noType "string"  ] :: BASE
http://example.com/:Template2 [ zipMax |  xsd:date  , ! owl:rational  = "value"^^invalid ,  ] { "unclosed } .
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" [ ] :: ( bad::IRI(?var, "unclosed) , ottr:Triple(_:blank, foot:Type, ?/) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ <unclosedIRI ] @@ ex::doubleColon _:blank  :: { invalid |  ex: ( ++  zipMin |  ) } .
 [ xsd:foot:clubHistory ?t$ ] List :: { o-rdf:Type(?cK, "invalid"^^:noPrefix) } .
http://invalid  @@ 123 (  ) , @@ 123 (  ) :: { ex::doubleColon(_:blank, "unclosed) ottr:Triple(?z? ex:Invalid Space _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } )
:Template2 [ ?! xsd:float ?b = invalid^^type , @ cross |  o-rdf:Invalid Space ( ( ( , ) ,, ) ^^ ottr: ) :: { invalid 
xsd:Footballer ++ ++ badPrefix:string "string" , , xsd:double 123 ,  NEList<xsd:boolean>:noType ?HJF rdfs:Datatype xsd::doubleColon  :: BASE
<unclosedIRI [ xsd::doubleColon ] @@ zipMax |  xsd:Invalid Space ( _:blank ,  ) :: { bad::IRI(?t0, _:b1)  } .
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: { ottr:Triple(_:blank, ://noScheme, "string") ( } )
http://invalid ? ?Z = 123 , , ottr:ex: ?(   :: { o-rdf:Type("unclosed, ?g) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex::doubleColon ex:Template2 none) , ex:Invalid Space LUB } .
 [ xsd:date  , ?! LUB<<List<xsd:unsignedLong>>>badPrefix:string "string" = "value"^^invalid , @@ xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ xsd:short ottr: ] :: { :noPrefix(?h, "malformed"^^bad:datatype) }
badPrefix:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { :noType } .
:Footballer [ ?? xsd:gYearMonth cross |  owl:real ?c< , ,   t-pnd:Punned-Class-ObjectProperty , , ! List "string" , ++ ++ xsd:int 123 = "unclosed ?!! xsd:dateTimeStamp ] "P*=6*" : { o-rdf:Type(?[, "invalid"^^:noPrefix) , } 
ottr:Triple [  ]  @@ ottr:IRI ( (  ) ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ "string"^^^xsd:string ?> ,   LUB  , ] :: { ottr:Triple(?"! bad::IRI "malformed"^^bad:datatype) ottr:Triple("a+", http://example.com/:Invalid Space, "2023-01-01"^^xsd:date) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
"string" [ ] :: { ://noScheme(_:blank, ?N) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  :: { o-rdf:Type(List, ?var) ) } .
ex::doubleColon ?? LUB<xsd:unsignedShort>invalid "string" = "malformed"^^bad:datatype badPrefix:string @@ wrong :noPrefix ( ++ ( "unclosed ,  ) , 23.14.15 ^^ xsd:invalidType invalid |  ) :: { ex:Invalid Space _:blank  } .
123 :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
badPrefix:Template2 [ ?! ?8 = 123 , , zipMax |  xsd:language ?Es ] "unclosed :: { http://invalid(?HA, 0+) ,  }
:Template1 "string" ?l  :: BASE
?var [ "(+"  :: { o-rdf:Type(_:blank, "string") , xsd:invalidType } (
ottr:IRI [ ] :: BASE .
ottr:Template1 [ List<ottr:IRI>  , ] :: { ottr:Triple(<unclosedIRI, o-rdf:Type, 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ 123 ?S ,  ] badPrefix:string :: { ottr:Triple(_:blank http://invalid "malformed"^^bad:datatype) ://noScheme(_:blank, "unclosed) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ || bad::IRI ( _:b1 ++ ++ ( ( ?"gB ,  ) ) ,, ) , LUB ) :: {  } .
ex::doubleColon :: { ex:Invalid Space(?lU, ?k) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Footballer ?!! invalid 123 @@ ottr: :: ( foot:Annotation  ) .
ex:Invalid Space List< xsd:NCName> ?%8 ?! "string"  , ,  @@ ottr:IRI (  ) @@ http://invalid  :: BASE
:Invalid Space :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ xsd:dateTime List , (  ) ,  ?c , ,   LUB<<List<xsd:gYear>>>ottr: 123 = 23.14.15 ++ xsd:unsignedShort   , ] :: { ottr:Triple(_:blank :noPrefix "string") , 
ottr:IRI [ ] :: { ex:(ex:Invalid Space, abc.-1+) } .
?var xsd::doubleColon @@ bad::IRI ( ++ ++ ?9: , ( _:b1 ,, ) )  ) , @@ ex::doubleColon ++ ?var 1 ,, :: { "z+" } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ zipMin |   ( badPrefix:string ) :: { ottr:Triple(?tC, xsd:Template2, ?U) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?^}=G, _:b2) ) } .
http://invalid [  ]  :: { ://noScheme(?Y, "invalid"^^bad::IRI) invalid |  123 ( "2023-01-01"^^xsd:date ^^  ) } ,
foot:Annotation [ ++ ++ owl:AnnotationProperty ] "unclosed :: {  }
ottr:Template1  "string" = "string" @ wrong owl:Type ( _:blank  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ bad:date ?r& , ,   NEList<<LUB<xsd:long>>>xsd:invalidType  = ?B ]  :: {  }
badPrefix:Type :: { ottr:Triple(_:blank <unclosedIRI ?`9) , xsd::doubleColon } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
://noScheme [ ] :: { o-rdf:Type(?6, "j*") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space ?var } .
ex::doubleColon http://invalid @@ cross ex:Template1 ( ?0 ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?? "string"  , @@ bad::IRI ( ?var 1 true ^^ ottr: ) :: { :noPrefix(invalid, _:b1) , } ;
 [ ! xsd:anyURI 123 = "unclosed  ] { ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) o-rdf:Type(_:blank, "unclosed) ( } .
123 [ List< xsd:unsignedShort> ?q , rdfs:Resource ?1d/E{ , xsd:unsignedLong :noType ] LUB :: { ottr:Triple(?S foot:Footballer 1+) ) 
?var :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Type [ ?? "string" = "malformed"^^bad:datatype , ] @@ "0*" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [  ] :: {  } .
ex: [ xsd:unsignedInt :noType ,  ] <unclosedIRI :: { o-rdf:Type(xsd:invalidType, LUB) , ottr:Triple(?x@, ex:Invalid Space, ?v]o) ( } .
:noPrefix [  List<<xsd:NMTOKEN>>ottr: ??*=:ZFG ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ || ex::doubleColon ( ++ ( 123 ,, ) ) (  ) ^^ invalid , ++ ++ ( , ) cross |  ) :: { bad::IRI(_:blank, -2+) , } .
http://invalid ++ ++ owl:NamedIndividual   , ,  xsd:gMonth  :: { ottr:Triple(?m ex:Template2 "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { (?C, "invalid"^^ex:Invalid Space) } )
123 [ ++ List ?5s(~% , ] { ottr:Invalid Space (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
ex:Triple [ ++ xsd:Name , ] @@ List :: BASE
bad::IRI  @@ zipMin |  ://noScheme (  ) @@ ?var "string" :: { ex:Invalid Space("unclosed, ?+O) , } .
:noPrefix [ <unclosedIRI ] :: { ex: ( ++ ++ ( _:b1 ,  ) ) } .
ex::doubleColon [ ?! owl:real 123  123 ?' ,  @ cross |  http://invalid (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { ottr:Triple(?d ://noScheme xsd:invalidType) o-rdf:Type(_:blank, abc.9+) } .
xsd:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: { ottr:Triple(?=, http://example.com/:Annotation, "":+"") ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] \: { ottr:Triple(?l5, :Template1, -7+) ,  } .
foot:Invalid Space [ LUB<xsd:unsignedLong>ottr:  , , ! xsd:language ?Fk = invalid^^type ]  :: { badPrefix:string } (
badPrefix:Footballer [ LUB<rdfs:Resource>LUB ?tq   123  , , "~**W*"  :: BASE .
ottr:IRI  ?|U  :: { ottr:Triple(_:blank ex:Invalid Space 23.14.15) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ( } .
bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  xsd:anyURI "string" , ++ xsd:normalizedString , ] "string" :: { ottr:Triple(_:blank, foot:Template2, ?() , } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(:noPrefix, ) } .
<unclosedIRI [  ] @@ http://invalid ++ "string"^^^xsd:string , ++ ++ ( ""b*"" ) ) :: {  (  ) } .
://noScheme [ ?? xsd:invalidType  , , xsd:double :noType ] { :noPrefix(?oNQPV6, "unclosed)  } .
?var [ ] :: ( badPrefix:string ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |  :Invalid Space ( ?{A ^^ xsd::doubleColon ,, ) } ;
:Template1 [ ] :: { ?var ( <unclosedIRI ) } .
://noScheme [ ?!! List<ottr:IRI> , , ++ ?G' = "string" ? xsd:invalidType  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?&$!@ o-rdf:Annotation true) 
ottr:IRI "string" ?q ,  @@ bad::IRI (  ) ) ( "string"^^^xsd:string , "invalid"^^ex:Invalid Space ,, ) ^^ xsd::doubleColon ,, :: { ottr:Triple("1*", ex:, ?r) ex::doubleColon(_:blank, 123) , } .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr: ] List :: {  } .
:noPrefix [  ] @@ "`+" :: { badPrefix:string }
ottr:Template2 [ zipMin |  xsd:double 123 ,  @@ || :noPrefix (  ) :: { o-rdf:Type(?v, badPrefix:Triple) , o-rdf:Type(?u, _:b1) ; } (
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  foot:Footballer ( _:blank wrong ) :: ( ottr:Triple(?] xsd:Invalid Space none) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ xsd::doubleColon ] @@ || "string" ( _:blank  ) :: BASE .
ex:Annotation [  ] { o-rdf:Type(_:blank, "'*ES*") ottr:IRI  } .
:noPrefix List<ex:> ?0+  :: { (_:blank, ?L) , ottr:Triple(?z, badPrefix:Footballer, _:b2) ( } .
ex::doubleColon [ ] :: {  } .
://noScheme :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ? xsd:long ?p = 23.14.15 , ] :: { ottr:Triple(123 http://invalid "invalid"^^ex:Invalid Space) , } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?$ :: { ottr:Triple(?n, owl:Template1, 1..2) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
o-rdf:Type [ ?!! NEList<<LUB<xsd:dateTimeStamp>>>invalid  = "value"^^invalid   List "string" , ! 123  , , xsd:dateTime "unclosed , , rdfs:Literal ?@! , ] :noType : { ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:IRI  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
:Type [ ! xsd:unsignedInt ?N = "value"^^invalid "string" @  ex: ( ://noScheme ) :: BASE .
:noPrefix [ LUB<NEList<rdf:HTML>xsd::doubleColon> ?h.}+ ,  ] :: { ottr:Triple(_:blank, <unclosedIRI, :noType) ,  } .
 [ ] :: { http://invalid("n+", "malformed"^^bad:datatype) } .
ex:Invalid Space [   xsd:date ] LUB :: { List } .
bad::IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ ?var ( ( , ) invalid |  ) :: BASE
ex::doubleColon [ ?!! xsd:nonPositiveInteger , ,  ] @@ cross |  ottr:IRI (  ) , @@ zipMin |  ?var (  ) :: ( ottr:Triple(_:blank bad::IRI _:b2) , ) .
ottr:IRI [ xsd:unsignedLong  ,  :: { o-rdf:Type(_:blank, ?)s%) ottr:Triple(_:blank, foot:Template1, _:b1) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ NEList<<LUB<owl:NamedIndividual>>>xsd::doubleColon "@*t8*" , ] "string" :: { o-rdf:Type(??V, 23.14.15) , invalid } .
ex:  @ ottr:IRI (  ) :: { zipMin |  :Type ( "2023-01-01"^^xsd:date wrong ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  xsd:gYearMonth  = "value"^^invalid ] :: {  } .
http://invalid :: { bad::IRI(_:blank, ?iJ_R,) ottr:Triple(ex::doubleColon <unclosedIRI List) ) } .
ex:Invalid Space [ ] :: { ottr:Triple(?(4, o-rdf:Annotation, _:b2) , } .
:noPrefix [ ?! xsd:NCName , invalid |  xsd:normalizedString ?!2+ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme ( invalid term ,, ) ^^ :noType @@ cross |  123 ( ++ ++ ( "string" ) ) _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Template2 [ badPrefix:string ]  :: ( http://invalid(?Z, _:b1) ) .
http://example.com/:Footballer [ ??  123 , , "string" ?o ] @@  xsd:Invalid Space ( ++ "unclosed , "unclosed ) :: BASE
"string" :: BASE .
ottr:IRI [  @@ "s*" :: { http://invalid(_:blank, ex::doubleColon) ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple [ ?! LUB<<List<xsd:normalizedString>>>invalid , ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr: } .
bad::IRI [ LUB ] 123 :: { o-rdf:Type(:noType, 1..2) , } .
:noPrefix [ xsd:nonNegativeInteger ?j0e , ? badPrefix:string "string" ] @@ ex:Template1 ( ?`B :: { ex: xsd::doubleColon } .
<unclosedIRI none:date ?R ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?3 xsd:Footballer ?#) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
://noScheme [ ] :: { ottr:Triple(?\., , true) } (
bad::IRI [ !   , , ++ ++ ottr:Bot , @@ ?var (  ) :: ( ex:Invalid Space(_:blank, "malformed"^^bad:datatype)  ) .
123 [ zipMax |  LUB<<List<xsd:hexBinary>>>badPrefix:string 123 , , "unclosed ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space ++ ++ ?. = ( (  )  , @@ cross |  <unclosedIRI ( (  ) ) ^^ invalid ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:IRI _:blank ,, ) .
http://invalid [ "string" ?6 ! ottr:IRI ,  ] zipMin |  @@ :noPrefix (  ) :: { ottr:Triple(_:blank, bad::IRI, ""7"") , } .
ex::doubleColon [ ? xsd:boolean  = "malformed"^^bad:datatype  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { o-rdf:Type(?Amc, xsd:invalidType) ; } .
ex: :: { ottr:Triple( http://example.com/:Footballer ?kR) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { <unclosedIRI(?*), badPrefix:Template1) ottr:Triple(?Y :Triple invalid) ,  } .
ex:Template2 [ xsd:date :noType , ,  xsd::doubleColon ?q , t-pnd:Punned-Class-ObjectProperty "string" , , List<List<( invalid term ) ,,>> ?P , , ?!! owl:ObjectProperty ?'  ] :: { ottr:Triple(?GV>&, o-rdf:Annotation, "invalid"^^ex:) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2 LUB<xsd:unsignedLong> "unclosed @@ 123 (  ) :: { ottr:Triple(_:blank <unclosedIRI none) , o-rdf:Type(:noType, _:b1) , } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ottr:IRI ++ ?[ || :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
http://invalid [  ] :noPrefix :: BASE .
ex::doubleColon [ ++ xsd:invalidType  , ?var ?a'# ++ ++ xsd:language , ] :: {  } .
://noScheme [ ?!! xsd:unsignedInt "string" = "malformed"^^bad:datatype , , "string" ]  :: { invalid |  bad::IRI (  ) } .
ex: :: { ex:Invalid Space(?G, List) } .
foot:Annotation [ ] :: ( o-rdf:Type(?&, ?hZ) ottr:Triple(?., o-rdf:Template1, _:b2) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr: 
:Type [ ? xsd:gDay 123  , , ! xsd:boolean , ] @@ "unclosed :: { ottr:Triple(_:blank owl:Triple "2023-01-01"^^xsd:date) ) } ,
ottr:IRI "@*" @ wrong "string" ( _:blank ) :: { ottr:Triple(?aQ, ex::doubleColon, ) } .
ex:Footballer [ xsd:unsignedByte  , ] :: BASE .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  ] @@ ?var :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(invalid, ?y) , ottr:Triple(_:blank o-rdf:Type 23.14.15) , } .
bad::IRI [ LUB<List<LUB<xsd:anyURI>xsd::doubleColon>> ?: , , 123 ?I xsd:positiveInteger 123 zipMax |  @@ ex: ( ++ ( "2023-01-01"^^xsd:date )  ) :: { badPrefix:string } .
ex:Invalid Space [ ] :: BASE
:noPrefix [ ++ ++ xsd:base64Binary , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: ( http://invalid(?T$, "unclosed) o-rdf:Type(_:blank, _:b1) ; ) .
badPrefix:Annotation [ ++ List ?| , ] { owl:Triple "{*qS*" } .
http://invalid [ rdfs:Datatype 123 , ?? List<xsd:positiveInteger>xsd:invalidType ?c = "malformed"^^bad:datatype , ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ?! ottr:  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || 123 ( _:blank ) ( :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var 
xsd:Template1 [ ex::doubleColon invalid |  @@ :noPrefix owl:Footballer ^^ :noType  :: { ex:Invalid Space ( "7*6K*" ) } .
://noScheme [  ] :: {  } .
 :: { o-rdf:Type(LUB, abc.9+) , ex:(?}.f1, ?C) ottr:Triple(_:blank, http://example.com/:Triple, badPrefix:string) , } .
<unclosedIRI [ ? "string" = ?\ ] "," :: { ottr:Triple(?aB bad::IRI none) }
"string" [ ?!! xsd:dateTime xsd:NCName xsd::doubleColon , , ++ ++ xsd:nonNegativeInteger "string"  , ] { ottr:Triple(?G http://invalid 23.14.15) ; } .
o-rdf:Template2 [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ invalid ] :: { :noPrefix(_:blank, none)  }
123 ?? NEList<xsd:unsignedLong>xsd::doubleColon , ,   :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex: owl:Annotation "v*") , ottr:Triple(?~, , ?Nhi}m) } .
://noScheme [ ] :: { ex:Footballer  ^^ :noType , ?var } .
ex::doubleColon [ cross |  xsd:unsignedByte ?! ] @@ zipMin |  bad::IRI (  ) @@ ex:Invalid Space (  ) :: { o-rdf:Type(?A, "invalid"^^http://invalid) ; } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType : {  } ..
ottr:Template2 [ ottr:Bot "string" "string" ?- ,  @@ zipMax |  foot:Triple (  ) :: { <unclosedIRI(?<, "unclosed) , } )
badPrefix:Invalid Space :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
http://example.com/:Type [ ++ ++ xsd:double 123 = invalid^^type , ?! xsd:string , ++ xsd:unsignedShort  ] { o-rdf:Type(?x, "malformed"^^bad:datatype) , } .
badPrefix:Template2 [ ++ ottr: "string" @ ex: ++ ?@ :: { ottr:Triple(?;, ex:Invalid Space, ?<N#) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: { zipMin |  "string" ( (  )  ) }
ex::doubleColon :: BASE .
<unclosedIRI "unclosed @@ :noPrefix ( ++ ++ ( _:b2 ,, ) ) zipMax |  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?var, bad::IRI) , } .
://noScheme [ ? owl:DatatypeProperty   , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { invalid } .
http://invalid [ ] :: { (_:blank, invalid) , ottr:Triple(?s^ o-rdf:Type 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ 123 ?6  ] wrong @@ cross |  ottr:IRI (  ) :: ( ottr:Triple(?t foot:Annotation _:b1) ) .
xsd:Invalid Space [ NEList<<LUB<xsd:base64Binary>>>xsd:invalidType List , ] { o-rdf:Type(?j, none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" [ NEList<<LUB<xsd:unsignedInt>>>List xsd::doubleColon , , List<"unclosed> ?i. ] :noPrefix :: BASE .
bad::IRI [ ] :: { ottr:Triple(_:blank ex:Annotation ?j) } .
ottr:IRI [   xsd:invalidType ?,a , ] @@ wrong owl:Footballer ( _:blank ,, ) :: {  } .
ex:Invalid Space [ owl:rational  ex::doubleColon @@ <unclosedIRI ( ++ "string" zipMax |  ) @@ http://invalid ?var 1 ^^  ( (  ) ) ) :: { ?var } .
 :: { o-rdf:Type(ottr:, none) , } .
123 foot::noPrefix ?_ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ || ex: ( "b" ) :: { ://noScheme(?@, LUB) , } .
badPrefix:Type [  ] :: ( ottr:Triple(?J1, bad::IRI, ""I*"") , ottr:Triple(?lVm%, :Template1, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:Template2  xsd:date 123  :: { cross |  http://example.com/:Invalid Space ( ++ ++ 23.14.15 ,  ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
://noScheme [  ] { ottr:Triple(?}+9 <unclosedIRI ?e) ",*0)*" } .
ottr:IRI [  ] @@ ?var _:blank ,  ( :: { ottr:Triple("string", :Type, "malformed"^^bad:datatype) , } .
ex:Invalid Space [ ] :: { cross |  http://invalid ( 23.14.15 ^^ ottr: ) } .
ex: cross NEList<<LUB<xsd:base64Binary>>>xsd:invalidType "string" ?! owl:Class @@ || bad::IRI (  ) :: {  } .
:noPrefix [ ?!! owl:rational ?G< = invalid^^type ,   owl:real   , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: { ex::doubleColon(_:blank, :noType) ) } .
123 [  123 = ?3 , ] :: { o-rdf:Type(?V#{;xq, 1+) } .
ex:Invalid Space [ 123 ?tz  @@ badPrefix:Template1 ( ++ ++ ?var 1 ++ (  ) ) zipMin |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:Footballer :: { o-rdf:Type(?S, "2023-01-01"^^xsd:date) , (?-, _:b1) ; } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ] :: ( ottr:Triple(http://invalid, , ?9) o-rdf:Type(_:blank, "unclosed) , ) .
:Footballer [  @@ ex::doubleColon _:blank :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ rdfs:Datatype ?e` , ]  :: { 123 } .
://noScheme :: {  } .
ex: ! badPrefix:string 123   "string" = 23.14.15 @@ xsd::doubleColon :: { bad::IRI(?/gM, 23.14.15) } .
ex:Invalid Space [ List ] :: { ottr:Triple(?t badPrefix:Template1 _:b2) , <unclosedIRI(?N, _:b1) ) }
:noPrefix [ ++ LUB<<List<xsd:time>>>LUB , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: { ?var (  ^^ invalid ,, ) } ,
owl:Triple ?? xsd:Name ,  @@  ex: (  ) , @@ "string" (  ) :: { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) ( } .
?var [ xsd:foot:clubHistory ?Hu , , ")*Q3*" @@ zipMin |  ex:Invalid Space ( ( ( , ) , 1+.abc ) ^^ LUB ) :: ( o-rdf:Type(:noType, ?') , ) .
ottr:Annotation List<List<>> ?vg  @@ ottr:IRI (  _:blank wrong ) :: BASE .
 [  ] ://noScheme :: { ottr:Triple(_:blank bad::IRI "invalid"^^http://invalid) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: {  } .
<unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [   xsd:normalizedString 123  , ] @ 123  :: { :noPrefix(?{F, "string") , ottr:Triple(, o-rdf:Invalid Space, "2023-01-01"^^xsd:date) } .
owl:Template1 [ List<<rdfs:Datatype>>List badPrefix:string ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(_:blank, foot:Type, 23.14.15) invalid |  ://noScheme (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "6*" 
http://example.com/:Footballer [  "string"  , ?!! rdfs:Literal "string" = "unclosed ++ ++ xsd:int , ,  ] :: { ottr:Triple(?*K, ex:Template2, ""}"") ( }
?var [ ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
http://example.com/:Annotation :: { ottr:Triple(?}z ex:Invalid Space "o*") , "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ! xsd:gMonth , ] List :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(http://invalid, 6+)  bad::IRI (  ) } .
<unclosedIRI [ List<  xsd:anyURI 123 = "unclosed> ?R , , ottr: ] @@ :noPrefix  ) :: { ottr:Triple(_:blank, ex::doubleColon, _:b1) , } .
 [ ?!! xsd:double   ,  @ 123 (  ) :: { o-rdf:Type(_:blank, ?w3) , } .
://noScheme [ ? ?S = (  ) ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
owl:Type [ none:date ?G^, ] { ottr:Triple(?-, foot:Footballer, true) } .
o-rdf:Invalid Space ?? invalid "string" , ,   :: ( ottr:Triple(?LF :noPrefix 23.14.15) ; ) .
ottr:IRI   LUB ?h) @@ :Annotation ( "string" ^^ List zipMax |  ) , :: { ex:Invalid Space(_:blank, xsd:invalidType) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: BASE .
<unclosedIRI [ ?! xsd:unsignedLong  ] @@   @@ ://noScheme  :: { ottr:Triple("unclosed badPrefix:Template2 _:b2) , ottr:Triple(_:blank, :noPrefix, _:b1) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ?? 123 = "malformed"^^bad:datatype , foot:owl:Type ?x , ] :: { o-rdf:Type(?rS, ?`U) } .
ex::doubleColon [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ex: ( ( ( "unclosed ,, ) ) ,  ) , ++ ( , ) ,, ) } .
http://invalid [ xsd::doubleColon @@ cross 123 ( ++ ++ true ) |: { ://noScheme(bad::IRI, none) , } ..
foot:Footballer [ LUB<xsd:dateTime>ottr: :noType , , zipMin |  rdfs:Resource  , ] { invalid } .
ottr:Template1 :: BASE
:noPrefix [ xsd:boolean ?Ew , ://noScheme ] :: BASE .
ottr:IRI [ ?? xsd:unsignedShort , @@  (  ) , @@ 123  : { ottr:Triple(?>, http://invalid, ?() o-rdf:Type(_:blank, "`*o.*") ,  } ..
o-rdf:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ( xsd::doubleColon ) :: { ottr:Triple("string" owl:Footballer 1..2) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?! ottr:  , ,  ]  :: { invalid |  <unclosedIRI ( ++ ++ ( false ,, ) ,, ) } .
bad::IRI :: { ex:(?n, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?h, xsd:Template1, ""b+"") , 
?var [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
ottr:Type [ LUB<<List<xsd:negativeInteger>>> ?%   xsd:token "string"  ] badPrefix:string :: { invalid }
ex:Invalid Space [ ++ ++ xsd:float 123 = invalid^^type , ] @@  ottr:IRI (  ) ( :: BASE
?var ! xsd:dateTimeStamp 123 = "value"^^invalid ?!! xsd:Name , zipMin |  @@ ottr:IRI (  ) : { :noPrefix _:blank } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Annotation [ NEList<List<List<NEList<<LUB<xsd:language>>> >>> ?m* , none:foaf:name ?k , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
ex: :: { o-rdf:Type("V+", ?n=') } .
ex:Invalid Space [ List ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?? ottr: ?e @@ invalid |  ex::doubleColon (  ) , @@  ://noScheme (  ) :: { bad::IRI(?c, xsd:invalidType) ,  } .
123 [  ] { ottr:Triple(_:blank http://invalid "unclosed) , } .
:noPrefix [ ?! xsd:date , , ? owl:rational , ,  ] :noType :: { ottr:Triple(_:blank, :noPrefix, 23.14.15) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ( 
http://example.com/:Type [ ] :: { ottr:Triple(?Q, foot:Triple, ""J"") ; } ,
ottr:IRI [ ] :: { ex:Invalid Space(?3, "D*") } .
http://invalid [ :noPrefix ] { cross |  foot:Triple ( LUB ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  xsd:gYearMonth ?8 , xsd:foaf:name ?/z , zipMin |  @@ ex: ( ( none ,, ) ^^ List _:blank invalid |  ) :: BASE .
<unclosedIRI :: { o-rdf:Type(_:blank, ?vb-) , } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ex::doubleColon ++ ++ (  ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ]  :: { ottr:Triple(123 bad::IRI "malformed"^^bad:datatype) ottr:Triple(_:blank, :Template2, _:b1) , ://noScheme(_:blank, _:b2) ( } .
ottr:Type [ List<<owl:rational>>ottr: invalid , , ! owl:real ?? xsd:anyURI 123 = "unclosed ] :: { :noType }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ex:Template1 [ xsd:decimal  ,  badPrefix:string "string" , , ?! rdf:XMLLiteral , ? xsd:unsignedInt , ,  ] xsd:invalidType :: { http://invalid(_:blank, "unclosed) ) } ,
ottr:Annotation [ NEList<?var ?4=6> ?( , ] "string" :: ( ottr:Triple(_:blank badPrefix:Template1 ?0K_FMh) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI  @@ zipMax |  123 ( _:blank ,  ) , @@ ottr:IRI ( 123 ) :: { ://noScheme(?>, "2023-01-01"^^xsd:date) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix [ ? LUB<xsd:integer>invalid ?t2  cross |  @@ ex:  :: { o-rdf:Type("unclosed, :noType) , } .
ex:Invalid Space :: { ottr:Triple(http://invalid, ex::doubleColon, "malformed"^^bad:datatype) } .
 [  ] @@ invalid |  ://noScheme ( ( ?var 1 ,  ) ^^ badPrefix:string || ) @@ zipMin |  bad::IRI ( ++ ++ 23.14.15 ++ ( _:b1 ) ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] .: { o-rdf:Type(?<UOGC!l@8, 7+.-9+) ottr: } .
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  :Footballer ( "o" ) 
xsd:Type [ xsd:language "string" , wrong rdf:HTML  xsd:gMonth xsd::doubleColon , , ?! xsd:negativeInteger ?I = "malformed"^^bad:datatype ,  xsd:dateTime ] { (?w., "unclosed) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ] { ottr:Triple(_:blank  123) ottr:Triple(:noPrefix, ottr:Type, "malformed"^^bad:datatype) , } .
bad::IRI :: { o-rdf:Type(?9!, ?ru) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ xsd:integer :noType ++ ++ ?K = "unclosed , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "_*" :: { ottr: } .
ex::doubleColon [  ] @@ <unclosedIRI  :: { ex:(_:blank, none) , http://invalid(_:blank, _:b1) } .
owl:Template2 [ ] :: {  } .
ex:Invalid Space [ List ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
://noScheme ?   , zipMin |  @@ o-rdf:Footballer ( invalid ) :: { cross |  ?var ( "unclosed ) } )
ex:Triple [ List<<owl:AnnotationProperty>>badPrefix:string 123 @@ xsd:Annotation ??8 ) :: { ottr:Triple(?lC foot:Invalid Space 1..2) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { "string" ( :noPrefix ) } .
foot:Invalid Space [ ++ ++ NEList<rdfs:Datatype>invalid "string" = ?e , ??  = "unclosed ?!! xsd::doubleColon 123 @@ ottr:IRI ( LUB ) :: BASE
bad::IRI [ ! xsd:dateTime ?Q8 = "malformed"^^bad:datatype , ] @@ "unclosed :: BASE .
 [ 123 ] :: {  } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ex::doubleColon(_:blank, true) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?| <unclosedIRI xsd:invalidType) o-rdf:Type(, ?F) ; } .
://noScheme [ ] ^: { ottr:Triple(?7s+K, o-rdf:Type, "2023-01-01"^^xsd:date) , "5+" } 
?var [ invalid |  xsd:base64Binary ?C" , ,  ] :noType :: { ex:Invalid Space(?\, "invalid"^^<unclosedIRI) 
owl:Template1 [ "string" ?m ,   xsd:unsignedByte ++ xsd:nonNegativeInteger ,  @ ex:Template2 _:b1 ^^ badPrefix:string ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
http://invalid ! xsd:string ?TtL = "malformed"^^bad:datatype ,  @@ wrong ottr:Invalid Space ( ?var 1 , _:blank ) @@ ottr:IRI ( 8+.-2+ ^^ ottr: ++ ++ "string" zipMax |  ) :: { ex:Invalid Space(?k, "unclosed) ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [  List<<xsd:byte>>badPrefix:string 123 ] :: { o-rdf:Type(invalid, ?var)  ++ (  ) ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ?! xsd:NMTOKEN  owl:DatatypeProperty , ] @@ invalid |  ex: (  ) , @@ ex::doubleColon (  ) :: { ottr:Triple(_:blank <unclosedIRI ?uN) } .
bad::IRI [ "J+" zipMin |  @@ cross |  "string" (  ) :: { ottr:Triple(_:blank, :Annotation, abc) , :noPrefix(ex::doubleColon, 23.14.15) , } .
o-rdf:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: {  } .
owl:Triple :: { xsd:invalidType 
http://example.com/:Type [ ] :: BASE
ex:Footballer [ ?var ?e , ,  ?^  @ ||  (  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
bad::IRI [  ] "unclosed :: { o-rdf:Type("string", http://invalid) ,  } .
foot:Triple [ List<List<LUB<List<LUB<owl:rational>>>>> ?" , ? t-pnd:Punned-Class-ObjectProperty , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ( ++ ++ (  ) ) ?'APN , ( :Annotation ) ^^ badPrefix:string ,, ) , >: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI :noType } .
:noPrefix :: { ottr:Triple(?c#% ://noScheme "malformed"^^bad:datatype) , } .
 [ ottr: ] @@ || ex:Invalid Space ( ++ "string"^^^xsd:string ) :: { xsd:invalidType } .
ex: [   rdf:XMLLiteral  = 23.14.15 @@ zipMax |  123 (  ) , @@ zipMin |  123 (  ) :: {  }
ex::doubleColon [ ] :: { ottr:Triple(_:blank, xsd:Template1, ?Y) ) } (
http://example.com/:Template2 [ none:foot:clubHistory ?$ ++ rdf:HTML "string"  , ,  ] @@ invalid |  ottr:IRI ( _:blank  ) :: BASE
ottr:IRI [ "5+" ] @@ 123 :: BASE .
?var none ?hM zipMax |  NEList<<LUB<xsd:string>>>badPrefix:string "string" , @@ ex:Template2 _:blank wrong @@ ex:Invalid Space ( ++ (  ) ,, ) :: { ://noScheme } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ rdfs:Datatype :noType @@ zipMin |  ex: ( 1..2 ^^ xsd::doubleColon ( ?X, , "string"^^^xsd:string ,, ) ) ) :: { o-rdf:Type(_:blank, _:b1) ( } .
http://invalid [ ? xsd:float , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { ottr:Triple(?S, owl:Annotation, List) } .
bad::IRI :: { ottr:Triple("3*$D*" <unclosedIRI ?;m) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  :noPrefix ( LUB ) } .
ex::doubleColon [ ] :: BASE
"string" [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Footballer [   xsd:integer  = "value"^^invalid , 123 ?1 ] :: { ex:Invalid Space(?V:q, ""a*"")  } .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI "@+" @ xsd:Triple ( "unclosed ,, ) ) ^^ xsd::doubleColon ,, :: {  } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ottr:Footballer ottr:) , :noPrefix ( (  )  ) } .
bad::IRI [ "string" ?~F , , ?!! xsd:dayTimeDuration ?B = 23.14.15 ] @@ zipMin |  ://noScheme (  ) ; :: { ex::doubleColon(?*, ""{"") ( } .
ex: [ List<owl:AnnotationProperty> 123 , ] 123 :: { ottr:Triple(<unclosedIRI, , ?m\L) , } .
badPrefix:Type [ xsd:integer List ,  ] { o-rdf:Type(?Z}, _:b2) } .
ex:Template1 [ ! xsd:invalidType "string" ?!  = _:b1 invalid |  @@ cross http://example.com/:Annotation ( badPrefix:string ) :: { LUB 
:Triple :: { ottr:IRI  } .
:noPrefix [ xsd::doubleColon @ ?var ( ++ (  ) ) , ex:Invalid Space ) :: ( ottr:Triple(_:blank http://example.com/:Annotation ?P6) , ) .
http://invalid [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ NEList<owl:rational>badPrefix:string "string" , , ?! xsd:gMonthDay , ? "string"   ]  :: { ottr:Triple("unclosed, , "unclosed)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?[, invalid) } .
<unclosedIRI [ xsd:gYear ?u , ]  :: { ottr: } .
ex::doubleColon  xsd:invalidType  @@ cross |  123 ( 123 ^^ List ) ) :: { o-rdf:Type(?J, none) , } ;
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 ++ xsd:short   @@  ottr:IRI (  ) :: { ://noScheme(_:blank, _:b2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
?var :: BASE .
xsd:Template2 [ ?? NEList<<LUB<xsd:boolean>>>LUB ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ <unclosedIRI ( "string" ) :: { ottr:IRI _:blank }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] :noType :: { ottr:Triple(_:blank o-rdf:Footballer "}") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(://noScheme, ex:, ?*Q) ; } .
ex::doubleColon [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ List<List<NEList<owl:NamedIndividual ottr:>>> ?K , ] :: { List } .
:noPrefix ?! xsd::doubleColon  @@ bad::IRI ( "malformed"^^bad:datatype ^^ xsd:invalidType ++ ++ ( (  ) ,, ) ) cross |  ) ( :: {  } .
ex:Invalid Space [ ++ xsd:positiveInteger ?r& = 23.14.15 , "unclosed zipMax |  @@ zipMin |  123 (  ) :: { ex:(?j, invalid) 
owl:Template1 [  xsd:unsignedByte , ,  @@ "unclosed :: ( o-rdf:Type(?!, _:b1) ://noScheme(_:blank, 23.14.15) ,  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Invalid Space [ ] :: { ottr:Triple("k", badPrefix:Template2, ?() ?var ( _:blank zipMax |  ) }
ottr:IRI [ ++ ++ xsd:long ?VE = invalid^^type , "string" ?K , , List<ex::doubleColon> ?!: , ] 123 :: BASE .
://noScheme [ LUB<xsd:NCName>badPrefix:string 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ex:Invalid Space(_:blank, xsd:invalidType) , } .
http://invalid [  @@   , @@  :noPrefix ( invalid term xsd::doubleColon ) :: { ottr:Triple(?" bad::IRI ""+*"") ( } .
ex: [ ? xsd:positiveInteger ] :: {  } .
<unclosedIRI :: { o-rdf:Type(?p, "invalid"^^:noPrefix) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template1 invalid @@ cross ex:Template1 ( ?) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?;[, owl:Type, _:b1) } )
ex:Annotation [ invalid |  xsd:unsignedByte  , ?? ottr:IRI  @@ zipMin |  :Triple ( _:blank ,  ) , :: { ottr: 
bad::IRI [   ?" ,  ] :: { ex:("unclosed, ""g*<A*"") } .
123 [ <unclosedIRI ] "string" :: { ottr:IRI (  ,  ) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Invalid Space :: BASE .
://noScheme ?? "string" = :noType , @@ :noPrefix _:blank zipMax |  , @@ zipMin |  ex:Invalid Space ( List ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] @  ex::doubleColon (  ) :: { o-rdf:Type(?H:, ?+) ottr:Triple(_:blank, , _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?) foot:Type badPrefix:string) ; } .
?var [ LUB<<List<rdfs:Resource>>>invalid xsd:invalidType ? rdf:XMLLiteral 123 = 23.14.15  :: {  
o-rdf:Template2 [ ] .: { ">" } 
http://example.com/:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?$5 :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  "string" ( _:blank , (  ) ^^ ottr: ,, ) ) .
foot:Template1 :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ LUB<xsd:float> ?1| , ] @@ ex:Invalid Space ( ex::doubleColon ) :: BASE .
bad::IRI [ ?!! LUB<<List<xsd:gYear>>>xsd:invalidType  = invalid^^type  :: { ://noScheme(?P7, ?var) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ :noPrefix ++ ++ ?H^]O zipMax |  :: {  } .
<unclosedIRI [  ] :: { o-rdf:Type(_:blank, ?() ottr:Triple("unclosed, http://invalid, none) } .
 [ ++ "string"  , , xsd::doubleColon ] invalid :: { ottr:Triple(?N badPrefix:Invalid Space _:b1) ( 
123 [ ] :: BASE
ottr:Footballer [   xsd:Name ?! xsd:time ,  ] @@ ?var  @@ ottr:IRI (  ) :: { ex::doubleColon(?Lfcn, 23.14.15) , }
ottr:IRI [  ?<, List<<xsd:decimal>>xsd:invalidType ?var , ] { ://noScheme(_:blank, _:b1) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("unclosed xsd:Invalid Space ?h) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [   xsd:hexBinary "string"  , owl:NamedIndividual 123 ] @@ cross ex:Template1 ( ?* ) :: { ottr:Triple(?j\, ex:, :noPrefix) , } .
"string" [ ? ?c(7@q = "value"^^invalid , ,  @@ ex:Invalid Space ( _:blank cross |  ) :: {   } .
<unclosedIRI [ List ] :: {  } .
ex::doubleColon ?! LUB  @@ zipMin |  123 ( invalid ,, ) , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
http://invalid [ ] :: { badPrefix:string 
foot:Triple :: ( ex::doubleColon(?p, "malformed"^^bad:datatype) o-rdf:Type(?0, 23.14.15) ) ) .
123 [ ++ ++ badPrefix:string 123  ?$4b =  ] <: { ottr:Triple(_:blank, :Footballer, ?d) } ..
ex:Invalid Space [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || badPrefix:Annotation ( "string" ) :: {  } .
http://invalid [ xsd:gYearMonth ?. , ?? List<rdf:HTML>:noType ?\(/_ = 23.14.15 , ,  ] @@ xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?P[I  "L*,^*") ex: } .
ex::doubleColon :: { ://noScheme(?var, none) ; } .
:noPrefix [ List ]  :: { <unclosedIRI ++ (  ) ) ,  }
bad::IRI [   xsd:int , invalid |  @@ "string" ( ++ ++ ( _:b2 ,, ) ,, ) :: { o-rdf:Type(?0, "unclosed) , } (
owl:Triple ! xsd:double ?S = -7+.1+ @@  o-rdf:Type ( ottr: ) ) :: BASE
ottr:IRI [ xsd:nonNegativeInteger ?v ,  ?P= ] :: { badPrefix:string 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 :: BASE .
ex:Invalid Space [  invalid |  @@ owl:Type ( ex: ) :: { ottr:Triple(_:blank, :noPrefix, "string") , o-rdf:Type("<*", true) ottr:Triple(?? xsd:Template2 ?}) } .
bad::IRI [ :noType ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon  NEList<xsd:unsignedInt>LUB  ?!! xsd:nonPositiveInteger , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  ://noScheme (  ) ) :: {  } .
 [ ++ ++ 123 = "unclosed , ] invalid :: { <unclosedIRI(?:U, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { http://invalid ( ex:Triple , "string" ,, ) ) ++ ( invalid term ) , ""9"" ^^  } 
?var [ ] :: BASE
badPrefix:Footballer [ xsd:double List ] { o-rdf:Type(?~H!n, "invalid"^^bad::IRI) , } .
ottr:IRI [ ?! List<xsd:long>xsd::doubleColon  = 23.14.15 ] @@ cross |  :Footballer ( ""E+"" ,, ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: { <unclosedIRI(_:blank, abc) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "unclosed } 
"string" :: {  } .
ex:Invalid Space [ ? xsd:NCName , ,  ] 123 :: { ottr:Triple(?SD|, ex:Annotation, ?s) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ://noScheme ( _:blank ?>Y ^^  ,  ) :: { ottr:Triple(http://invalid ex::doubleColon List) } .
bad::IRI [ ?!! invalid "string" , ] { o-rdf:Type(?w, "2023-01-01"^^xsd:date) ( } .
?var [ xsd:invalidType ] :: (  ++ ++ ( (  ) ) ) ) .
ottr:Triple xsd:gDay 123 , xsd:integer badPrefix:string 123 ?] invalid |  xsd:string ?v} , ++ ?Q = ?+  :: BASE
owl:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ List<"unclosed> ?o" , ,   owl:rational 123  ] :: { o-rdf:Type(?p, LUB) } ,
://noScheme [ ex: @ ottr:IRI "unclosed zipMin |  :: { :noPrefix(_:blank, abc.-1+) http://invalid ( _:blank ) } .
<unclosedIRI [ xsd:gMonth invalid , ! xsd:byte  ] @@ xsd::doubleColon :: { ottr:Triple(_:blank, bad::IRI, ?hs) ,  } .
 ++ :noType ?J , @@  ex::doubleColon (  ^^ badPrefix:string , ++ (  ) ,, ) , @@ invalid |  123 ( ottr: ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("_" badPrefix:Triple ""[*Ea*"") , } .
ex:Invalid Space : { bad::IRI(?`8d, _:b1) ; } ...
xsd:Template2 [ ] :: BASE
:Template1 [ ?! LUB<rdfs:Resource>xsd:invalidType "string" = "unclosed ?!! xsd:boolean   :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: {  ottr:IRI ( (  , ( ?var 1 ) ) ,, ) ^^ xsd:invalidType zipMax |  ) } .
:Template2 [ ?! ?w% = "string" @@ ex:Invalid Space _:blank @@  ( ++ ++ 3+ ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
:noPrefix [ xsd:integer "=+" ++ NEList<xsd:gYearMonth>:noType 123 = 23.14.15 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
://noScheme   badPrefix:string ?S , @ invalid |  <unclosedIRI ( ex: ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
bad::IRI [ invalid ] ottr: :: { o-rdf:Type("?*", xsd::doubleColon) , ottr:Triple(?N{, o-rdf:Invalid Space, ?~I,V) } .
http://invalid [ ] :: ( ex::doubleColon(_:blank, _:b1) ) ) .
123 [ ++ ++ xsd:double , ,  ] @@ ex:Annotation ?mK0 ) :: BASE
foot:Type [ none:bad::IRI ?2} ] { ottr:Triple(?$ xsd:Template1 abc.-8+) ottr:Triple(?], <unclosedIRI, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ]  :: BASE .
xsd:Triple [ invalid |  rdfs:Datatype ?A# @@ ex:Template1 ( ?4 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ottr:IRI List<xsd:dayTimeDuration>xsd:invalidType :noPrefix , , 123 ?}/h , List<List<NEList<List<List<?? xsd:Name  = 23.14.15>>>>> ?3' xsd:unsignedLong 123 , @@ ?var :: { http://invalid(?=, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space :: { ottr:Triple(_:blank ://noScheme "f*") , ottr:Triple(LUB, :Template1, ?R%+) } .
 [ invalid ] List :: {  ex: ( _:blank , xsd::doubleColon ) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?!, none) ex::doubleColon(?E{, "unclosed) ) } .
<unclosedIRI [ ] :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
badPrefix:Template2 [ ! "string"  , ? ottr:IRI ?9O =  , ?! xsd:nonNegativeInteger , ] { "unclosed } .
123 [ ?var 1 ?, ,  :noType ?Bw , ] "unclosed :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   "string" = ex: ] :: {  } .
xsd:Annotation ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: BASE
ex::doubleColon :: { o-rdf:Type(ottr:, "string") , ottr:Triple(?q$g, ://noScheme, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex:Template2 ??) ex:Invalid Space(?Ppd, 1+) , } .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] @@ wrong <unclosedIRI ( ++ ++ ""E*"" , o-rdf:Template1 ,, ) @@ http://invalid ( invalid ) :: {  ++  ( ( 23.14.15 ,, ) ,  ) ) ^^ List  } ;
?var [ xsd:byte LUB 123 ?jz , ,  @ zipMin |  foot:Footballer (  ) :: { "c*7%*" }
http://example.com/:Invalid Space ?! NEList<<LUB<xsd:positiveInteger>>>xsd::doubleColon 123 = "value"^^invalid @@ ex:Template1 ( ?\>] >: { o-rdf:Type(?O, "unclosed) } 
<unclosedIRI [ NEList<"Q*"> ?X , ] badPrefix:string :: ( ex::doubleColon ) .
"string" [ ] :: { o-rdf:Type(?9;, "invalid"^^bad::IRI) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Invalid Space [  cross @@ ottr:IRI ( ++ ++ 123 zipMax |  ) :: BASE .
ex:Invalid Space  LUB<owl:ObjectProperty>List ?h =  , , ? owl:Class "string" = "unclosed @ zipMin |   (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  ?var ( _:blank ,, ) @@ ex: ?var 1 ^^ xsd::doubleColon :: { ://noScheme(123, LUB) , ottr:Triple(_:blank, :noPrefix, ?]$) , } .
foot:Triple :: { invalid |  :Annotation ( xsd:invalidType ) } .
badPrefix:Footballer [ xsd:token ?x :noType ] :: { ottr:Triple(?rSg}& ottr:Template2 "unclosed) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?<`, ""a+"")  
http://example.com/:Type [   xsd:dayTimeDuration , ++ ++ xsd:anyURI , ,  @@  ex::doubleColon ( ++ (  ) _:blank ,  ) ; :: { o-rdf:Type(?j, 23.14.15) ( } ,
bad::IRI [ xsd:language ex:Invalid Space , @@ o-rdf:Triple  , @@ ?var ( ++ ++  "string" ) :: { ottr:Triple(invalid, ex::doubleColon, -4+.abc) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?> ,  ] @@  http://invalid ( ++ invalid term , _:blank zipMax |  ) ( :: BASE .
<unclosedIRI "unclosed @@ zipMin |  ex: ( :Annotation ^^ LUB ) :: BASE
://noScheme [   List<<owl:Class>>:noType ?a_ = ( ( ""|*"" ) ,   ! "string" = invalid^^type ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?! badPrefix:string 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { cross |  :noPrefix ( ( (  ) , _:b1 ,, ) ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(_:blank, ottr:) , ottr:Triple(?G xsd:Template1 ?X) } .
ottr:Type :: { "%*c0*" } .
foot:Invalid Space [ ? ottr:Bot ?$9 = 23.14.15 , xsd:boolean ?o invalid |  xsd:negativeInteger ?ps , ,  xsd:time , "2023-01-01"^^xsd:date ?(1K , ] {  } .
owl:Template2 [ ] :: { o-rdf:Type(?O, 9+) , 
?var [ ] :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Type [ List<List<List<NEList<<LUB<xsd:unsignedInt>>>xsd:invalidType 123>>> ?V ] :noPrefix :: BASE .
ex:Invalid Space [   xsd:float , , badPrefix:string ] @ ottr:IRI ( _:blank ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: { ottr:Triple(?!D, ottr:Invalid Space, _:b1) } .
bad::IRI [ ? ?4  , @@ ex::doubleColon invalid ) :: { ex:("8+", ?%) ottr:Triple(_:blank <unclosedIRI 123) , } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "string" ?PFj&]A ) :: { ottr: } .
http://invalid [ xsd:normalizedString xsd::doubleColon , ++ ++ xsd:dayTimeDuration  = "value"^^invalid  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?b, 2+) ,  foot:Annotation (  ) ) .
badPrefix:Footballer [ ++ xsd:gMonth "string"  , ] @@ ex:Invalid Space  , @@ <unclosedIRI (  ) :: { ottr:Triple(_:blank, <unclosedIRI, "2023-01-01"^^xsd:date) ( } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space [ ! xsd::doubleColon  , , List ] { bad::IRI(?u, ?jOD6) } .
<unclosedIRI [ ?!! xsd:decimal ] @@ zipMax |  "string" ( -1+ ^^  ,, ) @@ ottr:IRI ( "string"^^^xsd:string ) ++ ( ?<y ,  ) ) invalid |  :: BASE .
:noPrefix [ LUB<owl:ObjectProperty>invalid ://noScheme ++ xsd:long 123 = "value"^^invalid , ] ?var :: { o-rdf:Type(LUB, "M+") http://invalid } .
ex: [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, foot:Type, none) ( } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ( ++ ++ true ) :: { ottr:Triple(?8 ex:Invalid Space "2023-01-01"^^xsd:date) ,  } .
123 [ ] {: { (?1, http://example.com/:Annotation) , } .
ex:Footballer NEList<++ ++ xsd:hexBinary> ?Xl , ?? "string"  , cross @@  "string" (  ) :: BASE
o-rdf:Template2 :: { zipMin |  :Template1 ( "f*:`*" ) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?lc, ex:Invalid Space, none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  List<List<xsd:language>xsd::doubleColon> ??& , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { "G*IB*" } .
owl:Template1 [ ] :: BASE .
 [ ?! xsd:NCName "string" = "value"^^invalid  :: { "string" ( (  ) ) invalid term ^^ List ) } .
bad::IRI  @@ ://noScheme _:blank invalid |  ( :: { :noPrefix(_:blank, <unclosedIRI) } .
http://invalid [ owl:AnnotationProperty ?R , , 123 ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?!!    xsd:int , ] @@ ex: (  ) @@ zipMax |  ?var (  ) :: { o-rdf:Type(invalid, ?E) ,  } .
:Type [ ! xsd:unsignedByte ,  ]  :: { ottr:Triple(_:blank xsd:Footballer _:b2) o-rdf:Type(_:blank, "unclosed) , } ,
ottr:Template2 :: BASE
ottr:IRI [ "2023-01-01"^^xsd:date ,, ?ko , ] :: { 123 (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ "string" ?# @@ LUB :: BASE .
o-rdf:Template1 ?? xsd:dateTimeStamp , "-*;&*" @ <unclosedIRI ++ "string" ,, :: BASE
://noScheme :: { :noPrefix(?$%[, none) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: ?RY5( ) :: { ottr:Triple(_:blank ex:Invalid Space ?var) , } .
 [ ?!! owl:NamedIndividual   , ,  ] http://invalid :: { o-rdf:Type(ottr:, ?,) ottr:Triple(_:blank, ex::doubleColon, "malformed"^^bad:datatype) ; } .
http://example.com/:Footballer [ ] :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ottr:Template2 [ zipMax |  xsd:anyURI 123 ? owl:real "string" = "value"^^invalid ] { ottr:Triple(?e ex:Annotation xsd:Triple) , xsd:invalidType } .
http://example.com/:Triple :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: {  } .
?var [   rdfs:Literal 123 = "unclosed , ,  ] @@ ex:Invalid Space (  ) , @@ zipMax |  ex: (  ) :: ( ex::doubleColon ++ (  ) ,, ) .
<unclosedIRI [  List<ottr:Bot>LUB ?Mk  ] :: { "x*Tq*" } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  bad::IRI (  ) @@   :: { ://noScheme(?;, "unclosed) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ; } .
"string" [ http://invalid ] 123 :: { ottr:Triple( ex: ?rOB|o0Pn) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
ottr:IRI cross |  xsd:NCName  , ?!! owl:ObjectProperty  @ <unclosedIRI (  ) :: { ottr:Triple(?*, ottr:Template1, "malformed"^^bad:datatype) 
xsd:Template2 [ owl:Class "string" , ] { :noPrefix(?^, invalid) , ://noScheme(?GeR$, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var } .
o-rdf:Annotation [  ?iB ] ex::doubleColon :: { o-rdf:Type(_:blank, ?N) , }
<unclosedIRI [ xsd:positiveInteger "unclosed  xsd:duration , ,  zipMin |  @@ invalid |  ottr:IRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { ottr:Triple( badPrefix:Template2 invalid) , } .
   123 = "malformed"^^bad:datatype , @@ http://invalid ( ( 23.14.15 ,, ) ) , _:b2 ) ^^ LUB ,, , @@ :noPrefix ( ++ ++ invalid term ++ ?' ) :: { ex:Invalid Space(?J;, foot:Triple) } .
ex: [ ?! xsd:dateTime   , List ] @@ zipMax |  bad::IRI (  ) ; :: { ottr:Triple(?4, ://noScheme, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
xsd:Template1 :: BASE
owl:Type cross |  xsd:time "string" , @@ zipMax |  ex:Invalid Space (  ) @@ ottr:IRI (  ) :: {  :Footballer ( _:blank ,  ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, "invalid"^^ex:) } .
ottr:IRI List<xsd:unsignedLong>List 123 , , ++ xsd:language  = invalid^^type   xsd:decimal "string"  , @@ "-" :: { ottr:Triple(ottr:, ottr:Type, 123) , }
bad::IRI [ <unclosedIRI ] @@ ?var _:blank wrong ( :: BASE .
o-rdf:Template2 [ bad:foaf:name ?t , ?!! ?%pz = 23.14.15 ] xsd::doubleColon :: { zipMax |  ex::doubleColon ( LUB ) } .
:noPrefix [  ] :: { ottr:Triple(?3 http://invalid ?.|) ) } .
 [ ] :: {  } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ex:Invalid Space(??F, ""A*BK*"") ://noScheme(?0i, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?! xsd:short  xsd:duration ?(/b , xsd:positiveInteger "unclosed , @@ foot:Triple ( ( ( ?}> ,, ) ) ) ^^ badPrefix:string ,, ) :: ( xsd:invalidType ) .
:Template1 :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Ma, 23.14.15) , ex::doubleColon } .
owl:Triple ?var @@ "string" ( ottr: ) :: BASE .
 [   owl:real , , ++ xsd:unsignedInt ,  ] @@ :noPrefix  , @@ http://invalid (  ) :: { ottr:Triple(_:blank, <unclosedIRI, "~*Uy*") } .
bad::IRI :: { ://noScheme(List, ?|,) ( } .
ex:Invalid Space [ ! ?O@ = (  ) , ] :: { ottr:Triple(?"gv o-rdf:Annotation true) , } .
ex: [ ] :: { zipMax |  123 ( ++ "string"^^^xsd:string zipMin |  ) 
http://example.com/:Type [ List<xsd:date>xsd:invalidType  ] { o-rdf:Type(?-%i, "malformed"^^bad:datatype)  } .
foot:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB ; { o-rdf:Type(?}t>, -4+) , } ..
foot:Type [ ] :: BASE .
://noScheme [ ++ ++ rdfs:Datatype ?!! xsd:dateTimeStamp "string"  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ?var (  ) :: { ex::doubleColon(_:blank, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: {  
http://invalid  cross |  @@ zipMin |  ex: ( 23.14.15 ^^ invalid ) :: { "string" } .
bad::IRI [ invalid |  NEList<xsd:integer>ottr: ?Z- , ] "i+" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?*, ?Ra) ottr:Triple(xsd:invalidType :noPrefix "malformed"^^bad:datatype) , ottr:Triple(LUB, :Triple, <unclosedIRI) , } .
123 [  ] :: { ex:Invalid Space "string"^^^xsd:string , ++ ( 123 ) ,, } ;
 [ "string" ?] , ? badPrefix:string  ] { http://invalid(?x, badPrefix:Invalid Space) } .
owl:Template2 [ owl:AnnotationProperty "r*68*" , ]  :: { ottr:Triple(?|, http://example.com/:Footballer, ""unclosed") ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: BASE .
badPrefix:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross |  ottr:IRI ( ( ( , ) ,  ) ^^ List zipMax |  ) ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
123 [  ] bad::IRI :: { o-rdf:Type(?xb, "h") , ottr:Triple(xsd:invalidType ex::doubleColon _:b2) , } .
 [ ?! :noType "string" , rdfs:Literal 123 , ,  ] @@ ex:Invalid Space (  ) @@ http://invalid  :: { ottr:Triple(_:blank, ://noScheme, ?-Ml) } .
"string" [   List<<rdf:HTML>>invalid , ] :: { :noPrefix(?var, 0+)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  <unclosedIRI ( _:blank ,, ) } .
xsd:Invalid Space  xsd:decimal ?6 @@ ottr: :: { ottr:Triple(?C owl:Annotation "malformed"^^bad:datatype) , 
ottr:Triple [ ] :: BASE
ex:Invalid Space [ ? xsd:float   "unclosed ] @@ invalid |  ottr:IRI (  ) , @@ ?var  :: { LUB }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { owl:Annotation ( ++ ( invalid term ) ) ) } .
bad::IRI :: { ottr:Triple(xsd::doubleColon, ex:Invalid Space, ex::doubleColon) , } .
:noPrefix ++ rdfs:Literal 123 = "malformed"^^bad:datatype , @@ "string" :: { ottr:Triple(_:blank ://noScheme _:b2) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ,  } .
ex: [   owl:AnnotationProperty   , ?!! List "string" ] :: { <unclosedIRI(?T, ?0) , } .
http://invalid [ "unclosed ] ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
123 [  ] { xsd:invalidType } .
 [ ! xsd:long , ,  xsd:gMonth  ] @ zipMin |  ?var (  ) :: { ottr:Triple(_:blank ex:Template1 abc.abc) }
"string" [ List<bad:foaf:name ?trlQ>|> ?T LUB<xsd:nonPositiveInteger>LUB ?qL , , ?? xsd:unsignedByte @@ ottr:Type ( ++ ex:Annotation ,  ) , :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?var badPrefix:Footballer ?Jz) ://noScheme ++ ++ "string"^^^xsd:string 
ex:Invalid Space [ ++ xsd:date "string" = invalid^^type , ] :: { bad::IRI(?XV, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, "n*"$*") ; } .
<unclosedIRI [ ? xsd:positiveInteger ,  ] @@ ex:  , @@ zipMax |  ex::doubleColon (  ) :: { ottr:Triple(_:blank, :noPrefix, 23.14.15) ,  } .
123 [ badPrefix:string ] invalid :: (  ) .
xsd:Template2 [ ] :: { o-rdf:Type(?y2, "unclosed) }
:Template1 [ xsd:unsignedLong  ] @ invalid |  foot:Invalid Space ( ottr: ) :: { o-rdf:Type(?D, "2023-01-01"^^xsd:date) ) } (
ottr:IRI [ xsd:nonPositiveInteger "string" ++ ++ owl:NamedIndividual ?L = 23.14.15 , ? LUB<<List<xsd:token>>>xsd:invalidType ] "D" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple ?var ?*3: , zipMax |  @@ 123 "string" :: { bad::IRI } .
://noScheme [ ?? badPrefix:string 123 , ,  @ invalid |  ex:Invalid Space ( _:blank , ++ ( _:b2 ,, ) ,, ) :: { ex: ( ++ ++  (  ) ) ^^ ottr: ) 
ex::doubleColon :: { ottr:Triple(_:blank, , ""r+"") } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross http://invalid ( invalid term cross |  ) :: { o-rdf:Type(?/-, invalid) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: { ottr:Triple(LUB ex:Template2 ?!cw)  } .
owl:Type [ :noType ] :: { :noPrefix(?<, "malformed"^^bad:datatype) , ottr:Triple(?}1h, http://example.com/:Annotation, 23.14.15) , }
ottr:Footballer [ List<"Z*"> ?#> , @@  :: ( ottr:Triple(?\W{E+&i, :Template1, _:b1) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] { o-rdf:Type(?X, ?kq) ottr:Triple(_:blank, , 23.14.15) , bad::IRI("L+", :noType) } .
123 [ ? rdfs:Datatype "string" = 23.14.15 xsd:boolean ?var , ! xsd:normalizedString ] @@ <unclosedIRI ++ ++ "malformed"^^bad:datatype cross |  , @@ :Footballer (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ List @@ zipMin |  http://invalid ( "string"^^^xsd:string ,, ) :: { ex::doubleColon } .
ex: :: { ottr:Triple(?+ http://example.com/:Annotation none) , } .
ex:Invalid Space ++ NEList<<LUB<ottr:IRI>>> ?{HC = 123 ,  :: {  } .
:noPrefix [ ] :: { ottr:Triple(?u, foot:Invalid Space, "2023-01-01"^^xsd:date) , }
"string" [ ++ ++  = ottr: , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { zipMax |  badPrefix:Template1 ( ++ ( ?c ,, ) ) "~*" ) } (
ex:Type [ "string" ?_@i7 , , xsd:negativeInteger ?, , ] :: ( http://invalid(?orBM, _:b2) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [  ] {   ( "string"^^^xsd:string ^^ :noType zipMin |  ) } .
foot:Triple ++ ++ rdfs:Literal   , invalid |  xsd:short 123 , , :noPrefix @@ ex: _:blank  , :: { "%*" } .
bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(xsd::doubleColon, ?hi) ) } .
ex:Invalid Space [  ] @@ ://noScheme ?V ) :: { ottr:Triple(_:blank, <unclosedIRI, _:b1) , ottr:Triple(_:blank ex::doubleColon none) } .
"string" [ ] :: {  }
ottr:IRI [ owl:Class "string" , ] ?var :: { ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) o-rdf:Type(?6=, ottr:) , 
123 [ ? xsd:positiveInteger  zipMax |  @@ ottr:IRI (  ) (: { ottr:Triple(_:blank ex:Invalid Space "2023-01-01"^^xsd:date) ; } ...
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
owl:Template2 [ ] :: BASE .
ottr:IRI :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  NEList<<LUB<xsd:nonPositiveInteger>>> 123 = invalid^^type xsd:unsignedShort ?&;/ , ] @@ ex:Template1 ( ?AF :: { List } .
http://invalid [  ] "j+" :: { (_:blank, ex::doubleColon) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Z%Ja, ""_"") ottr:Triple("string" :Invalid Space invalid) , ottr:Triple(?eQ, ex:Invalid Space, ?L) , } .
bad::IRI NEList<List<List<++ ++  = "malformed"^^bad:datatype>>> ?) , xsd:invalidType @@ zipMax |  :noPrefix ( ( ( , ) ,, ) ^^ ottr: , ++ ( abc ,  ) ) ) :: { ex: "string" ,, }
123 [ ?! xsd:time "string"  , , ! badPrefix:string "string"  ; { ://noScheme(_:blank, "2023-01-01"^^xsd:date) } ..
foot:Template1 ? xsd:NMTOKEN @ ottr:IRI (  ) :: { o-rdf:Type(?g[s, 6+.abc) , } (
foot:Invalid Space [  ] ex: :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ List< NEList<owl:Class>> ?3 , , zipMin |  xsd:date 123 , ] @@ 123  ; :: {  ottr:IRI ( ++ ( invalid ,  ) ) ,, ) } .
:noPrefix [ xsd:time "string" ] {  } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  ://noScheme ( ?)ld "\+" ) @@ <unclosedIRI ( ++ ++ invalid term ) :: { xsd::doubleColon } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?q6UA, ?Y) , (xsd:invalidType, LUB) ( } .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ xsd:NMTOKEN "string" ?! xsd:dateTimeStamp   ,  ] :: { ottr:Triple(_:blank  _:b2) , } .
?var [ :noType @@ invalid |  "string" (  ) ;: { ottr:Triple(??, <unclosedIRI, "malformed"^^bad:datatype) ottr:Triple(_:blank, ex:, "2023-01-01"^^xsd:date) } .
http://example.com/:Footballer :: ( ottr:Triple(?P, :Annotation, "unclosed) , ) .
123 [ ] :: BASE .
owl:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ ottr:IRI ( 123 zipMax |  ) :: { <unclosedIRI(_:blank, ?<) o-rdf:Type(?BF, 6+) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ LUB<xsd:string>List ?t @@ ://noScheme :: { invalid |  http://invalid ( ++ ( invalid term ) ) ,  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "f+" } .
ex: [ ++ owl:real , ] @@ ex::doubleColon (  ) , @@ ex:Invalid Space  :: { ottr:Triple(_:blank bad::IRI :noType) ,  } .
"string" [ ?var ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { ottr:Triple(badPrefix:string, xsd:Invalid Space, "invalid"^^http://invalid) ; }
o-rdf:Annotation [ ?!!   , , cross |  xsd:decimal "string" ,   owl:ObjectProperty  = 23.14.15  ] :: BASE
:Footballer [  ] @@  <unclosedIRI (  ) @@ cross |  ottr:Template1 (  ) :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) 
ottr:Template1 [  ] @ invalid |  ottr:IRI ( ex: ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" ? xsd:NMTOKEN , @@ ?var :: { ottr:Triple(?;9 ex:Invalid Space ) "c*Fe*" } .
<unclosedIRI [ ?! LUB<<List<rdfs:Literal>>>invalid ?s = invalid^^type @@ bad::IRI 123 @@ :noPrefix ( ++ ++ ( ( , ) ,, ) , ( "malformed"^^bad:datatype ) ) ^^ List _:blank cross |  ) :: { o-rdf:Type(LUB, _:b2) , } .
http://invalid :: {  } .
ex::doubleColon [ ! ottr:IRI "string" = 23.14.15 , xsd:invalidType ] :: { ://noScheme(_:blank, ?y) } .
 [ ] :: { ottr:Triple(?7, :Type, none) ) }
123 [ xsd:anyURI  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { zipMin |  foot:Triple (  ) } .
123 [  ] :noType ; { bad::IRI(_:blank, "unclosed) , <unclosedIRI(_:blank, "2023-01-01"^^xsd:date) ; } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ zipMin |  foot:Triple ( _:blank cross ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "unclosed } .
?var :: {  }
bad::IRI [ ] :: { http://invalid(ex:Invalid Space, ex:Template1) ottr:Triple(?f# badPrefix:Annotation ?F) , ottr:Triple(_:blank, , ) } .
://noScheme [ ?! LUB<xsd:token>xsd::doubleColon  ] LUB :: { <unclosedIRI "string" } .
:noPrefix [ 123 ?O , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon badPrefix:string @@ cross |  http://example.com/:Template2 ( "string" ) , @@ ex: ( (  ) ^^ ottr: , ++ ""p+"" ,, ) :: BASE
ex::doubleColon [ ?!! rdfs:Literal 123 = "unclosed @@ ?var  @@ zipMax |  ottr:IRI (  ) : { o-rdf:Type(?ra{", _:b2) , } ..
ottr:IRI [   xsd:gMonthDay ,  ] @@ invalid |  ?var ( _:blank  ) ( :: { ottr:Triple(?& o-rdf:Footballer none) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("Z" ex: xsd:Footballer) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ?uI , xsd:dateTimeStamp "string" @ ottr:IRI ( ( "malformed"^^bad:datatype , 123 ) ) ^^ :noType ) :: {  } .
ex:Invalid Space [ invalid ]  :: BASE .
o-rdf:Type [ ] :: { ottr:Triple(_:blank, http://example.com/:Triple, <unclosedIRI) } .
://noScheme [  ] :: { cross ex::doubleColon ( ++ ++ ( 3+.abc ,, ) , ++ "string"^^^xsd:string ,, ) } .
http://invalid bad:integer ?C ?!! ?}kN8 =  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ""~+"" zipMax |  :: { badPrefix:string } .
 [ ? NEList<<LUB<rdfs:Literal>>>ottr: , ] { bad::IRI(?Yb, ?4) , } .
123 [ ++ LUB "string" xsd:unsignedInt ?v , invalid |  xsd:byte ?lO[ ?? xsd:unsignedLong ?QUL  , ] xsd::doubleColon :: { o-rdf:Type(?"r, _:b2) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 :: { ex:Invalid Space(?]`i, _:b1) , ottr:Triple(?\ foot:Annotation 23.14.15) ( 
?var [ ex:Invalid Space ] "I+" :: BASE .
badPrefix:Invalid Space [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 none:bad::IRI ?W4 invalid |  @@ ottr:IRI ( _:blank ( none ,  ) ,  ) :: {  } .
:noPrefix :: { ://noScheme(LUB, _:b2) } .
ex: [ ? "string" = 123 , ?? xsd:integer ?Vqe" = "value"^^invalid , @@ 123 :: { zipMin |  http://invalid ( ++ ++ (  ,, ) ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank ex::doubleColon ottr:) , ottr:Triple(?x[, ex:Template1, ?*) ) } .
"string" [ ! :noType ?]#C ++ NEList<<LUB<xsd:unsignedLong>>>List , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?;&D, "2023-01-01"^^xsd:date) , 
<unclosedIRI [ xsd:anyURI "B*Q7*" , ,  ?K ++ ++ xsd:dayTimeDuration ] @@ cross |  :Template2 ( xsd:invalidType ) , @@ bad::IRI  !: { badPrefix:string } .
http://example.com/:Triple [ ] :: ( ottr:Triple(?cf owl:Type abc) o-rdf:Type(?@, "malformed"^^bad:datatype) ( ) .
123 [ List<"~"> ?]= @@ ottr:IRI ( ++ ++ 123 ?var ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space ?! List<xsd:gYearMonth>xsd::doubleColon ?;o = 23.14.15 , @@ zipMax |  ex::doubleColon ( (  ) ) ^^ invalid ,  ) @@ ex:Footballer _:b1 :: { o-rdf:Type(_:blank, xsd:invalidType) ; } .
http://invalid :: { <unclosedIRI(:noPrefix, _:b2) , } .
 [ xsd:language ottr: ?? badPrefix:string  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMin |  bad::IRI ( ++ ( ?var 1 , none ,, )  ) ( :: { invalid |  ://noScheme ( _:blank ,, ) } .
"string" [ ] :: { ottr:Triple(?V, ex:, ?q) } .
o-rdf:Template1 [  ] :: { ottr:Triple(?T badPrefix:Annotation 23.14.15) ottr:Triple(?$|f ottr:Invalid Space invalid) , "unclosed 
:Triple [ ++ owl:DatatypeProperty "string" = ?y! , LUB ] {  } .
foot:Type [  xsd:integer , cross |  owl:real ?_ ++ ++ ?5 = "value"^^invalid xsd:gYear ?8 bad:decimal ?> ? :noType ?u , ,   owl:Class ?LC = invalid^^type , ] "[*I@*" :: BASE
:noPrefix [ ++ ++ xsd:hexBinary , ,   xsd::doubleColon "string" ] :: { ottr:Triple(_:blank, ex:Invalid Space, _:b2) , "string"  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?S(, "m*Te*") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation ! List<xsd:base64Binary>xsd:invalidType ?\ = 123 LUB @@ 123 :: BASE .
ottr:IRI [  ] @@ zipMax |  <unclosedIRI ( _:blank cross |  ) :: { ottr:Triple(bad::IRI ex: ?Pg)sx+) , } .
://noScheme :: {  } .
 [ wrong xsd:short  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { http://invalid(?O, invalid) ; } .
ex:Invalid Space [ rdf:HTML ?d7 , invalid |  @@ ex::doubleColon ( ( _:b1 , ?RM ) ) , ++ ( "string"^^^xsd:string ,, ) badPrefix:string ) :: { ottr: }
?var [ ] :: BASE
:Template2 [ xsd:dateTimeStamp "unclosed , , LUB<xsd:token> ?$, ] @@ || http://example.com/:Type ( ++ ++ "malformed"^^bad:datatype ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
123 :: { o-rdf:Type(?var, "malformed"^^bad:datatype) zipMin |  owl:Footballer ( ex: ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++  = ( (   ,, ) ,  :: BASE .
<unclosedIRI [ ] :: {  
bad::IRI ?!! xsd:invalidType ?xJ @@ "unclosed :: { ottr:Triple(?3, ://noScheme, ?|) } .
:noPrefix [   List<<xsd:time>>badPrefix:string , List ] :: { ex::doubleColon(_:blank, :noType) ) } .
http://invalid [ t-pnd:Punned-Class-ObjectProperty ottr:  ] @@ "string" ?> ) :: { ottr:Triple(?9% :Invalid Space none) , ex:Invalid Space(?5, _:b2) , } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: ( "q*&e*" ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
badPrefix:Template1 [ NEList<List<>> ?#N , , xsd:hexBinary 123 ? xsd:Name ,  ] @@ ottr:IRI _:blank cross |  , @@ 123 (  ) : { http://example.com/:Annotation (  ) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ 123 ] { ottr:Triple(_:blank http://invalid xsd:invalidType) o-rdf:Type(ex:Invalid Space, ?Fh) , } .
ottr:IRI [ ++ ?I = "string" ] zipMax |  @@ ://noScheme 123 ,, :: BASE .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Template1 ( ++ true invalid |  ) } .
ex: [ xsd:yearMonthDuration  ,  xsd:double ?*w = ( (  ) ,,  ++ ++ LUB<owl:real>badPrefix:string ,  :: { ""*" } .
:noPrefix [ ] :: { ottr:Triple(?il, owl:Type, xsd:Template2) } .
 [  ] ottr: :: { <unclosedIRI(?%&k, none) , } .
?var :: { bad::IRI(?=, _:b1) ,  } .
http://example.com/:Annotation xsd:unsignedLong xsd::doubleColon , , ?!! owl:rational ?? = "value"^^invalid List<zipMin |  xsd:duration ?p> ?6! 123 ?: , @@ cross |  foot:Triple ( _:blank ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?]KAG, ""unclosed") ( } 
o-rdf:Triple :: { ottr:Triple(_:blank ex::doubleColon ?'?) ://noScheme(?C, ex:Template2) ) } .
?var  xsd:normalizedString 123  ?? xsd:gMonthDay , ,  @@ http://invalid  , @@ ottr:IRI (  ) :: BASE .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "5" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ invalid ] :: { ottr:Triple(123, badPrefix:Type, bad::IRI) ,  } .
 [ ] :: { o-rdf:Type(?z, 6+) , } .
ex: [ "string" ?% , ++ ++ xsd:anyURI , zipMin |  @@ :noPrefix  :: { zipMax |   ( _:blank  ) } .
owl:Footballer [   badPrefix:string ?wa\ ] @ cross |  foot:Annotation ( ++ "malformed"^^bad:datatype ) :: BASE
xsd:Template1 [ ?!   , , ? List<<xsd:unsignedByte>>LUB "string" = "value"^^invalid ,  ] { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( bad::IRI(?-EP, false) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ none:decimal ?k , ] :: { ottr:Triple(?P\, ottr:Invalid Space "string") } .
ex: [ ?! NEList<<LUB<owl:AnnotationProperty>>>ottr: ?Ms = 123 , ? xsd:short ] @@ "6" :: BASE .
http://example.com/:Type :: { o-rdf:Type(:noType, ?(r) ; } ,
ottr:IRI ex:Invalid Space @@ cross ://noScheme ( ++ ++ ?var 1 _:blank cross |  ) :: {  } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |   ( ++ ( ( ""p+"" ,, ) ) ) ,, ) , @@ bad::IRI invalid :: { http://invalid (  ) } .
ex::doubleColon [ ] :: { ottr:Triple(_:blank, :noPrefix, "unclosed) , } .
?var [ ?!! List "string" , ,  ] badPrefix:string :: { ex:(?5, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } ..
ex:Footballer [ ++ ++ xsd:gYearMonth   xsd:string ,  ] { ottr:Triple(_:blank ://noScheme 23.14.15) ottr:Triple(_:blank <unclosedIRI "malformed"^^bad:datatype) ( } .
ex: [ ] :: { ottr:Triple(?n, ex:Invalid Space, "unclosed) (_:blank, ?8?) , } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( "string" ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var  @ :noPrefix ( 1..2 ,, ) :: {  :Footballer ( "string" ^^ xsd::doubleColon ) } .
ex:Invalid Space [ ex::doubleColon ] badPrefix:string :: { o-rdf:Type(xsd:invalidType, -8+) , ottr:Triple(?- bad::IRI _:b2) ( } .
<unclosedIRI :: { http://invalid(?/, "2023-01-01"^^xsd:date) } .
://noScheme [ invalid term , ( (  ) ) ) ,, ?p) ++ ++ LUB<rdfs:Datatype>LUB ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ ottr: ?9 , ?!! xsd:unsignedLong 123 =  , , owl:ObjectProperty "2" ] @@ xsd:Template1  :: BASE
ottr:Template2 [ zipMax |  xsd:time ?4v ] @@ :noType :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { ottr:Triple(_:blank ex:Invalid Space 1..2) , }
bad::IRI [ 123 @@ wrong ottr:IRI ( ++ ++ invalid term invalid |  ) @@ http://example.com/:Template2 ( ++ (  ) ) _:blank ,  ) :: { ottr:Triple("unclosed, ex:Type, ?;) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
 [ zipMin |  NEList<xsd:unsignedInt>xsd:invalidType  ] :: { o-rdf:Type(?#w, ottr:) ex::doubleColon(<unclosedIRI, _:b1) , } .
http://invalid ?!! 123 = ""'*E>*"" , cross |  @@ ://noScheme ?34}~ :: { :noPrefix(?/[k!c, "unclosed) } .
ex: [ ] : { List } 
"string" [  ] :noType :: BASE
xsd:Invalid Space [ ++ xsd:int , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: {  
o-rdf:Template1 [ xsd:token invalid ottr:IRI "string" , , ?var ?G , ++ ++ LUB ?+ , ] { zipMax |  ottr:Footballer ( badPrefix:string ) } .
"string" xsd:int  , , ++ xsd:yearMonthDuration 123  @@ cross <unclosedIRI (  ) :: { ottr:Triple(123, :noPrefix, 23.14.15) ( } .
:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "}+" :: BASE .
ottr:IRI [ || LUB<<List<xsd:Name>>> ?2M  ] @@ cross |  bad::IRI ( :noType ) ; :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: {  } .
 [ ex: @ ex:Invalid Space (  ) :: { ottr:Triple(?N owl:Template2 ?H%r) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { ://noScheme _:blank , "string" ++ ++ ( "unclosed ) } .
?var [ LUB<xsd:NMTOKEN> ?m , ? List ?Gi~ , ] :: { ex:(?W[f, xsd:invalidType) , }
foot:Triple ?!! xsd:double ,  zipMin |  @@ ex::doubleColon  :: { ottr:Triple(?.b badPrefix:Footballer "invalid"^^http://invalid) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: BASE .
ottr:IRI [ ex: @@ zipMin |   ( (  ) ) ) , @@ o-rdf:Footballer ( ++ ++ "invalid"^^bad::IRI  ) :: { <unclosedIRI  } .
://noScheme [  List<<xsd:negativeInteger>>List "string"   ] 123 :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:string } .
ex::doubleColon :: { o-rdf:Type(xsd:invalidType, "V*") , :noPrefix(?CY, ?+) ( } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ wrong ?var ( _:blank , ottr: ) :: { ottr:Triple(_:blank :Triple none) , } .
ex:Invalid Space [ ! t-pnd:Punned-Class-ObjectProperty ?` = invalid^^type , zipMax |  rdfs:Literal 123 , , ?! :noType  , ] @@ foot:Invalid Space ?$ ) :: (  ) .
http://example.com/:Type [ xsd:gMonthDay  ] :: { ottr:Triple(?O, ex::doubleColon, -7+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ottr:Annotation [ xsd:unsignedByte ?0y , ? xsd:gMonth "string" ?<  ] { o-rdf:Type(?[, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Annotation [ ?!! ?y =  , , ://noScheme ] zipMax |  @@ invalid |  ?var ( _:blank cross |  ) :: BASE
:noPrefix [ foot:foot:clubHistory ?)` , ] "D*" :: BASE .
ex::doubleColon List<xsd:gMonthDay>xsd:invalidType 123  :: { ottr:Triple(_:blank  invalid) , } .
<unclosedIRI [  @@ LUB :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: { http://invalid(?w, ?H) ) } .
ex: [ ] :: { o-rdf:Type(, -8+) :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?9J, ottr:Footballer, "invalid"^^ex:) , ex:Invalid Space ( ( none ,, ) ^^ badPrefix:string ,, ) 
"string" [ zipMin |  xsd:Name "string"  ?R ,  ] @@ ottr:IRI  , @@ ://noScheme _:blank  :: { ex::doubleColon(?EC, o-rdf:Triple) } ;
?var List<"string"> ?W @@ ex:Template1 ( ?Uc :: BASE
foot:Template1 [ xsd:gMonthDay ex:Invalid Space zipMax |  NEList<<LUB<xsd:gMonth>>>xsd:invalidType  , ] :: { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { ex::doubleColon "string"^^^xsd:string ^^ badPrefix:string ,, } .
ex: [ ++ ++ xsd:string ?b = 123 ,  @@ bad::IRI :: {  } .
 [ xsd::doubleColon ] @@ wrong <unclosedIRI ( _:blank ) ; :: { ottr:Triple(_:blank, ://noScheme, _:b2) ottr:Triple(ottr: :noPrefix "unclosed) ( } .
123 :: { o-rdf:Type(?5\, "F") , } ..
http://invalid [   "string" , , ++ ?= = ( "invalid"^^ex::doubleColon ) ?!! xsd:unsignedInt ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Annotation [ ] :: { ex:Invalid Space(?p, ?PC) 
o-rdf:Invalid Space [  ] "unclosed :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?!! xsd:unsignedLong 123    :: { ottr:Triple(_:blank <unclosedIRI ?H)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ] :: { o-rdf:Type(, 123) , } .
ex: [ xsd:byte "string" , , ++ ++ badPrefix:string  , ? xsd:negativeInteger ] @@ ottr: :: { ottr:Triple(?x}j, :Annotation, _:b2) ; } .
bad::IRI :: { ex::doubleColon(?., 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix invalid |  List<xsd:boolean>xsd:invalidType ?9 , @@ cross ex:Template1 ( ?1 ) _: {  } ...
http://invalid [ invalid ] :: { ://noScheme(?Sv{4, "invalid"^^ex:Invalid Space) 
foot:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ owl:Footballer _:blank ,, @@ xsd:Template1 ( ( "2023-01-01"^^xsd:date ,  ) ) ^^ xsd::doubleColon , ++ 1..2 cross |  ) :: ( zipMax |  ?var ( ( ?f ,, ) ++ ++ ?var 1 ) ) .
ottr:IRI [ ] :: BASE .
:noPrefix [ List<<xsd:gYearMonth>>:noType xsd:invalidType "string" ?Hl , ] :: { 123 } .
:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "K" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?a, ?$65<D) , } .
?var [  ] @@ ex::doubleColon ++ ++ ( 23.14.15 ,, )  ; :: { ottr:Triple(badPrefix:string, http://example.com/:Template2, xsd::doubleColon) ://noScheme(_:blank, "unclosed) } .
ex: ++ xsd:short @@ http://invalid ( _:blank ,, ) @@ zipMax |  ex:Invalid Space ( ottr: ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? xsd:decimal "string"  , ! xsd:Name , ,  cross |  @@ zipMin |  bad::IRI (  ) :: {  } .
foot:Triple :: { invalid |  o-rdf:Footballer ( ( , ) ^^ List ++ (  ) ) , ?1 ) } )
ottr:Type [    = 123 , ,  xsd:string  = "malformed"^^bad:datatype ?! LUB ?) ] { ottr:Triple(?V ex: _:b1) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template1 [ ] :: { <unclosedIRI(_:blank, badPrefix:string) , ottr:Triple(?lv, http://example.com/:Template2, "malformed"^^bad:datatype) , } )
123 [ ? LUB<owl:real>invalid "string"  , "unclosed ] @@ ottr:IRI -7+ ; :: BASE .
 [ ?var ?Pk  ] "string" :: {  } .
http://invalid [ ! 123  , ,  @ :noPrefix  :: { ottr:Triple(_:blank ex: _:b1) ex::doubleColon (  ) } .
://noScheme :: { o-rdf:Type(bad::IRI, ?]tCH) , } .
ex:Invalid Space [ ?!! xsd:unsignedShort ?x[7<R = "value"^^invalid , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noType :: { xsd:invalidType 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { o-rdf:Type(?e, "unclosed) } 
foot:Footballer [  @@  ?var (  ) @@ zipMin |  xsd:Invalid Space (  ) :: ( zipMax |  owl:Annotation ( List ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { xsd::doubleColon } .
http://example.com/:Template2 [ ] :: BASE .
ottr:IRI ! ottr: ?L 123 zipMax |  @@ ex: ++ ++ ex:Annotation "2*k9*" :: BASE
<unclosedIRI [ rdfs:Literal ex:Invalid Space @@  :: {  :noPrefix (  ) } .
http://invalid [ zipMin |  List<<ottr:Bot>>badPrefix:string 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { ex::doubleColon(?'`uT, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
 [   xsd:long ,  ]  :: { ottr:Triple(invalid ottr:Invalid Space "3+") ; } .
://noScheme [ ? xsd:anyURI "string" = "value"^^invalid , ] :: { ottr:Triple(_:blank, bad::IRI, ?JW;f) } (
"string" ++ ++ xsd:dayTimeDuration     : { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ,  } 
?var [ ! xsd:date  = "value"^^invalid  xsd:token 123  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(_:blank, foot:Triple, ""unclosed") ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 :: { :noPrefix(";+", ?O) } .
ottr:IRI [ ] :: BASE .
ex::doubleColon [ ++ ?R9 = ( _:b1 ) ] :: { o-rdf:Type(?v, ex:) ottr:Triple("string" ://noScheme none) , } .
bad::IRI [  @@ ex:Invalid Space ++ ++ invalid term ,, :: {  } .
<unclosedIRI   LUB "string" ,  @@ http://invalid ( :noType ) ) :: { wrong  ( _:blank ,  ) } .
123 [ badPrefix:string ]  :: { ottr:Triple(?:c'5 owl:Annotation "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
badPrefix:Template2 [ ?! LUB<<List<owl:AnnotationProperty>>>invalid , ] @@ List :: { xsd:invalidType } ,
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ xsd:date "8*yZ*" ] :: { ottr:Triple("string", ottr:Type, ?i) o-rdf:Type(_:blank, xsd:invalidType) , :Triple ex: } .
ex::doubleColon [  ?94 = "unclosed , ,  @ zipMin |  http://invalid ( _:blank none ^^ List invalid |  ) :: {  }
:noPrefix [ :noType ] LUB :: {  } .
bad::IRI LUB<<List<xsd:time>>>  xsd:xsd:Annotation ?P0I`" ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: ( ottr:Triple(?GJ ex:Invalid Space -9+) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(?s, "2023-01-01"^^xsd:date) ) 
?var [ cross |  xsd:integer "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  (  ) , @@ ex: (  ) :: { ottr:Triple(?+V, foot:Template2, 23.14.15) , } ;
://noScheme [ ?! badPrefix:string 123 , ] @@ zipMax |  ottr:IRI (  ) ( |: { ex::doubleColon(?dw, "unclosed) , } ..
foot:Type [  @@ 123 "string" , @@  ( _:blank ++ ++ "string"^^^xsd:string , ++ ( 23.14.15 ,  ) ) zipMax |  ) :: { cross |  ottr:IRI ( ( "string" ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ++ ++  = ?rI , ] List :: { ex:Invalid Space(_:blank, ":") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
bad::IRI [ ] :: BASE .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ://noScheme ( "malformed"^^bad:datatype ^^ ottr: ,, ) ) :: { ex: } .
ex::doubleColon rdfs:Datatype xsd:invalidType , ?var ?Kb ??  123 , , LUB<List<LUB<<List<ottr:IRI>>>xsd::doubleColon>> ?! @@ invalid :: { o-rdf:Type(LUB, ?]) ; } .
:noPrefix [ "unclosed ] :: { ottr:Triple(?R, http://example.com/:Annotation, "invalid"^^bad::IRI) , } .
ottr:Invalid Space :: { ottr:Triple(?L ex: 2+) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
owl:Triple [ ?! xsd:NCName ?3F = ( (   ,, ) ] @  badPrefix:Template1 (  ) :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" [ ?! List ?y ] ex: :: BASE .
://noScheme  @@ ottr:IRI ?_b ) :: { xsd:Footballer ( ++ "unclosed , ++ ++ ( ?var 1 ,, )  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ! xsd:NCName "string" = "malformed"^^bad:datatype ,     , , ?!! xsd:decimal , ] @@ http://invalid _:blank cross ; :: {  } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB  123) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: { bad::IRI(?7, ?!) , } .
<unclosedIRI [ "M+"  ~: { o-rdf:Type(_:blank, ""&*"") } .
?var [ ++ xsd:unsignedShort ?? xsd:token 123  , ,  xsd:dateTimeStamp ,  ] { o-rdf:Type(_:blank, _:b1) , ottr:Triple(_:blank, :noPrefix, _:b2) , } .
:Template1 [ ] :: { xsd::doubleColon } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var LUB<<List<xsd:dateTimeStamp>>>badPrefix:string "u+" @@ invalid |  ottr:IRI ( _:blank ( ( ?\ , _:b1 ,, ) ) ) , :noPrefix ) :: (  ) .
http://example.com/:Invalid Space [ ++ ++ rdf:HTML  = "value"^^invalid , ,  List 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ bad::IRI (  ) ( :: { o-rdf:Type(?]*, ?.) , } .
http://invalid [ ] :: { 123 } .
<unclosedIRI [ ?!! "string"  , @@ xsd::doubleColon :: { ottr:Triple(ottr:, o-rdf:Template1, ) } .
ex:Invalid Space [  ] :: { ottr:Triple(?2X@a ex::doubleColon invalid) ://noScheme(_:blank, abc.6+) , } .
ex: [ "unclosed ] { ottr:Triple(?Z, ex:Type, -1+) , "string" "string"^^^xsd:string ^^ LUB zipMin |  } .
:Triple [ cross |  xsd:Name ?[ owl:Class ?NgF , ] "x" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr: ] : { ottr:Triple(?@~s :noPrefix ?!_) "string" invalid term invalid |  } ...
http://example.com/:Footballer  xsd:decimal ?S&/+  @@ "2*,.*" :: BASE .
ottr:IRI [ ?? List<owl:rational>xsd:invalidType "string" = ( ( http://invalid ,   ) @@ cross |  <unclosedIRI (  ^^ LUB ) ; :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { o-rdf:Type(badPrefix:string, ?var) } .
 [ ] :: { ottr:Triple(_:blank, owl:Triple, "2023-01-01"^^xsd:date) , List } .
ex::doubleColon [ rdfs:Datatype 123 , ,  invalid  , ] zipMin |  @@ ex: ( "unclosed ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 :: ( ex:Invalid Space(?A1`, 1..2) ) ) .
ottr:Invalid Space [  ] @@ :noPrefix (  ) , @@ zipMax |  ?var (  ) :: { bad::IRI(?G<, none) , } ,
?var   ?vt = "string" List<xsd:double>List 123 @@ ex: _:blank ,, :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "+" 
owl:Annotation [ cross xsd:unsignedByte  ,   @@ zipMax |  ottr:IRI (  ) :: BASE .
<unclosedIRI [ ++ ++ xsd:gMonth , ,  ] @@ cross |   (  ) @@ :noPrefix (  ) :: { ://noScheme(_:blank, "malformed"^^bad:datatype) , } .
ex:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ bad:date ?d , ] :: { ottr:Triple(?:P, foot:Template1, ex::doubleColon) ( } .
123 :: { o-rdf:Type(badPrefix:string, ?W4) } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: { ottr:Triple(_:blank http://invalid none) , ottr:Triple(_:blank, <unclosedIRI, "2023-01-01"^^xsd:date)  } ;
ex:Triple invalid @@ cross ex:Template1 ( ?"1 ) +: { zipMin |  o-rdf:Type ( "invalid"^^http://invalid invalid |  ) } 
123 [ ] :: BASE .
:Triple [ List<List<List<  owl:DatatypeProperty "string" = invalid^^type>>> ?4 List<<xsd:float>>xsd::doubleColon  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ( ++ ++ (  ) ) ,  ) ( :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ++ badPrefix:string ?qxgQ , zipMax |  @@  ex:Invalid Space ( 123 ^^ xsd:invalidType ,, ) :: { ://noScheme 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] "%+" :: { <unclosedIRI ( _:b1 ,, ) cross |  } .
ex::doubleColon [ ottr: ] :: { o-rdf:Type(_:blank, ?var) , :noPrefix(?m, ?!W) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
bad::IRI :: ( ottr:Triple(List ex: badPrefix:Footballer) , ) .
"string" [ ++ ++ xsd:yearMonthDuration   , ?!! rdfs:Literal @@ invalid |  ottr:IRI (  ) @@ zipMin |  http://invalid (  ) :: BASE
owl:Type [ 123 ?` , , ! xsd:normalizedString ,  ] { ottr:Triple(?*, xsd:Annotation, none) (_:blank, "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ :noType ] @@ ottr:IRI ( bad::IRI ) , :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme("unclosed, xsd:invalidType) 123 
ottr:Triple [ ?!! LUB<<List<owl:ObjectProperty>>>List ?(3 = invalid^^type , @ ex:  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: { cross |  <unclosedIRI ( ++ ++ ( , ) ,, ) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank  ?5N) ) } .
ex:Invalid Space [ xsd:gMonth "string" , , ?! LUB  ,  ] badPrefix:string :: {  } .
:noPrefix [ ++ ++ xsd:unsignedInt ] { ottr:Triple(?!, xsd:Footballer, -7+.abc) , o-rdf:Type(?pa, _:b2) , } .
"string" 123 ?te ++ 123    @@ zipMax |  123 ( _:blank ,  ) :: BASE
foot:Annotation :: { ottr:Triple(?d ex:Type "malformed"^^bad:datatype) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ( "&" ) :: { ottr:Triple(?O, bad::IRI, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple :: { 123 }
ottr:IRI [ ++ ++ owl:NamedIndividual "string" = "unclosed ] :: { ottr:Triple(_:blank :Invalid Space ?8<) } .
:noPrefix [ List<owl:rational>List ?h , , ?? xsd:dateTime  = "value"^^invalid , ] ottr: :: { ex::doubleColon(ex:, LUB) ) } .
http://invalid [  ] @@  invalid , @@ ://noScheme (  ) :: { o-rdf:Type(?w, "invalid"^^ex:Invalid Space)  } .
"string" [ invalid |  xsd:dateTimeStamp 123  @@ zipMin |  o-rdf:Template2 (  ) @@ cross |  ://noScheme (  ) :: BASE
foot:Footballer [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
badPrefix:Template1 [  xsd:nonPositiveInteger ,  ]  :: ( ottr:Triple(_:blank, ex:, "unclosed) , zipMax |  owl:Annotation (  ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { http://invalid(xsd:invalidType, "2023-01-01"^^xsd:date) , } .
ex:Template1 [ ?! List<xsd:int>badPrefix:string "string" = "malformed"^^bad:datatype , ]  ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex::doubleColon [  ] :: BASE .
"string" [ cross |  xsd:Name ?r , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: { "h*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?2 badPrefix:Annotation ?'p) ottr:Triple(_:blank, :noPrefix, <unclosedIRI) } .
ex: ?!! owl:DatatypeProperty  owl:ObjectProperty ,  @@ zipMax |  ex:Invalid Space ( _:blank _:blank ,  ) :: { o-rdf:Type(_:blank, "unclosed) , } .
bad::IRI [ ] :: {  }
123 [ :noType @@ bad::IRI ( _:blank invalid |  ) @@ zipMin |  bad::IRI (  ) :: ( ://noScheme(?O, _:b1) ,  _:blank ) .
http://example.com/:Footballer xsd:double  @@ ex:Template1 ( ?$ :: { http://invalid(?T4:, abc) ; 
"string" [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { "i*>!*" } .
ottr:IRI [  ?0 = 123 , ] @@ ottr:Footballer ( "unclosed ,, ) ^^ xsd:invalidType _:blank , bad::IRI :: BASE .
://noScheme [ ! LUB<<List<owl:DatatypeProperty>>>invalid , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { o-rdf:Type(?$,, 23.14.15) } .
ex::doubleColon   :: { ottr:Triple(?var, :noPrefix, ?H) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |  http://invalid ( ++ ++  ) } .
<unclosedIRI [ xsd:gMonthDay :noType ] :: { ex:Invalid Space(_:blank, ottr:) ; } .
123 [ 123 ?7  @@ ex:Template1 ( ?F9 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex: [ ? xsd:nonNegativeInteger 123  , , ?! xsd::doubleColon "string" ?? xsd:token ] @ ex:Template1 ( (  ) ) zipMin |  ) :: {  }
<unclosedIRI :: BASE .
ottr:IRI [  ]  :: { ottr:Triple(_:blank, http://invalid, "m*") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] ; { o-rdf:Type(?:z, ?[6CK) ; } ...
xsd:Template1 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ bad::IRI ( ?var ) :: {  } .
:noPrefix [ ++ LUB<<List<xsd:unsignedShort>>>ottr: , , cross |  xsd:long 123 , @ invalid |  ex:Invalid Space ( ( , ) ) :: { ex:  } .
://noScheme [ ?!! xsd:hexBinary ?o = "value"^^invalid badPrefix:string ] @@  o-rdf:Invalid Space ( ++ ++ (  ) ) zipMax |  ) @@ 123 (  ) :: { ex::doubleColon(List, "malformed"^^bad:datatype) } .
foot:Type [ ?! xsd:invalidType "string" ] :: { ottr:Triple(?Pl http://example.com/:Triple _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:Template2 [ !   , xsd:int ?!-; xsd:gYearMonth "U" @@ invalid :: { "unclosed }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ List<<xsd:unsignedShort>>LUB invalid , ] { ex::doubleColon(?D, ?\}) , ottr:Triple("<+" badPrefix:Type "invalid"^^ex:) } .
123 :: BASE .
ex:Footballer [ :noPrefix ] @@ ottr:IRI ( "string"^^^xsd:string ^^ xsd:invalidType _:blank , ?var ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ "string" ?| , ++ ++ xsd::doubleColon  ]  :: { ottr:Triple(_:blank, bad::IRI, ottr:) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  ://noScheme ( ++ ++ ( ?m ,, ) ) } .
http://invalid [  ] :: {  } .
ex:Invalid Space [ ] :: { o-rdf:Type(?dV>5, 1..2) , }
owl:Triple [ ++ "string"  , , zipMin |  rdf:HTML 123  @@ ottr:IRI  , @@ 123  :: { "[*zQ*" } .
http://example.com/:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross o-rdf:Annotation ( ++ false ,, ) :: BASE
ottr:IRI [ ++ List<xsd:string>List ?oV =  , @@ ex:Invalid Space ( _:blank ,, ) , @@ xsd:Invalid Space LUB :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ]: { ottr:Triple(_:blank, <unclosedIRI, 23.14.15) } ...
ex: [ "unclosed ] :: { ottr:Triple(?+q http://example.com/:Annotation ?,) zipMax |  123 ( invalid ^^ ottr: , ++ invalid term ( (  ) ) ) zipMin |  ) } .
:noPrefix :: { o-rdf:Type(ex::doubleColon, ?var) ) } .
://noScheme  xsd:int "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd::doubleColon :: { bad::IRI(?|b, -3+) , (?2u1, "malformed"^^bad:datatype) , } .
http://invalid [ List<rdf:XMLLiteral > ?)e , ?? xsd:Name 123 = 23.14.15  ] invalid |  @@ cross |  "string" (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
badPrefix:Type [ ++ ++ rdf:HTML ] invalid :: {  } ;
owl:Template1 [ ] :: BASE
ottr:Triple [ ?!! xsd:invalidType ?k , , "string" ?C ] { "c*" } .
ex:  @@ ://noScheme :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ ++ xsd:negativeInteger "7*]w*" ] @@ :Template1 ( ?var 1 ?var ) , @@ "string" ++ ( 23.14.15 ) :: { ottr:Triple(xsd:invalidType, badPrefix:Invalid Space, _:b2) } .
<unclosedIRI [ ? List<<owl:real>>invalid 123 = "value"^^invalid , ] :: { :noType } 
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: {  } .
http://invalid :: { o-rdf:Type(_:blank, ?)) ex::doubleColon(?R?, xsd::doubleColon) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  bad::IRI ( _:blank zipMax |  ) } )
123 [ t-pnd:Punned-Class-ObjectProperty  , ,  xsd:gYear "string" = ( ( "unclosed ) ,,  @ invalid |  ex:Invalid Space ( ++ ++ ?Ae ,, ) :: BASE
ottr:Annotation [ cross |  owl:DatatypeProperty ?y , ++ ?xlq  ] { ottr:Triple(_:blank ex::doubleColon "unclosed) , } .
ottr:IRI [ ++ ++ xsd:string , badPrefix:string @@ ?var  , @@ ex::doubleColon (  ) :: { o-rdf:Type(_:blank, 23.14.15) , o-rdf:Type(_:blank, _:b2) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
o-rdf:Footballer [  ] "string" :: ( ottr:Triple(:noPrefix :Template1 "{") ) .
bad::IRI :: { ex:Invalid Space(?x41R, ?T) , } .
ex: [ none:foaf:name ?K ?? xsd:unsignedByte 123  ] :: { ottr:Triple(_:blank, , badPrefix:Template2)  } .
<unclosedIRI [ NEList<rdfs:Literal>LUB List , , ?!! xsd:Name  = invalid^^type , ] @ zipMax |  ://noScheme ( "invalid"^^bad::IRI , ?- ^^ invalid ) :: { cross |  http://invalid ( ++ ++ invalid term ,, ) 
123 [ ] :: { :noType } ;
foot:Annotation ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?DM[FH ~: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
ex:Invalid Space [  ottr: "string" , ,  ] @@ xsd:invalidType :: { ottr:Triple(?t, xsd:Type, "unclosed) ) }
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, ex:, foot:Footballer) o-rdf:Type(?I, xsd:invalidType) , "H*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
://noScheme [  invalid ?7 ] { ex:Invalid Space(?var, ?cUq) } .
ottr:Invalid Space [ cross |  NEList<xsd:byte>List 123 , ,  @@ <unclosedIRI _:blank invalid |  :: { 123 ( ++ -5+.abc ) } .
http://invalid [ xsd:unsignedShort badPrefix:string , ] :noPrefix :: { ottr:Triple(?s :Type "malformed"^^bad:datatype) , } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI : {  } ...
ex::doubleColon [ xsd::doubleColon ] @@  :: BASE
"string" ? xsd:date , ++ xsd:double ?! xsd:float , ,  @@  ottr:IRI (  ) , @@ ex::doubleColon (  ) :: { o-rdf:Type(_:blank, abc) ( 
:noPrefix [ ++ ++ LUB ?2 ] badPrefix:string :: { xsd:Triple ( ++ ++ ?var 1 ) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(_:blank, ?+x) , ) .
"string" ( ( 0+.-3+ ,  ) ) ) ,, ?k( , , foot:ex: ?Q? , @ cross |  <unclosedIRI ( ++ 123 ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: {  } .
http://invalid [ ] :: { ";*" } .
 [  @@ ex:Invalid Space ?7e^ ) :: { ottr:Triple(://noScheme, bad::IRI, ?var) , } .
123 [ xsd:negativeInteger "string" , ?? rdfs:Literal  = 23.14.15 invalid ] @@ :noType :: { ottr:Triple(?u@ foot:Invalid Space 23.14.15) o-rdf:Type(_:blank, none) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:Footballer [ ? ?: = ?cl , cross List<xsd:unsignedShort>xsd::doubleColon ?/ @@ :Type List ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Invalid Space (  ) , @@ zipMin |  xsd:Footballer ( ++ ++ ( -6+.3+ ,, ) ) :: { ottr:Triple(?m. http://example.com/:Template2 true) , } .
?var [   xsd:unsignedShort ?S = abc , , xsd:foaf:name ?y ] :noPrefix :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 ? invalid  invalid |  List<List<<xsd:NCName>>xsd:invalidType> ?A$i ,  ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] :: { ottr:Triple(xsd::doubleColon, ://noScheme, 123) } .
<unclosedIRI :: { "N" } .
ex::doubleColon [ ] :: { o-rdf:Type(_:blank, ?jacwL)  } .
bad::IRI [ ++ ++ owl:DatatypeProperty , List  @@ "string" ?var 1 ^^ badPrefix:string , ++ (  ) ) "string" zipMax |  :: BASE
ex: [  xsd:gMonth 123 ,  123 = "value"^^invalid  ] { cross |   (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( (?f, "invalid"^^ex:) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid  @@ ottr:IRI ( ++ ++ ( ?var 1 ,  )  ) @@ "string" _:blank ?" ^^ LUB ,, :: { ottr:Triple(_:blank xsd:Triple "K*ne*") ) } .
foot:Invalid Space [ ?var ?'Rc , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ wrong  ( 123 ) :: BASE .
://noScheme [ ?! xsd:Name  = "malformed"^^bad:datatype , ] xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: {  } .
:noPrefix [  :noType 123 , , invalid |  NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>>ottr: "string" ? 123 = "string" ] :: { ex: } .
ex:Invalid Space [ ] :: { bad::IRI(badPrefix:string, "2023-01-01"^^xsd:date) , } .
ex::doubleColon [  ] @ zipMin |  bad::IRI (  ) :: { o-rdf:Type(?`, ?7P) ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) }
badPrefix:Footballer List  ; { cross |  owl:Type ( -2+ ) } ...
ottr:IRI [   "string"  , @@ ex:  @@ zipMin |  ?var (  ) :: { o-rdf:Type("unclosed, ) ( } )
:Invalid Space [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank xsd:Annotation -3+) } .
:noPrefix [ "string" ] @@ zipMax |  bad::IRI ( _:blank , ++ ++ _:b2 ) :: { ex:Invalid Space ( ++ ?var 1 ,, ) } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: {  } .
ex::doubleColon [ ++ badPrefix:string 123 , ++ ++ xsd:int , ,  ] http://invalid :: { <unclosedIRI(?J\, ??) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { LUB }
://noScheme :: { ottr:Triple(?@/, http://invalid, _:b1) , 
o-rdf:Template2 [ ? xsd:gYearMonth   ] @@  ://noScheme (  ) , :: ( o-rdf:Type(?0, none) ; ) .
foot:Triple [ ] :: BASE
bad::IRI _:b2 ,  ?>_ ,   LUB<<List<rdfs:Resource>>>xsd::doubleColon 123  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
"string" [ zipMin |  owl:DatatypeProperty ?\o , ] @@  ottr:IRI (  ) ) :: { ottr:Triple(?var ://noScheme ?O') , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  @@ ex:Invalid Space _:blank ,, , @@ ex::doubleColon ( "unclosed ) :: { ottr:Triple(?8, ottr:Footballer, LUB) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, _:b1)  } .
http://invalid [ :noPrefix ] :: { ottr: } .
<unclosedIRI :: { (?n, "2023-01-01"^^xsd:date) ; }
123 [ ? "string" = (   ]  :: ( || o-rdf:Template2 ( (  ,, ) ^^ List cross |  ) ) .
owl:Annotation [ ! ottr:Bot , ,  rdfs:Datatype  ] @@ :noType ; { ottr:Triple(?hi, http://example.com/:Template1, "invalid"^^://noScheme) , } ..
<unclosedIRI  owl:ObjectProperty , , ++ ++ invalid ?w@8B , ottr::Template1 ?. , invalid |  @@ badPrefix:Triple ( ++ ++ "invalid"^^ex::doubleColon , ( ( "string" ,, ) ) ) ) :: { ottr:Triple(?~ ex:Type ?D_) , } .
ottr:IRI [ List ] :: BASE .
?var [ ] :: {  }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] @@ ex:Invalid Space ++ ( , ) cross @@ cross |  ://noScheme (  ) :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) "unclosed } .
ex: [ List<<xsd:normalizedString>>ottr: 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { ottr:Triple("string", bad::IRI, http://invalid) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  123 ( _:b2 ^^ badPrefix:string  ) } .
:noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
http://example.com/:Invalid Space [ xsd:anyURI "F" @@ ex:Template1 ( ?\-; :: BASE
xsd:Annotation   xsd:negativeInteger  = "value"^^invalid  ; { ex:Invalid Space(?C, ""&+"") , o-rdf:Type(?K, -9+) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ ?!! List<xsd:byte>xsd::doubleColon , ] "o" :: { o-rdf:Type(?m, <unclosedIRI) ,  } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName cross |  @@ "string" ( 123 ) :: BASE .
ex::doubleColon [ ] :: { wrong ottr:IRI ( "string"^^^xsd:string ^^ List zipMin |  ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { LUB } .
http://invalid [   xsd:gYear ?,p = ( ottr: ,, ) ] @@ :noPrefix ( xsd:invalidType ) :: { ottr:Triple(_:blank, ex:Triple, "malformed"^^bad:datatype) , } .
 :: { ottr:Triple(:noType ex:Invalid Space ?B7) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ rdfs:Literal "u+" , "^*" ] { ex:(?K, 23.14.15) , } .
?var [   123 , , ? xsd:Name  @ 123 _:blank  :: { ex:(?+"O, _:b2) } (
o-rdf:Template2 [ ++  = "string" List<ottr:foaf:name ?J> ?} , ] :: BASE
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon invalid term ^^ List ,, @@ cross |  ottr:IRI ( (  )  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 :: { ottr:Triple(_:blank xsd:Annotation "string") } .
<unclosedIRI [ ] :: BASE .
bad::IRI [ ?   ,  ] @@ ex: ?r ) :: { :noPrefix(_:blank, 23.14.15) o-rdf:Type(_:blank, "unclosed) ( } .
ex:Invalid Space [ ++ NEList<<LUB<rdf:HTML>>>invalid 123 = ottr: , , ++ ++ :noType ?t ] "unclosed :: { ottr:Triple(?B)icV`, ://noScheme, ?x-) , } .
http://invalid [  ] :: { <unclosedIRI(xsd:invalidType, abc) , 123 ( _:blank , ++ "2023-01-01"^^xsd:date ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:Triple [ xsd:byte "Y+" , @ || ex:Type ( ++ ++ ( "string" ,, ) ) invalid |  ) :: { LUB }
o-rdf:Template2 xsd:language ?b0 xsd:foot:clubHistory ?L , ,   xsd:string ,  zipMin |  @@  badPrefix:Invalid Space ( xsd::doubleColon ) :: {  } )
:Type [ cross |  LUB<ottr:Bot>badPrefix:string ?CG ] "string" :: { "h*" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] { ottr:Triple(ex:, ex::doubleColon, :noType) , } .
123 [ xsd:gDay  , @@  ( (  ) ) ^^ xsd::doubleColon ,, ) @@ ottr:IRI false  :: BASE .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  <unclosedIRI ( _:blank , ++ ++ "string" ) :: { ottr:Triple(?D9? foot:Template1 4+) , o-rdf:Type(_:blank, ?nx) ; } .
:noPrefix ?!! xsd:short 123 = invalid^^type ?! xsd:invalidType  , , ?var 1 , ( ""unclosed" ,, ) ?ym , "N" @@ LUB :: { ://noScheme(?*r;, "2023-01-01"^^xsd:date) } .
?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { || bad::IRI ( ++ _:b1 invalid |  ) 
o-rdf:Invalid Space [ ] :: { ex::doubleColon(?8, "malformed"^^bad:datatype)  }
xsd:Footballer [ ++ ++ xsd:time , ] :: BASE
ottr:IRI [ List  :: { o-rdf:Type(<unclosedIRI, _:b2)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ] :: BASE .
ex:Invalid Space [ ] :: { ottr:Triple(?aH, ex:Footballer, "w") ; }
foot:Annotation [ xsd:unsignedInt ?Kt , ] @ bad::IRI (  ) :: { ottr:Triple(_:blank  ?Y)) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme("string", "invalid"^^:noPrefix) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ! List<xsd:dateTime>ottr: 123 = "unclosed , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ LUB : { http://invalid(?#7h, ottr:Template2) , } ..
123 [ ?!!   , , ?? rdfs:Literal ] :noType :: {  ex: ( ++ ( "string" , ( ( , ) ) ,, ) ) "unclosed ^^  ) 
http://example.com/:Invalid Space :: BASE
badPrefix:Type "string" ?4NlX   xsd:invalidType ?. , , List<List<invalid |  List<xsd:dayTimeDuration>>> ?S @@ || owl:Template1 ( _:blank ,, ) :: { badPrefix:string } ,
?var :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "unclosed :: { ottr:Triple(:noPrefix, :Footballer, "malformed"^^bad:datatype) , "string" } .
ottr:IRI [ xsd::doubleColon ] @@ ex:Template1 ( ?W` :: BASE .
owl:Type [ ] :: { ex::doubleColon(_:blank, ?m) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ List<invalid> ?4S , ] :: { http://invalid (  ) ^^  zipMin |  } .
ex:Invalid Space [ zipMax |  xsd:gYearMonth   :: { o-rdf:Type(?n, LUB) }
 ?!! rdf:HTML 123 = "value"^^invalid , ,   :: { ottr:Triple(_:blank <unclosedIRI "unclosed) o-rdf:Type(_:blank, none) ) 
123 123 ?!y* ! List ?L ,   NEList<<LUB<xsd:unsignedLong>>>ottr: , @ bad::IRI ( ++ ++ -2+ ) :: BASE
"string"  xsd:gMonth "string"  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme (  ) ; :: { o-rdf:Type(_:blank, 23.14.15) , ottr:Triple(?&, foot:Template2, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ LUB<<List<owl:AnnotationProperty>>>badPrefix:string :noType , ] @ zipMax |  ex:Triple ( (  ) ^^ List ) :: BASE .
ex::doubleColon [  ] "G*Nr*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex:Invalid Space :: { :noPrefix(<unclosedIRI, ?_Z) ( } .
ex: [ xsd:invalidType  :: { ?var } .
bad::IRI [   xsd:negativeInteger ++ ++ ?9b = 123 , , ! ottr:  ] :: {  } .
 [ ] :: { ottr:Triple(?P http://invalid "F+") } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( 123 _:blank ++ ?7m ,, ) .
owl:Footballer ++ xsd:nonNegativeInteger @@ "string"  , @@ zipMin |  123 (  ) *: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ottr:Triple(_:blank, bad::IRI, _:b2) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
 [ NEList<xsd:short>ottr: ?var  ] "9*2[*" :: { xsd::doubleColon } .
ottr:IRI [ ?!! badPrefix:string ?sb , @@ 123 ( ex: ) :: { ottr:Triple(?&5, ex::doubleColon, ex:Triple) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(_:blank, invalid)  } .
:noPrefix ? xsd:gDay "string"  ,   :: { o-rdf:Type(, 23.14.15) , ottr:Triple(_:blank bad::IRI "malformed"^^bad:datatype) } .
http://invalid [ owl:AnnotationProperty 123 , , List ] @@ "." :: { ex:Invalid Space(?@j%, ?M) ; } .
"string" [ ?!  = ?q" ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: BASE
badPrefix:Invalid Space :: {  http://example.com/:Template2 ( ++ ( false ,, ) ,, ) } ,
ottr:Type [ ?! rdfs:Datatype 123 = ( "invalid"^^<unclosedIRI )  ] :: { ottr:Triple(?{q, ://noScheme, ""s*7**"") } .
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
bad::IRI [ ?!! NEList<xsd:gYear>LUB , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ xsd::doubleColon :: { o-rdf:Type(_:blank, ?1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(ex::doubleColon, "unclosed) , 123 } .
 xsd:invalidType @@ :noPrefix ?6z ) :: {  } .
http://invalid [ rdfs:Resource  ] invalid :: { ex:Invalid Space ++ ?} ,  
?var [ xsd:double  , , ++ ++ :noType "string" , @@ cross |  o-rdf:Footballer ( _:blank ) , @@ ex:Triple ( badPrefix:string ) : { ottr:Triple(?- foot:Invalid Space "malformed"^^bad:datatype) , } ..
:Template1 [  ?|  ] @ zipMax |  owl:Annotation ( "2023-01-01"^^xsd:date ,, ) :: { ottr:Triple(_:blank bad::IRI _:b1) o-rdf:Type(_:blank, _:b2) ; }
:Template2 [ bad::IRI ] :: { o-rdf:Type(ottr:, "2023-01-01"^^xsd:date) 123 _:b1 ( invalid term ,, ) ^^ invalid , "string" } .
ottr:IRI [ ?! NEList<owl:real>LUB ?`i = "unclosed ] @  :noPrefix ( ++ ( 123 ) ) cross |  ) :: BASE .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ badPrefix:string :: ( "**:+*" ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(_:blank, ?Z) , } .
://noScheme :: { ottr:Triple(?/>[, ex::doubleColon, ) } .
ex: ++ ++ List   @@  ( _:blank ,, ) , :: {  } .
?var [ owl:rational "P+" , , zipMin |  List<xsd:dateTime> ?R_ , ] "F" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
http://invalid [ ] ; { ottr:Triple(?9; ex:Footballer "unclosed) ; } ..
badPrefix:Annotation [ ?!! rdf:HTML , ! xsd:Name , ? xsd:gYearMonth , ,  xsd:dateTimeStamp  ] @@ zipMax |  ://noScheme (  ) :: BASE
"string" [ ] :: { zipMax |  ottr:IRI ( ++ ++ 123 cross |  ) } (
ex:Triple [  ] :: { ottr:Triple(?J, ex::doubleColon, ?|z) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ( _:blank ,, ) :: { ottr:Triple(_:blank xsd:Type foot:Footballer) ; } .
<unclosedIRI [ bad:http://invalid ?5 , ?! xsd:integer ] @@ ://noScheme ex: , :: { List } .
?var [ 123 ] "T*" :: {  } .
ex:Invalid Space t-pnd:Punned-Class-ObjectProperty "string" , , ++ ++ xsd:negativeInteger , @@ ottr:IRI (  ) , @@ ex:Invalid Space (  ) :: { o-rdf:Type(xsd:invalidType, ) , (_:blank, "2023-01-01"^^xsd:date) , }
owl:Annotation :: { ottr:Triple(?%i&, :Invalid Space, true) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
ottr:Template1 [ ?!! xsd:NCName ++ xsd:dateTime ]  :: { ex::doubleColon(?2n;, ""}*NE*"") ) 
ex::doubleColon :: { o-rdf:Type(?_g, 2+.-6+) ottr:Triple(ex:Invalid Space, :Annotation, ?<) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ++ ++ xsd:gYear ] :: BASE .
http://example.com/:Template1 "string" @@ xsd::doubleColon :: { ottr:Triple(_:blank bad::IRI "unclosed) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { cross |  ?var (  ) } .
ex: [ cross List<<xsd:date>>invalid ?h , ,  ] @ <unclosedIRI ( ++ "string"^^^xsd:string , _:blank ) :: { badPrefix:string } .
:noPrefix [ ?? xsd:normalizedString 123 = invalid^^type  @@ cross ex:Template1 ( ?i ) ; { http://invalid(?EP, ""unclosed") ,  } ..
123 [ ?!!  = "unclosed , ]  :: ( ://noScheme(?f, false) ( ) .
xsd:Template2 [ ? xsd:NMTOKEN "string" = ?? , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid |  ottr:Invalid Space ( ++ ++ badPrefix:Footballer ( (  ) ) , ?q ) ^^ xsd:invalidType zipMin |  ) , @@ foot:Triple List :: BASE
foot:Template2 ++ ++ 123 = ?@x @@ ://noScheme ( _:blank wrong ) :: ( ottr:Triple(_:blank, <unclosedIRI, ?S) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
?var [   LUB<owl:AnnotationProperty>badPrefix:string  = "value"^^invalid , ] :: { ottr:Triple(_:blank o-rdf:Triple "unclosed) , invalid |  ottr:IRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { o-rdf:Type(, "s*") ( } .
bad::IRI [ ] :: { "string" } .
ex:Invalid Space [ List<> ?$ , LUB ] cross |  @@ http://invalid _:b2 ^^ :noType ++ ++ ( "string" ) :: { :noPrefix(?*i, none) , } .
ex: [ ?!! xsd::doubleColon ?h\,  rdfs:Datatype ?- , ,  ] { ottr:Triple(?A, ex:Template1, 23.14.15) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "n*}C*" :: {  }
:Footballer [  @@ ottr:IRI (  ) @@ zipMin |  ottr:IRI (  ) :: { ottr:Triple(_:blank, <unclosedIRI, _:b1) ) } ,
ex:Annotation :: { ottr:Triple(_:blank ottr:Template1 true) ,  } .
123 [  ] :: BASE .
 [  ?n~  @@ ://noScheme (  ) ( :: {  ottr:IRI ( invalid term ^^ ottr: , _:blank ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { o-rdf:Type(?v, "string") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { List } .
:noPrefix xsd:token "J*" , ?!! NEList<<LUB<xsd:long>>>badPrefix:string , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ ex::doubleColon abc ++ 123 cross |  :: { ex:(<unclosedIRI, ?7<) ) } .
http://invalid [ ?var ?S ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ xsd:invalidType ]  :: { ottr:Triple(?3', bad::IRI, owl:Footballer) ottr:Triple(?-, :Invalid Space, "2023-01-01"^^xsd:date) , } ;
http://example.com/:Triple [ invalid |  rdfs:Datatype ?`$D , ] LUB :: BASE
123 [ bad::IRI ] ?var :: BASE .
o-rdf:Footballer ? xsd:dayTimeDuration "string" = 23.14.15 , @@ <unclosedIRI  , @@ ottr:IRI ( _:blank ,  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] @ wrong ex: ( ++ ++ "2023-01-01"^^xsd:date ,, ) :: { http://invalid(invalid, "7") , ottr:Triple(?-x ex:Invalid Space http://example.com/:Template1) } )
 [ ?!! xsd:invalidType ?~m{ @@ ://noScheme ?$yf ) :: { o-rdf:Type(_:blank, ?u) ottr:Triple(?[, :Template2, "malformed"^^bad:datatype) , } .
:noPrefix [  xsd:double  , "string" ?t ! xsd:float , ,  ] :: { ex:Invalid Space(?P, none) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { cross |  owl:Invalid Space ( ++ ( ( 123 ) ) ,, ) badPrefix:string ) } .
foot:Annotation :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Type [ ] :: {  
123 [ ] :: ( ottr:Triple(_:blank <unclosedIRI _:b2) ex:(ex::doubleColon, xsd:invalidType) ) .
ottr:IRI :: {  } .
 [ "string" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ List<xsd:gMonthDay>LUB ?' ] "J+" :: { o-rdf:Invalid Space ( _:blank xsd::doubleColon ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ zipMin |  :noPrefix ( ++ ++ ( (  ) ,, ) ) , ?var 1 ^^ List cross |  ) :: { ottr:Triple(?9N, :Annotation, ?*) ( } .
://noScheme [ ++ xsd:unsignedInt 123 = 23.14.15 , @ ?var ++ _:b1 :: { o-rdf:Type(?u}, none) , } .
bad::IRI ! xsd:dateTime  = "string" , ,  @@ foot:Template1 ?Lw{ckn ) ": { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noType 
badPrefix:Type [ ?! rdf:XMLLiteral ,   xsd:float  ] @@ invalid |  xsd:Triple (  ) , @@  "string" ( _:blank ,, ) :: BASE
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI ( ++ "string"^^^xsd:string , ++ ++ ?^ zipMin |  ) , @@ cross |  xsd:Footballer ( _:blank ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ _:b1 ,, ?{DwE+ , ] @@ <unclosedIRI  :: BASE .
http://invalid [ ] :: { ottr:Triple(?ip :noPrefix "|+") , } .
ex:Invalid Space [ 123 ?R?' ] ex: :: { o-rdf:Type(_:blank, ?P) } .
 [   xsd:gYear , "string" ] :: { ottr:Triple(xsd:invalidType, foot:Type, 23.14.15) , LUB } .
bad::IRI [ ?!! xsd:double  rdfs:Datatype  = "unclosed , ,  @@ :noPrefix  ) :: {  ex::doubleColon (  ) } .
badPrefix:Invalid Space :: { ex:Invalid Space(?5, abc.-5+) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
ottr:Annotation ++ xsd:gMonth ?? owl:DatatypeProperty ? xsd:duration  @@ cross ex:Template1 ( ?/ ) :: ( o-rdf:Type(?1, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: BASE .
foot:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ ex::doubleColon ( "string"^^^xsd:string ^^ :noType _:b1 wrong ) :: { http://invalid } .
ottr:IRI [ zipMin |  xsd:double  , ++ ++ xsd:nonPositiveInteger , , ?? xsd:hexBinary  ] { ottr:Triple(_:blank, ex:Invalid Space, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?WL, LUB) , } .
://noScheme [ "unclosed @@  bad::IRI ( "string" ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI List<++ LUB<xsd:normalizedString>xsd:invalidType ?F = "value"^^invalid> ?/ , @@ ex:Template1 ( ?Y :: {  ++ "string" ,, } .
?var :: { ottr:Triple(badPrefix:string owl:Footballer ?NM) , o-rdf:Type(?`, "unclosed)  } .
:noPrefix [ xsd:byte ottr: ] xsd::doubleColon :: { ex:Invalid Space(?ju., "2023-01-01"^^xsd:date) } )
xsd:Triple [ ? xsd:date 123  , , ottr:foaf:name ?@ , , rdfs:Literal ?w , , ?!  ?* , ] :: { ottr:Triple(?1 :Template1 2+) ( 
ottr:IRI [ xsd:hexBinary "(" , , ?!! "string"  ,  :: {  } 
ex:Invalid Space :: { o-rdf:Type(badPrefix:string, ?l6)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Annotation  @@ wrong ex::doubleColon ( ++ ++ ?T{*> ) @@ :noPrefix ?var :: { 123 ( ++ (  ) ,, ) } .
bad::IRI [  ?: , "string" ?F& ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ cross |  ://noScheme (  ) :: { ottr:Triple(?k foot:Footballer ) ; } .
ex: [ xsd::doubleColon ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ] :: { http://invalid(_:blank, "2023-01-01"^^xsd:date) 
http://example.com/:Template2 [ NEList<<LUB<xsd:NMTOKEN>>>invalid  ] ottr: :: { ottr:Triple(_:blank, :noPrefix, none) , ottr:Triple(_:blank <unclosedIRI 23.14.15) , } )
owl:Invalid Space [ zipMax |  xsd:date 123 ,   xsd:normalizedString ?uwi2 = 23.14.15  LUB ?C @@ cross ex:Template1 ( ?!x ) :: BASE
ex:Invalid Space [ NEList<List<List<List<List<  List<<rdfs:Literal>>LUB "string" = (  >>>>> ?:k , ] @@ ex:Invalid Space  ) :: { ex::doubleColon(_:blank, 123) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ++ xsd:NCName  = 23.14.15 , , cross |  xsd:string ?^  @@ <unclosedIRI ( "unclosed ) :: BASE .
ex: :: { ottr:Triple( owl:Type ?Ks) , } .
http://invalid ?!! xsd:gYearMonth , ++ ++ 123  @@ :noPrefix (  ) @@ ://noScheme (  ) :: {  bad::IRI ( _:blank _:blank ) } .
"string" [ List ]  :: { ottr:Triple(?D, bad::IRI, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?|, none) ottr:Triple(?W xsd:Annotation 1..2) ,  } (
http://example.com/:Triple [ ?? :noType ??*~ ] { badPrefix:string } .
foot:Footballer [ ] :: BASE
xsd:Triple [ zipMax |  LUB<xsd:gMonthDay>LUB  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ?var ] :: BASE .
ottr:IRI [ ] :: { ottr:Triple("_*+$*"  badPrefix:string) , o-rdf:Type(_:blank, ?z%) } .
"string" ?!! xsd:base64Binary "string" = "malformed"^^bad:datatype , ?! xsd:gDay @@ <unclosedIRI (  ) , @@ ex:Invalid Space _:blank  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:foot:clubHistory ?Zr: , ,  ] @@ || :noPrefix ( _:blank  ) :: { ottr:Triple(?Sk, owl:Invalid Space, "malformed"^^bad:datatype) ; } .
://noScheme :: { ex::doubleColon(http://invalid, ""unclosed") , } .
123 [ ++ xsd:gYearMonth ?!/ = invalid , ]  :: ( invalid |  http://example.com/:Footballer ( -6+ ^^ ottr: ,, ) ) .
badPrefix:Template1 [  ?wQ9 , , ++ ++ :noType 123 , @@ zipMin |  ex:Annotation ( List ) @@ cross |  ottr:IRI (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?>, foot:Type, "2023-01-01"^^xsd:date) "J*" }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  123 ( LUB ) ) :: { ottr:Triple(_:blank, bad::IRI, ?w.) ( }
ottr:IRI [ cross |  List<NEList<<LUB<owl:rational>>>List> ?/ , xsd:integer  ] zipMin |  @@ ex:Invalid Space ( ( , ) ) ) , ++ "2023-01-01"^^xsd:date ,, :: BASE .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] "?" :: { o-rdf:Type("string", "malformed"^^bad:datatype) , } .
ex: [ ?? xsd:unsignedShort ?var ?e% , ,  ] :: { <unclosedIRI(?r, xsd:invalidType)  } .
ex::doubleColon   invalid 123 , @@ ://noScheme ?Y ) :: { ottr:Triple(_:blank :Invalid Space 23.14.15) } .
ex:Type :: { o-rdf:Type(?EGH, none) , ottr: } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { xsd:Footballer ( ++ ++ ?f _:blank invalid |  ) } ;
owl:Annotation ! xsd:NCName  @  123 (  ) :: { ottr:Triple(_:blank ://noScheme _:b2) , 
xsd:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid 3+.abc ^^ xsd::doubleColon  ; :: { ottr:Triple(ex: :noPrefix 123) ,  } .
"string" [ ++ List<<owl:ObjectProperty>>xsd:invalidType ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :noType :: BASE .
 ">*:w*" @@ ex:Invalid Space ( ( "string"^^^xsd:string ) ,, ) :: { cross bad::IRI ( ++ ++ ?A , _:blank ) } .
ex::doubleColon :: { badPrefix:string } .
://noScheme [ ] :: { o-rdf:Type(?q, ?W$;) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Ul, owl:Template2, "2023-01-01"^^xsd:date) <unclosedIRI(_:blank, "malformed"^^bad:datatype) , } .
?var [ cross |  xsd:Name "string" List<List<List<! invalid 123>>> ?!h1 , , none:integer ?T_|E , ] @@ ex:Template1 ( ?( :: ( ottr:Triple(?V http://example.com/:Invalid Space ""]*"") , ) .
ex:Type [ owl:NamedIndividual ottr: , xsd:gMonthDay   xsd:string ?< = "malformed"^^bad:datatype , , ?? ?JfD  ,   rdfs:Datatype ?n = ?~ ] :: { ottr:Triple(?\* ottr:Annotation _:b1) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ List<List<List<++ xsd:boolean ?edA = "value"^^invalid>>> ?k , ?! xsd::doubleColon  , ] :: { ex::doubleColon(?f?*H, ?E+x) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://example.com/:Invalid Space [ ] :: {  } ;
"string" [ ? List<<xsd:byte>>List 123 = :noPrefix , , ?? "string"  xsd:positiveInteger badPrefix:string @  ottr:IRI ( _:blank zipMin |  ) :: { "unclosed } .
ex:Invalid Space [ ?var ]  :: { ottr:Triple(ottr: :Triple invalid) ex: ( 23.14.15 ) ++ ?B ,, } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ">*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI  @@ cross 123 ( ++ ++ (  ) ) ) @@ http://invalid ( LUB ) :: { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) 
xsd:Annotation [ owl:AnnotationProperty ?#.5@ , , ?!! xsd:NCName 123 ?{G , ] { o-rdf:Type(?w, none) , } .
owl:Footballer :: { ex:(?3, "malformed"^^bad:datatype) , ex::doubleColon(?-, ottr:Template2) ) } 
://noScheme :: BASE .
foot:Template1 [  ] @@ ottr:IRI ( ++  ) ( :: { ex::doubleColon("a*is*", ?var) , }
"string" LUB<owl:real> ?G7 , ,  LUB<xsd:NMTOKEN>invalid ?"R?1 , ++ ++ xsd:dayTimeDuration "string" = bad::IRI @@ LUB :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ xsd:o-rdf:Triple ?M , ] xsd:invalidType :: { ottr: } .
ex:Invalid Space [ List ] :: { cross |  <unclosedIRI (  ) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ :noPrefix ( "string"^^^xsd:string ) ^^ :noType invalid |  :: { ottr:Triple(_:blank, ex:, false) } .
123 [ ] :: { ottr:Triple(?e:O badPrefix:Invalid Space ?5) , o-rdf:Type(?*, ""Q+"") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?FVo', none) ) 
http://example.com/:Template2 [   xsd:nonPositiveInteger  @@ invalid |  http://invalid (  ) @@ zipMin |  ex::doubleColon (  ) :: { bad::IRI(?>, "unclosed) ; } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  rdfs:Datatype "string" , , ottr:foaf:name ?wl ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
123 [ ++ ++ xsd:time 123 = 23.14.15 , List<ottr:IRI>:noType ?var @@ invalid |  owl:Footballer ( _:blank ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(ottr:, ".*") ,  } .
ex: [  ] @ bad::IRI ( ?-:g cross |  ) :: { ottr:IRI ++ (  ) ) ,, } .
http://invalid [ ] :: { ://noScheme } .
 :: { ottr:Triple(?exd, :Type, ""unclosed") ottr:Triple(_:blank ex::doubleColon ?i4) , } .
<unclosedIRI [ ! ?r? =  , ] LUB :: ( ex:Invalid Space(?&, "unclosed) ) .
"string"   :: { <unclosedIRI(?y#, "invalid"^^http://invalid) ) 
xsd:Template2 [ ?!! xsd::doubleColon ?t , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?`i owl:Invalid Space ex:) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { o-rdf:Type(_:blank, ?S) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ LUB ] @@ zipMin |  "string" ( _:blank ,, ) ; :: BASE .
bad::IRI [ LUB<xsd:unsignedByte> List  @@ "\*ol*" :: { <unclosedIRI(?var, abc.-0+) , } .
http://invalid :: { ottr:Triple(?@0, :noPrefix, "unclosed) ex:Invalid Space ++ ++ ( (  ) , "2023-01-01"^^xsd:date ) ) cross |  } .
 "string" ?> zipMax |  @@ 123 ( ++ invalid term  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon [  ?. , ?!! xsd:negativeInteger 123 = "unclosed , , ! xsd:anyURI   , ] badPrefix:string :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ) } (
xsd:Annotation [   xsd:normalizedString , xsd:gYear "string" ?! xsd:invalidType ?"&, , , ??   ,  ] { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ?? 123 = "unclosed (  ) ) ?/ , LUB<<List<xsd:duration>>>invalid ?seF @@ "string" ( List ) :: BASE .
ottr:Footballer [ ++ ++ LUB "string" , ] { ex:Invalid Space("?", ?%Q9P]Z) , } .
<unclosedIRI [ ?var ] bad::IRI :: { ottr:IRI ( 1..2 ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, none) } .
:noPrefix [ ] :: { :noType } .
://noScheme :: { ottr:Triple(?x@"G~l  ottr:) ,  } .
http://invalid [ ?!! rdf:HTML  = ( "O+" ,  ) , ,  ] :: { ottr:Triple(?ir, xsd:Type, "unclosed) ( } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  123 ( ++ ++ ( ?N ,, ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
http://example.com/:Invalid Space [ xsd:language "f*b-*" , ! t-pnd:Punned-Class-ObjectProperty , ? xsd:Name "string" = 23.14.15 wrong xsd:decimal   @ ex:Triple xsd:invalidType :: BASE
ottr:IRI [   ?H'  , ://noScheme ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ]  :: { ottr:Triple(_:blank, ex:, "malformed"^^bad:datatype) (_:blank, 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
http://example.com/:Annotation ottr:Bot 123 @@ cross |  <unclosedIRI (  ) :: { o-rdf:Type(_:blank, ?U) , ex:Invalid Space ( "unclosed ) } .
http://invalid [ ?!! :noType  , ] xsd::doubleColon :: {  } .
bad::IRI [ ?var ?9 ! List<xsd:nonPositiveInteger>xsd:invalidType 123 = badPrefix:string , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  @@ ex::doubleColon (  ) ) ^^ invalid ,, :: { LUB } .
:noPrefix :: { ottr:Triple("|" xsd:Triple ottr:) }
badPrefix:Invalid Space [ ++ owl:DatatypeProperty ] { ottr:Triple(?(4h foot:Footballer ex:Template2) , } .
:Type [ ] :: BASE
badPrefix:Triple :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ++ ++ rdfs:Resource ?w = invalid^^type  ?lg9 , ++ LUB<xsd:dateTime>xsd::doubleColon "string" = "malformed"^^bad:datatype , ] { ottr:Triple(_:blank bad::IRI ://noScheme) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ "`*" :: { http://invalid(?>, ?G) ottr:Triple(123, :Template1, ex:Template2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ] :: { badPrefix:string } .
ex:Invalid Space   :: { ex::doubleColon(?R', ""u+"") , o-rdf:Type(?B, "unclosed) ; } .
 [ :noType ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
<unclosedIRI [ "string" ?y , , xsd:time  @@ zipMax |  ottr:IRI (  ) :: { :noPrefix ( "2023-01-01"^^xsd:date ^^ xsd:invalidType ,  ) 
o-rdf:Invalid Space [ xsd:gYearMonth  ] LUB :: { ottr:Triple(?\, http://example.com/:Type, 0+) , } 
?var [ 123 ?{ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ".*" } .
ottr:IRI [ "string" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noType <unclosedIRI :noPrefix) } .
owl:Invalid Space  @  ( (  ) ) ) :: {  } .
ex: [ ?! xsd:time , ,  @@ || http://invalid (  ) :: { cross |  bad::IRI ( _:blank _:blank invalid |  ) } .
://noScheme [ ] :: { o-rdf:Type(_:blank, "invalid"^^ex:Invalid Space) , ://noScheme(?w~vBaHb>, ?Lx) ; } .
o-rdf:Footballer [ ?? xsd:date , ] List :: { ottr:Triple(_:blank, ://noScheme, "2023-01-01"^^xsd:date) ottr:Triple(_:blank ex: "unclosed) , 
"string" [   rdfs:Literal ,  ] @@ ottr:IRI  , :: { ottr:Triple(?r, ex:Type, none) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ zipMax |  xsd:string "string" @@ 123 :: BASE .
http://invalid [ ] :: { "string" ( (  ) ^^ xsd:invalidType ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(://noScheme, _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template2 [ ++ ++ LUB 123 ?var ?= , ] :: { ottr:Triple(_:blank, ex:Footballer, "unclosed) } .
<unclosedIRI none ,, ?%R$ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || bad::IRI ( _:blank ++ ++ ?>! ,  ) :: {  } .
ex::doubleColon [ !  = ?s]N. , invalid ] ottr: :: { ex:(??79, ?J) , } .
 [  ] { ottr:Triple(?U :noPrefix "invalid"^^ex:Invalid Space) , badPrefix:string } .
ottr:Type [ ?? LUB<xsd:positiveInteger> "string" = (  ) , , xsd:base64Binary List , ] @@  bad::IRI ( xsd::doubleColon ) , :: BASE
:Template1 :: { o-rdf:Type(?j, _:b2) ; }
"string" [  @@ cross ://noScheme ( ++ ( , )  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank :Annotation _:b2) , } .
ottr:IRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space 123 ?aPx , , NEList<List<List<"unclosed>>> ?I ,  :: { ottr:Triple(?zWT, :noPrefix, ex:) ; } .
<unclosedIRI [ xsd::doubleColon ] zipMax |  @@ http://invalid ++ ++ ?2 , List :: { ex::doubleColon ( _:blank ,, ) } .
bad::IRI [ xsd:yearMonthDuration badPrefix:string || List<<xsd:hexBinary>>ottr: 123 ,  rdf:HTML ] invalid :: (  ) .
xsd:Invalid Space xsd:time  , , ?! "string"  @@ ?var  : { ex:Invalid Space("unclosed, ?4}#) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ "string" ?3  @@ zipMin |  ottr:IRI (  ) :: { http://invalid(_:blank, _:b2) , ?var } .
:Footballer :: BASE .
<unclosedIRI [ List ] @ ex: ( ++ ++ "string"^^^xsd:string ,, ) :: { ://noScheme (  ) ^^ LUB zipMax |  
ex:Invalid Space [  ] :noPrefix :: { ottr:Triple("e*"  ?#<L`B) } .
ex::doubleColon ++ NEList<ottr:IRI>:noType 123 = ?s , @@ cross bad::IRI ( ( abc ,, ) ) ++ "string" , _:blank ) , :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
xsd:Template2 [ ?!   , ?? xsd:Name  ] { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, "unclosed) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?E, owl:Triple, badPrefix:string) , }
http://example.com/:Invalid Space [ ] : { ottr:Triple(?' ex:Type 23.14.15) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE
?var [ "`+" ] @@ ex:Triple ( "string" ) :: { ottr:Triple(?_, http://invalid, "unclosed) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
://noScheme ?? List ?P  cross @@ <unclosedIRI ( ++ ( , ) ++ ++ ( 123 ,  ) ) , ( :Type ) zipMax |  ) :: { (ex:, ?bj,) , } .
ex:Invalid Space [ ] :: { ottr:Triple(_:blank foot:Invalid Space invalid) ( } .
bad::IRI [ NEList<<LUB<owl:rational>>>badPrefix:string  ] ottr: :: { LUB } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?H, ""unclosed") o-rdf:Type(?C, true) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ? xsd:int  = 23.14.15 , ! "string" = ?=rTX?a4ED , , cross |  xsd:nonPositiveInteger  , ] :: {  "string" ( _:blank ) } ;
badPrefix:Template2 [ List<List<NEList<"y*-d*">>> ?nt , ] {  } .
o-rdf:Triple :: ( ottr:Triple(?vQhuD, ex:Annotation, ?,) ( ) .
ottr:IRI [  ] @@ cross |  bad::IRI ( ( foot:Invalid Space ,, ) ++ ++ ?o_ ) , @@ "string" ( (  ) ) ^^ xsd:invalidType ,, ) :: { ://noScheme("q*=}*", 123) , } .
ex: ?? xsd:unsignedByte "string" = "malformed"^^bad:datatype , ,  @@ http://invalid _:blank  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ cross LUB<<List<rdfs:Resource>>>List  , @@ zipMax |  ex:Invalid Space (  ) @@ invalid |  :noPrefix (  ) :: { ottr:Triple(_:blank ex::doubleColon 23.14.15)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI } .
?var [ 123 ?b ] { o-rdf:Type(?&;, abc) , zipMin |  badPrefix:Template1 ( ++ ( , ) , LUB ) } .
http://example.com/:Template2 [ xsd:float xsd::doubleColon owl:rational 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: { (?l, 1..2) } )
:Type [ ++ rdfs:Literal ,  ?X ,  ] :: { ://noScheme(?iz<j, "2023-01-01"^^xsd:date) , 
http://example.com/:Template1 [ ++ LUB<<List<xsd:string>>>xsd:invalidType "string" = 23.14.15 , ,  xsd:long ?)e = "unclosed , ] {  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: ( (  ) -6+ ^^ List ) , @@ invalid |  ?var ( ++ ++ ?var 1 zipMin |  ) :: BASE .
ex:Invalid Space [ ] :: { ottr:Triple(invalid o-rdf:Invalid Space <unclosedIRI) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon "string" ?dP%#5 @@ ://noScheme ++ ( 123 ,, ) ) ,  ) :: { 123 } .
:noPrefix [ "s+" ] @@ || http://invalid ( _:blank ,, ) @@ zipMax |   ( :noType ) :: { bad::IRI(_:blank, ?B) ( } .
xsd:Footballer [ ?!   ,  ] LUB :: { ottr:Triple(?Mi, ex:Invalid Space, 23.14.15) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, none) } .
owl:Template2 [  xsd:gDay ?l> ?!! ottr: ?F , ,   xsd:gMonth ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  ottr:Annotation ( "unclosed ) }
badPrefix:Type :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [  NEList<xsd:yearMonthDuration>badPrefix:string 123 = invalid^^type ]  :: { ottr:Triple(_:blank, ex:, "unclosed) , } .
badPrefix:Invalid Space !  ?B9 , NEList<List<List<"string">>> ?[ xsd:invalidType invalid |  @@ ?var ( "string"^^^xsd:string ) ) , ++ ( true ,  ) zipMax |  :: {  ://noScheme ( _:blank ) } )
ex:Invalid Space [   rdfs:Literal "string" = ( bad::IRI ) , ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { "l+" } .
 [ ] :: { ottr:Triple(ottr: ex:Footballer ?;tPp) o-rdf:Type(?V, LUB) , ex::doubleColon(?a, http://example.com/:Template1) ( } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  123 (  ) , @@ :noPrefix (  ^^ :noType xsd::doubleColon ) {: {  } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Triple [  ] "O*" :: ( o-rdf:Type(?d, "2023-01-01"^^xsd:date) ) .
o-rdf:Annotation [ xsd:int "+" , , cross owl:DatatypeProperty ?J , , ++ ++   123 ?3 xsd:hexBinary "string" , @ zipMin |  foot:Type ( ++ ++ none ,, ) :: BASE
xsd:Type [ ] :: { ex:(ex:Invalid Space, ?<) ; }
ottr:IRI [ zipMin |  List<xsd:gDay> "string" NEList<List<List<rdf:HTML ?CP1>>> ?{9 , ] 123 :: BASE .
?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ List @  http://invalid ( ( ?var 1 , (  ) ) ) _:blank ,  ) :: { o-rdf:Type(?}, "v") } .
<unclosedIRI [  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank badPrefix:Footballer false) ottr:Triple(??, bad::IRI, "invalid"^^:noPrefix) , ex::doubleColon ( "malformed"^^bad:datatype ^^ :noType zipMax |  ) } .
 [ ! xsd:long , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  ; { ://noScheme(?dB~_(\, none) , } ..
"string" [   xsd:yearMonthDuration 123 = xsd:invalidType ] { xsd::doubleColon } .
:Invalid Space ?!   , ++ ottr:Bot @@ ex:  @@ ?var (  ) :: ( ottr:Triple(?; foot:Template1 23.14.15) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Template2 [  ?Y ?   , , "unclosed ] { ottr:Triple(?var ex:Template1 _:b2) , http://invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ] :: { ottr:Triple(_:blank, ex:Invalid Space, xsd::doubleColon) ex::doubleColon(?5\G, ?_)) } .
bad::IRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  ] @ <unclosedIRI ++ ++ ?var 1 ?+  :: { o-rdf:Type(?r4, "2023-01-01"^^xsd:date) , } .
://noScheme [ "string" ?2I7[B^0Z( , ++ xsd:negativeInteger ] List :: {  } .
:noPrefix ?? NEList<<LUB<owl:ObjectProperty>>>xsd:invalidType 123 = "unclosed , @@ invalid |  ex::doubleColon ( ( ( 1..2 , ""F*"" ,, ) ) ) ^^ badPrefix:string ,, ) @@ cross |   ( ++ "malformed"^^bad:datatype ) :: { ex: ( :noType ) }
ottr:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?' o-rdf:Type 23.14.15) ) } (
xsd:Footballer [ ++ ++ xsd:time "string" = "malformed"^^bad:datatype , @@ ottr: :: ( <unclosedIRI(?*, false) ; ) .
ottr:IRI [ ?!! xsd:unsignedInt ?0 = "value"^^invalid ++   , ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Annotation [ List<List<List<zipMin |  NEList<<LUB<xsd:dayTimeDuration>>>ottr: "string">>> ?W , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ||  ( ( , ) ++ ( _:b2 ,, ) ) , 123 ^^ List ) ( :: { ex:(http://invalid, ?+|SK) } .
123 [  @@ <unclosedIRI _:blank cross |  @@ ex::doubleColon ( ++ ++ ( "unclosed , 23.14.15 ) ,, ) :: BASE .
ex:Invalid Space :: { o-rdf:Type(?lYe*(, "string") , } .
bad::IRI xsd:int ?o , , ?? xsd:integer ?q/  @@ invalid |  ://noScheme (  ) :: {  } .
:noPrefix [ ] :: { ottr:Triple(_:blank owl:Triple false) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ "unclosed ] :noType :: { zipMax |  "string" ( xsd:invalidType ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?t, ex:Invalid Space, ""w+"") , } )
ex:Type [ ++ ++ xsd:decimal , "string" ?)C  ] { ottr:Triple(_:blank  "malformed"^^bad:datatype) , badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ?$H , , ++ ottr:IRI 123   ] @ zipMax |  ex:Invalid Space (  ) :: { badPrefix:string 
ottr:IRI [ 123 @@  (  ) ) ^^ List cross |  @@ ex: (  ) :: { o-rdf:Type(?8, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank http://invalid none) ( } .
xsd:Template2 [ ?var ?NrTI ] "9*" :: BASE .
:noPrefix :: { ottr:Triple(<unclosedIRI, badPrefix:Template1, ?Z) , } .
://noScheme  xsd:integer ?RVB , NEList<<LUB<xsd:double>>>xsd::doubleColon "string" , @@ ottr: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?*, o-rdf:Type) bad::IRI(?gE, xsd:invalidType) } .
ex:Invalid Space [ ] :: {  } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  owl:Triple ( invalid ) } .
foot:Annotation [   xsd:boolean  = "unclosed , , ?!! :noType  @@ 123 (  ) :: (  ) .
foot:Template1 [  ] @@ invalid |  "string" (  ) ; :: BASE .
ottr:IRI ++ xsd:nonNegativeInteger  @@ ?var :: { ottr:Triple(_:blank, ://noScheme, 23.14.15) ottr:Triple(_:blank ex::doubleColon none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?:(, :noPrefix) ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ List<List<( ?var 1 ,, ) , >> ?P , ] xsd:invalidType :: {  } .
 [ ] :: { <unclosedIRI "Q" } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(List, ?>) , ottr:Triple(?)[;%` xsd:Triple true) }
123 [  LUB<xsd:dateTime>badPrefix:string 123 , , xsd:token ?zEp6k  :: BASE
ottr:Footballer [ ?!! t-pnd:Punned-Class-ObjectProperty   , LUB ] @ ottr:IRI ( ++ ++ "malformed"^^bad:datatype , (  ) ) ^^ invalid  ) :: { :noType 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ zipMax |  xsd:float ?!h , , "s+" ] { ex:Invalid Space(xsd:invalidType, _:b2) , } .
ottr:IRI ++ LUB<xsd:language>badPrefix:string  = "malformed"^^bad:datatype @ "string" (  ) ) ^^ ottr: ( , ) cross |  :: { owl:Type ( 123 ) } .
bad::IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] ://noScheme :: { ottr:Triple(?K badPrefix:Template2 ?f) o-rdf:Type(_:blank, LUB) ( } .
ex::doubleColon [ xsd:Name invalid , ] :: { ottr:Triple(?&, :noPrefix, 1..2) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  <unclosedIRI (  ) :: { "unclosed } .
?var [ !  "string" "string" ?8~ , xsd:gDay 123 @@ :noType \: {  } ...
foot:Template1 :: { ex:Invalid Space(?;, "2023-01-01"^^xsd:date) , ottr:Triple(?jQZ=N ex:Footballer 23.14.15) ; }
ex:Invalid Space :: BASE .
ottr:IRI   xsd:invalidType "string" , "string" @@ LUB :: { o-rdf:Type(?8, bad::IRI) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { "w*" 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank <unclosedIRI ?.64O) , } .
ex:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(invalid, ottr:Invalid Space, _:b2) , } .
ex::doubleColon [  ] @@ zipMin |  http://invalid (  ) , @@ ?var (  ) :: { (_:blank, none) , ://noScheme(_:blank, _:b1) ex:  } .
:noPrefix [  xsd:language ?U = "unclosed ] {  } .
xsd:Template2 [ ++ ++ NEList<<LUB<xsd:token>>>List 123  , ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
badPrefix:Triple [ ?  = ?0i , , xsd:date  123 ?- , ?! xsd:byte , , ! rdfs:Datatype , ,  ] :: { o-rdf:Type(?>t?, abc) ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space [ ex:Invalid Space ] { "unclosed } .
bad::IRI [ ! ottr: ?y  ] invalid :: { ottr:Triple(_:blank :Template1 ?var) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] || @@ ex::doubleColon ( ( ( ?var 1 ) ,, ) ) ^^ xsd::doubleColon , 1..2 _:blank zipMin |  ) :: { (http://invalid, ?RJ) invalid |  123 (  ) } .
:noPrefix [ ? xsd:long , ?! xsd:integer @@ <unclosedIRI (  ) , @@ ex:  :: { ottr:Triple(?S, ://noScheme, ""unclosed") , o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
"string" LUB<ottr:IRI> "/" , , cross |  List<xsd:NMTOKEN> ?W , @@ xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Footballer [ "string" ?+ , , ?? "string"  , , ++ xsd:date  = "malformed"^^bad:datatype ] : { o-rdf:Type(?7D, 23.14.15) } ...
ottr:Triple [ ] :: {  
foot:Type :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ?!! xsd:anyURI ?e = 23.14.15 , @@ "string" ( _:blank ) ; :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI   @@ owl:Template1 "string"^^^xsd:string ,, :: { ottr:Triple(, , invalid) , "^" } (
:noPrefix [ ?! rdfs:Datatype ,  ] @@ ex:Invalid Space  , @@ zipMax |  ex: (  ) :: { ottr:Triple(_:blank http://example.com/:Annotation 123) } .
<unclosedIRI [   List 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ://noScheme :: { zipMin |  ex::doubleColon ( ++ (  ) ) , badPrefix:string ) } .
 [  LUB<owl:AnnotationProperty>xsd:invalidType "string" = "malformed"^^bad:datatype ] :: { http://invalid(?B;, ?v) , } .
?var :: { o-rdf:Type(?%, "2023-01-01"^^xsd:date) , }
:Type [ ] :: BASE
xsd:Triple xsd:decimal "x+" ottr: @@ foot:Footballer ?1 ) :: { ottr:Triple(?$G, ottr:Template2, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space } .
123 [ List<List<List<  xsd:gYear ?] = badPrefix:string>>> ?+i @@ owl:Template2 ( _:blank cross |  ) ; :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ++ ++ List<owl:ObjectProperty>:noType , , zipMax |  xsd:gDay 123 , @@   @@ invalid |  http://invalid ( ++ "string" ) :: {  }
:noPrefix :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
ex: [ ] :: { ottr:Triple(?8bx, bad::IRI, "E") } .
://noScheme [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ xsd:<unclosedIRI ?>7 , ?var ] @@ wrong ex::doubleColon ( LUB ) :: BASE
o-rdf:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] List :: { ottr:Triple(invalid ottr:Footballer ?&9.IT3e) , zipMin |  xsd:Invalid Space ( abc ^^ xsd:invalidType ++ ++ ( (  ) ,, ) ) ,, ) } .
http://invalid [ ?! xsd:duration  ]  ; { ottr:Triple(_:blank ex: "2023-01-01"^^xsd:date) http://invalid(_:blank, _:b2) , } ...
:Triple [  ] "string" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: BASE .
ottr:IRI [ LUB<xsd:token> ://noScheme , @@ badPrefix:string :: ( ex:(?vc, "S*") ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ++ owl:Class "string"  ]  :: { ex::doubleColon } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  bad::IRI ( ottr: ) , @@ http://invalid ( ?' ^^ :noType  ) :: { ottr:Triple(LUB, :noPrefix, 2+) ,  (  ) invalid |  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
123 [ ] :: { o-rdf:Type(_:blank, ?hj) , 
ottr:Annotation [  xsd:Name , ,  ] :: { ottr:Triple(?F ex:Invalid Space _:b1) ottr:Triple(_:blank ex::doubleColon _:b2) ( } )
ottr:IRI ?! xsd:negativeInteger  @@ zipMin |  123 (  ) ; :: { ottr:Triple(_:blank, ://noScheme, 23.14.15) , }
ottr:IRI [ wrong xsd:Name ?4 ] 123 :: BASE .
foot:Template2 [ ++ NEList<rdfs:Literal>xsd:invalidType 123  , ] @@ "string" ( "unclosed ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI :: { bad::IRI(badPrefix:string, "invalid"^^://noScheme) , } .
:noPrefix   xsd:duration  = "unclosed , , xsd:decimal :noType  @ http://invalid ( ++ ( "malformed"^^bad:datatype ,, ) ) ,, ) :: { ex: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
 [  ] :: { ottr:Triple(_:blank ex:Invalid Space ?*]) ; } .
?var [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon (  ) zipMax |  , @@  bad::IRI (  ) :: { o-rdf:Type(?GE, ottr:) 
owl:Template1 [ ++ ++ ottr:IRI ,  invalid |  @@ cross |  ?var ( _:blank  ) :: { zipMin |  http://example.com/:Footballer (  ) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ottr:o-rdf:Annotation ?> , 123 ] :: { ex: } .
"string" [ ] :: BASE .
ottr:IRI [ xsd:boolean "." , @@ ex:Template1 ( ?6g :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank  _:b1) , } .
://noScheme [ ?   , ,  ] @@  :: { ottr:Triple(_:blank, ex::doubleColon, _:b2) , o-rdf:Type(_:blank, ?i)  } .
bad::IRI :: { <unclosedIRI ( ++ ( ( "string"^^^xsd:string ,, ) ) , ""l*"" ) , ?I ^^ List xsd::doubleColon ) } )
123 ! xsd:yearMonthDuration  @@ http://invalid  @@ cross |  ?var (  ) ; { ex:Invalid Space(_:blank, "2023-01-01"^^xsd:date) } .
badPrefix:Type [  ?v ] :noType :: { ottr:Triple(?O?, xsd:Footballer, xsd:invalidType) , }
<unclosedIRI [ zipMax |  xsd:gDay 123 , ] List :: BASE .
"string" [ List<<xsd:anyURI>> ?.  ] :: { ex:Invalid Space(://noScheme, "2023-01-01"^^xsd:date)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ ++ ++ xsd:boolean , , ++ xsd:time ,  ] @@ ottr:IRI (  ) :: { ottr:Triple(_:blank bad::IRI ?var) , o-rdf:Type(_:blank, 23.14.15) 
http://invalid [ ?? xsd::doubleColon "string" @@ ex:  , @@ ex::doubleColon (  ) :: { ottr:Triple(?I8, badPrefix:Annotation, ?rS) , } .
:noPrefix :: { ("D*", _:b2) , } .
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross |  foot:Type ( invalid ) :: { xsd:invalidType } .
:Footballer [ ] /: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { wrong xsd:Invalid Space ( invalid term ^^ :noType ++ ++ (  ,, ) ) invalid |  ) } (
http://example.com/:Triple [ ":" ] { ottr:Triple(?WZ ex:Template2 none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ xsd:byte xsd:invalidType List<"+*"> ?y @@ :noPrefix ( _:blank 123 ) , :: BASE .
http://example.com/:Type [  ] @@ zipMin |  "string" ( (  ) ) ^^ xsd::doubleColon ,, ) @@ ://noScheme ++ _:b1 || :: ( ottr:Triple(:noType ottr:Invalid Space ?%C]) ) .
<unclosedIRI [ ++ ottr: ?PsT , ] List :: { badPrefix:string } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { o-rdf:Type(_:blank, "unclosed)  } .
ex:Invalid Space   :: {  http://invalid (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?0, "invalid"^^) , ottr:Triple(?Y, ex::doubleColon, true) ) } ;
?var [ cross |  NEList<xsd:unsignedInt> "string" , , xsd:nonNegativeInteger 123 , ? xsd:gYearMonth  = "value"^^invalid , , ?!! xsd:gYear ?G = 23.14.15 ,   owl:Class ottr:foot:clubHistory ?( ] { ottr:Triple(?1 o-rdf:Template2 "2023-01-01"^^xsd:date) , } .
:Footballer :: { o-rdf:Type(?-g, none) ( 
xsd:Type [ ?!! LUB<<List<xsd:hexBinary>>> , ] bad::IRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  "string" ( ++ none ) } .
ottr:IRI [  @@ ex: (  ) , @@ ex::doubleColon (  ) ) zipMax |  :: BASE .
ex:Invalid Space [ ] :: { <unclosedIRI(?^), ottr:) , } .
://noScheme [ ? xsd:NMTOKEN 123  , , ?var ?O ,  ]  :: { ottr:Triple(_:blank, :noPrefix, _:b1) o-rdf:Type(_:blank, 23.14.15) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 123 @@ 123 ( ";*" ) :: (  ) .
owl:Template2 :: { List 
ottr:Footballer [ xsd:byte  owl:AnnotationProperty LUB ] @@ cross |  "string" (  ) ( : { ottr:Triple(:noType ex:Template1 ?9) , } 
owl:Invalid Space [  ?a , ] :: { ex:Invalid Space(_:blank, "malformed"^^bad:datatype) , ottr:Triple(_:blank, <unclosedIRI, none) } )
ex::doubleColon :: { ottr:Triple(?Xk o-rdf:Type ?`s) invalid |  ?var ( ( invalid term ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
://noScheme [  ] zipMin |  @@ http://invalid ++ ( ?v , :Template1 ,, ) ) _:blank , ++ ++ "invalid"^^ :: { List } .
ex: [ zipMax |  xsd:gYearMonth "string" ] bad::IRI :: {  } .
"string" List<<xsd:token>>xsd:invalidType ottr: , , 123 ?$"| ? xsd:gMonth 123 = 23.14.15 ,  @@ :noPrefix ?y4 ) :: { o-rdf:Type(123, "r+") , } .
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ottr:Template2 ( 3+ ^^ badPrefix:string wrong ) , @@ foot:Footballer ( xsd::doubleColon ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?QC:B xsd:Annotation _:b1) ; }
ex:Triple ?? owl:NamedIndividual , @@ "string"  @@ cross |  ?var (  ) :: ( ottr:Triple(?d, ex:, abc.abc) , ) .
ottr:IRI [  ?P = invalid^^type , LUB<List<<owl:DatatypeProperty>>xsd:invalidType> ?*h , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  @ "string" ( ( ( , ) , invalid ) ) ^^ :noType ,, ) :: { ottr:Triple("unclosed ex:Invalid Space 1..2) :Template1 (  ) _:blank } .
 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(_:blank, ?{,) ) } .
://noScheme [ rdfs:Resource ?var ++ ++ xsd:date ]  :: { ottr:Triple(?p, o-rdf:Footballer, ex::doubleColon) , } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: {  } .
:noPrefix [ ] :: ( o-rdf:Type(?R, -4+) ) .
123 cross |  rdf:HTML  , , badPrefix:string @@ invalid :: BASE
<unclosedIRI [ ++ xsd:positiveInteger 123 = ">*-n*" , , xsd:gMonthDay "string" ] :: { <unclosedIRI(?Zy/o., ex:Type) ,  } ,
?var ?? NEList<<LUB<xsd:positiveInteger>>>:noType , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon  ; :: ( ottr:Triple(?B badPrefix:Annotation ?1") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ xsd:invalidType ] @@ owl:Type ( invalid term ^^ badPrefix:string ) :: { o-rdf:Type(_:blank, "invalid"^^ex:) , } .
 [  ] 123 :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "(+" } .
http://invalid [ "string" ?/Yql xsd:duration "string" ] :: { bad::IRI(?S, xsd::doubleColon) , ottr:Triple(://noScheme, :noPrefix, invalid) ( } .
ex:Invalid Space [ ?! xsd:NMTOKEN ?@ =  ,  ?> , ] {  } .
<unclosedIRI :: { <unclosedIRI(?^}_]9Q-, o-rdf:Triple) }
xsd:Template2 [ ] :: BASE
http://example.com/:Invalid Space [ !  123 , , ?!! xsd:unsignedShort , ,  @@ ://noScheme (  ) @@ ottr:IRI  : {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Invalid Space [ !  = invalid^^type ,  ] { ?var ( _:blank , ++ ( ?var 1 , ?d ,, ) ) ) } .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(://noScheme http://example.com/:Template1 ?y") , } .
ottr:IRI :: BASE .
:noPrefix [ ottr:boolean ?s!=~ @@ zipMax |  http://invalid ( 23.14.15 ,, ) ; :: { ottr:Triple(?k, , List) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ++ xsd:yearMonthDuration  ] @ bad::IRI _:blank zipMin |  :: { ex:Invalid Space(_:blank, ""unclosed") , 123 } .
ex: [ ] :: { o-rdf:Type("T", "invalid"^^ex::doubleColon) } .
"string" [ LUB<rdfs:Literal> invalid , ] badPrefix:string :: { bad::IRI(?i, abc.-1+)  }
ex:Footballer [ ++ ++ xsd::doubleColon "string" , , ottr: ] :: { ottr:Triple(??Z/\, o-rdf:Triple, "malformed"^^bad:datatype) ) 
xsd:Footballer [ http://invalid @@ cross |  "string" ( ( 123 ) ) ^^ :noType ) :: { <unclosedIRI(_:blank, ?0@) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ! xsd:anyURI  = "value"^^invalid ,  ] LUB :: ( ottr:Triple(_:blank, :Invalid Space, _:b1) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space   ottr: "string" , ,  zipMin |  @@ ://noScheme  :: { ottr:Triple(?9 :noPrefix "malformed"^^bad:datatype) , } .
bad::IRI [ ] :: { o-rdf:Type(, "Z") , 123 } .
 :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ LUB<xsd:invalidType> ?; zipMax |  List<<xsd:Name>>badPrefix:string ?u ] :: { ex:Invalid Space(?%}2y, ""D*T6*"") ?var ( ++ ++ (  ) ,, ) }
o-rdf:Template2 [ xsd:unsignedShort xsd::doubleColon , ]  :: { ex:(?pb, none) ( 
http://invalid [ 123 @ ?var ( "string"^^^xsd:string , ://noScheme ) :: { <unclosedIRI(?@a, ?L) ( } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ++ ++ xsd:normalizedString ,  :: { invalid |  :Triple (  ) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("R*" ex::doubleColon "invalid"^^bad::IRI) , invalid } .
ex:Invalid Space :: { ottr:Triple(_:blank, o-rdf:Template2, List) , } .
ex: [ ?! xsd:double ?U = "malformed"^^bad:datatype  xsd:yearMonthDuration 123 ,  :noType  , ,  ] @@ ex:Template1 ( ?D :: { o-rdf:Type(?], 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ?? LUB<<List<ottr:Bot>>>xsd::doubleColon "string" = invalid^^type ] LUB :: {  }
"string" [ ] :: { ://noScheme(?+C;W#, none) 
http://example.com/:Template1 ?!! ?\/ = _:b2 , ,  ?!   xsd:int , , ++ xsd:integer owl:real badPrefix:string , ,  @@ "unclosed :: BASE
<unclosedIRI [ ++ owl:real "string" = invalid^^type  ]  :: { o-rdf:Type(_:blank, "unclosed) o-rdf:Type(_:blank, _:b1) , } ;
ottr:IRI [ NEList<123> ?Z , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Footballer [  LUB<xsd:unsignedInt> , :noType ] ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { (?x9A*-!, ?MGj) , ottr:Triple("unclosed :noPrefix xsd::doubleColon) } .
ex::doubleColon [ ? ottr:  @@ http://invalid  @@ ://noScheme ( _:blank ,  ) :: { ottr:Triple(?@, ex:, "malformed"^^bad:datatype) , } .
bad::IRI :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" xsd:gMonthDay ?mXC , zipMin |  @@ zipMax |  http://example.com/:Annotation ( ++ ( abc ) ) :: { LUB }
ottr:Template2 [ ! rdfs:Literal 123   ] { cross |  ex:Type ( _:blank  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?? NEList<xsd:token>List ,  ] @ zipMin |  ex: ( _:blank ,, ) :: { ottr:Triple(?V <unclosedIRI _:b2) , } .
ottr:IRI "string" @@ :Template2 ( ++ (  ) ) ) , :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
 [ ++ "string" = ?<EI , , xsd:negativeInteger :noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("1*^n*", o-rdf:Footballer, ?>r) } .
http://invalid :: { o-rdf:Type(_:blank, xsd::doubleColon) ; } .
ex::doubleColon [ ] :: { LUB } .
://noScheme [ ?! xsd:long  = (   @@ xsd:invalidType :: BASE
bad::IRI [ xsd:string 123 , ]  : { ex:Invalid Space(?W(v, foot:Triple) , ?var ( "unclosed ,, ) , ++ ++ ?q  } 
http://example.com/:Annotation [ ( , ) ?Nx , invalid |  xsd:language ?3 ]  :: { ottr:Triple(?[:!HT09P ex:Template1 23.14.15)  } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:foaf:name ?L^ ] @ ottr:IRI ( 0+.abc ^^ invalid ,, ) :: { ottr:Triple(".*Y|*", ex:, "malformed"^^bad:datatype) , } .
?var [ ] :: { ://noScheme(_:blank, ?!0) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
xsd:Triple [ xsd:invalidType  :: BASE .
<unclosedIRI  @@ 123 :: { invalid |  http://invalid ( _:blank ++ ++ ?& ) } .
bad::IRI :: { o-rdf:Type(?m, badPrefix:string) ex:Invalid Space } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { ottr:Triple(?Z ottr:Annotation "invalid"^^ex::doubleColon) ; } ...
"string" [ List<xsd::doubleColon> ?S , ] :: { o-rdf:Type(?3i, ""++"") }
ex:Invalid Space [   rdfs:Datatype , ,    , ?! xsd:gYear "string"  zipMin |  xsd:date 123 , ?!! xsd:long , ] { o-rdf:Type(?GyVD, _:b1) ) } .
:Triple [ NEList<"string"> ?ua ex:Invalid Space @ :noPrefix ( (  ) ) ^^  ,, ) ; { invalid |  ottr:IRI (  ) } 
?var :: { o-rdf:Type(?8M, invalid) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ex:Template1 ( ?*K ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { ottr:Triple(_:blank, ex:Invalid Space, ?({) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("unclosed  1..2) , ://noScheme(?Pf, o-rdf:Template1) , } .
http://invalid ?? List<<rdfs:Resource>>badPrefix:string , , rdf:HTML "D" , ++ xsd:invalidType ?1  @@ bad::IRI _:blank , List :: { ottr: } .
123 [   "string"  , ] :: {  }
ex: [  ] "p*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Invalid Space [ ?!! owl:ObjectProperty  = 23.14.15 ] { ottr:Triple(_:blank <unclosedIRI "unclosed) o-rdf:Type(_:blank, _:b1) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI  @@ foot:Type  :: { ottr:Triple(?g, badPrefix:Invalid Space, true) ( } .
ex::doubleColon [ ?!! xsd:base64Binary ?H?]_xcnS  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
123 [ "string" ] :: { o-rdf:Type(_:blank, ex:) ottr:Triple(badPrefix:string ://noScheme ?{M) , 
bad::IRI [   123 = ( "malformed"^^bad:datatype  , ] @@ :noPrefix ( _:blank ,, ) @@ zipMin |   ( ( ottr:Annotation ,  ) ) ^^ xsd:invalidType , xsd::doubleColon ) :: { ")*}4*" } .
ex:Invalid Space [ ] :: { <unclosedIRI(?m<1, _:b1) } .
http://invalid [ LUB<<List<xsd:anyURI>>> List ] ottr: :: {  } .
?var :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?\7, ex:Triple, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
owl:Template2 [ xsd:unsignedShort "string" , , ?! rdfs:Datatype  = invalid^^type  rdfs:Resource  ] {  http://example.com/:Footballer ( ( invalid term ,, ) _:blank invalid |  ) } .
"string" [ xsd::doubleColon ] @@ cross |  ottr:IRI ( "7*N)*" ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Type [ xsd:float ?2 , ? List<xsd:time>xsd:invalidType  = 23.14.15 , ,  ] { 123 } .
://noScheme :: { ex:(ex:Invalid Space, "unclosed) ottr:Triple(?WB http://example.com/:Template1 ?hF) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank, :noPrefix, List) , bad::IRI ( ++ (  ) , ++ ++ ( , ) ) } .
 [ ] :: { o-rdf:Type(?0q>, "malformed"^^bad:datatype) , } .
ex::doubleColon [ invalid |  owl:rational "string" ?? badPrefix:string 123 ] :noType :: {  } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?=VT :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
?var [ ?!! ?1} = "invalid"^^ex::doubleColon , zipMax |  @@ ottr:Template2 _:blank ,, :: ( http://invalid(?3u, none) , ) .
foot:Footballer [   xsd:long ?cw = "value"^^invalid , , ++ xsd:gMonthDay -8+ ?p ottr:Bot "z+" , ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [   xsd:double ?5Q = "unclosed ++ List<<xsd:token>>ottr: 123 = _:b2 ] "string" :: BASE
ottr:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: :: BASE .
ottr:IRI [ ] :: { o-rdf:Type("unclosed, _:b1) , } .
<unclosedIRI :: { xsd::doubleColon } .
ex::doubleColon [ ?!!   , badPrefix:string ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ zipMax |  rdfs:Literal "string" , ,  @@ :noPrefix  @@ http://invalid (  ) :: { cross  ( _:blank  ) } .
bad::IRI  @@ cross |  ://noScheme (  ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank, http://example.com/:Annotation, "malformed"^^bad:datatype)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?N ex::doubleColon LUB) ) }
123 [ "string" ?G , ] { ex:(?(A, ?"B) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ! List<t-pnd:Punned-Class-ObjectProperty> "string" = "invalid"^^://noScheme ] :noType :: BASE .
<unclosedIRI [ ">*" ] :: { ottr:IRI  
ottr:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(_:blank foot:Triple ?}) ) } .
bad::IRI [ 123 ?0% , ] @ cross |  :noPrefix (  ) :: { ottr:Triple(_:blank, ex:Invalid Space, 23.14.15)  } .
 :: { http://invalid(ottr:, ex:) , } .
ex::doubleColon [ ] :: ( o-rdf:Type(?Q5, ""B"") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
xsd:Annotation [ invalid |  xsd:int ?" owl:AnnotationProperty 123 , ,  ] { o-rdf:Type(?N, "malformed"^^bad:datatype) } .
ex:Footballer ?!!   ,  xsd:dateTimeStamp  = "unclosed , , ?! owl:NamedIndividual ,   @@ :Invalid Space ( ++ (  ) ) ) :: BASE
bad::IRI [ xsd:duration xsd::doubleColon  ] invalid |  @@ "string"  :: { ottr:Triple(_:blank  "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, none) }
ottr:Invalid Space [ 123 ?30 , ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ?w , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?S%8jO, owl:Triple, ?}) , ex:(:noPrefix, "9*") , } .
ex:Invalid Space LUB @@ <unclosedIRI ( _:blank ,  ) , :: {  } .
http://invalid [ ] :: { zipMax |  ex::doubleColon ( ++ ++ "invalid"^^://noScheme ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?`., foot:Footballer, :Template2) ) } .
ex:Type ; { ottr: } 
http://example.com/:Template1 [ cross |  owl:Class "string" @@  123 (  ) , @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
badPrefix:Annotation [ ? xsd:base64Binary , ++ ++ xsd:yearMonthDuration ,  ] @@ wrong o-rdf:Template2 ( (  ) ^^ invalid zipMin |  ) :: BASE
o-rdf:Triple [ xsd:long "string" , cross NEList<<LUB<xsd:language>>>badPrefix:string ?\E , ] :: { ottr:Triple(_:blank, ottr:Annotation, "2*") ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
://noScheme none:bad::IRI ?%A , , 123 zipMin |  @@ "string" (  ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(:noPrefix, ?3) } .
ex::doubleColon [ ? xsd:nonNegativeInteger ] ottr: :: {  ex: ( ++ ++ ( invalid term ,, ) ) } .
<unclosedIRI [  @@ ex:Invalid Space xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] ; { ottr:Triple(?!w  _:b2) ; } ..
?var [ ?!! xsd:nonPositiveInteger ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ?var (  ) , @@ ?var  :: { o-rdf:Type(_:blank, none) ex:Invalid Space(_:blank, _:b1) , } )
:Template2   xsd:unsignedInt  = "malformed"^^bad:datatype , @@ cross |  http://example.com/:Invalid Space ( _:blank zipMax |  ) , :: BASE
"string" :: { foot:Template1 ( ++ ( ?m ,, ) ,, ) } .
ottr:IRI none:decimal ?V_ ?? NEList<xsd:dayTimeDuration>LUB "string" = invalid^^type , @ ://noScheme <unclosedIRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: BASE
ex::doubleColon [ 123 @@ "r*" :: { o-rdf:Type(?}, :noType) , } .
bad::IRI [ xsd:normalizedString 123 , , ++ ++  = xsd:invalidType , LUB<xsd:unsignedInt> ?z ] invalid :: { ottr:Triple(badPrefix:string, ex:Invalid Space, ?.B) , } .
ex: [  ] @@ cross |  http://invalid ( invalid term ) @@ wrong :noPrefix ( 23.14.15 ^^ List ,  ) :: { ottr:Triple(_:blank owl:Footballer "2023-01-01"^^xsd:date) ottr: } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { http://invalid(?A, "unclosed) } .
:Annotation [ ! xsd::doubleColon ?X*-fvaP , ] :: { ottr:Triple(?9 ottr:Template2 true) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
<unclosedIRI [  List<xsd:int> ?c+ ] :: { xsd:Footballer ( ( "2023-01-01"^^xsd:date ,, ) ) invalid |  ) } .
"string" [ ?! xsd:yearMonthDuration ?h  , , ! LUB<xsd:long>LUB 123 = "malformed"^^bad:datatype ,  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
bad::IRI :: { o-rdf:Type(?mo>, ?S) ottr:Triple(_:blank, ex::doubleColon, "=*%b*") ) } .
ex:Invalid Space [ ?var ]  :: { ottr:Triple( owl:Template2 "unclosed) , } .
:noPrefix [ xsd:duration "string" xsd:short badPrefix:string , @@ xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme  , @@ cross |  http://invalid (  ) ; { ex:(_:blank, 23.14.15) , xsd:invalidType } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?R3, o-rdf:Invalid Space, none) 
123 [ zipMax |  xsd:token  , ] @ cross http://example.com/:Annotation ( _:blank ,, ) :: { <unclosedIRI(?B6dK, 1..2) ( }
123 ++ ++ xsd:float  = invalid^^type ,  :: { ottr:Triple(_:blank ex:Invalid Space 23.14.15) , ottr:Triple(_:blank, ex:, _:b1) ) } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ottr:IRI [  NEList<<LUB<xsd:language>>>invalid ?2 = 23.14.15 ,  ] LUB :: { foot:Template2 (  ) } .
<unclosedIRI [ ex::doubleColon @@ invalid |  bad::IRI (  ) :: { o-rdf:Type("unclosed, _:b2) (_:blank, "malformed"^^bad:datatype) } .
:noPrefix :: { "string" } .
://noScheme [ rdf:HTML 123 ] @@ :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
?var [ cross xsd:decimal "string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?l<6, http://example.com/:Annotation, xsd::doubleColon) , ) .
ottr:Triple [ xsd:gYearMonth badPrefix:string , , List<++ xsd:normalizedString> ?fqj_ , ] { ottr:Triple(?"bOz, ex:Footballer, ?c) , } .
"string" [ "D" ] :: { :noType } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Type foot:date ?60 , @@ ex::doubleColon ( <unclosedIRI ) :: BASE .
://noScheme [ ] :: {  } .
:noPrefix :: { http://invalid(?<, ?}[) } .
ex: [ ?H ?-b{ , ,  @@ bad::IRI _:blank ( (  ) , ?var 1 ,, ) ) ^^ badPrefix:string ( :: { o-rdf:Type(_:blank, ?var) , } .
123 [ ?? 123 = "string" ] List :: {  ex:Invalid Space ( ++ ++ "invalid"^^bad::IRI ,, ) } .
owl:Triple [ ?! xsd:unsignedLong ++ ++ xsd:invalidType  , ++ owl:Class ,  ] { ottr:Triple(_:blank, bad::IRI, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?\, ottr:Annotation, ""+*"") ottr:Triple( xsd:Invalid Space 1+.abc) ) } ;
:noPrefix [  @@ "string" _:blank , @@ ottr:IRI (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Triple 123 ?k{ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || bad::IRI ( ++ ++ ( ( invalid term , "malformed"^^bad:datatype ) ) ,, ) , "string" ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Y, foot:Template1, ?var) } .
ex:Invalid Space [ ? NEList<xsd:time>badPrefix:string ?n = invalid^^type xsd:Name ""*" , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { http://invalid(ex::doubleColon, ?:uo) ottr:Triple(_:blank <unclosedIRI abc) , o-rdf:Type(ottr:, false) , } .
://noScheme [ ] :: {  } .
ex: [ List ] invalid |  @@ zipMin |  :Template2 ( ++ owl:Type none ^^ :noType cross |  ) :: { ottr:Triple(?KW%G, xsd:Footballer, _:b1) , }
badPrefix:Invalid Space [ zipMax |  rdf:HTML 123 ] LUB :: { xsd::doubleColon 
ottr:Annotation ??   , , ?! xsd:token , ++ ++ ?g  , , owl:real ?}Be   xsd:gMonthDay ?Z = "malformed"^^bad:datatype @@ "c" :: {  o-rdf:Footballer ( "8+" ) } .
http://example.com/:Footballer [ ?!! List<xsd:unsignedByte>List , ] @@ "string" ++ 7+ ,  ( :: { ottr:Triple(_:blank ex:Invalid Space http://invalid) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
:noPrefix   ?U{ , , ?! 123 = "string" cross |  @@ ex: ( _:blank zipMin |  ) :: { LUB } .
 :: { invalid |  bad::IRI ( ( ( ( , ) ,  ,, ) ) ) ,, ) } .
ex::doubleColon [ ] :: { ottr:Triple(123, foot:Type, ?'>2) } .
://noScheme [ xsd:yearMonthDuration ?3a! , ottr: ] "5" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  @@ badPrefix:string :: { <unclosedIRI(?d.i, _:b1) o-rdf:Type(?my, _:b2) , ex::doubleColon(?4, false) , } )
ex:Annotation ! xsd:boolean ? xsd:nonNegativeInteger , @@ zipMax |  ottr:IRI (  ) @@  ://noScheme (  ) :: ( ottr:Triple(?K, <unclosedIRI, 23.14.15) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ NEList<xsd:token>LUB ?& @@ "string" :: {  } ,
xsd:Invalid Space [ ] :: BASE .
ottr:IRI ?? xsd:string  @@ ||  (  ) :: { ottr:Triple(?t0= ex: ?d) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(ex::doubleColon, 3+.-1+) , ottr:Triple(_:blank, foot:Footballer, invalid) , } .
://noScheme [ ? xsd:Name 123 = "value"^^invalid , ] "K" :: { o-rdf:Type(?>, ""a*"") ) } .
bad::IRI :: { cross http://invalid ( ++ ++ (  ) ) , xsd:invalidType ) } .
123 [ List ]  :: ( ottr: ) .
<unclosedIRI [ NEList<:noType> ?\ , xsd:float "j*O:*" , , ?var ?T^|G , ] { ex::doubleColon(?Mh, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?[y, "unclosed) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex::doubleColon ?!! rdf:HTML , @@ 123 "unclosed ,, @@ zipMin |  foot:Type ( ++ ( ( ( , ) , "malformed"^^bad:datatype ,, ) ) ) ++ ++ 123 invalid |  ) :: {  } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ NEList<<LUB<xsd:yearMonthDuration>>>badPrefix:string ?M ] ?var :: { bad::IRI(_:blank, ?ajq8) ; } .
ex:Invalid Space [ ] :: { ://noScheme ( true ^^ LUB ) } .
ex: [  ] @   ( :noPrefix ) :: { o-rdf:Type(invalid, _:b2) , "3" } .
http://invalid [ || owl:NamedIndividual  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Z7, <unclosedIRI, ) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?? xsd:nonNegativeInteger "string" = "malformed"^^bad:datatype  :noType ?p , , xsd:invalidType ] { ottr:Triple(?N xsd:Invalid Space ""!+"") } .
http://example.com/:Template1 [ ++ xsd:unsignedShort ,  zipMax |  @@ "string"  :: { ottr:Triple(?Lm ex:Invalid Space "2023-01-01"^^xsd:date) , 
o-rdf:Template2 :: { o-rdf:Type(?}, none) ( }
ottr:IRI [ invalid ] @@ 123 "e" :: {  ( ++ ++ _:b2  ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template2 :: BASE .
:noPrefix [ ] :: { <unclosedIRI(_:blank, ?var) ottr:Triple(bad::IRI, http://invalid, none) } .
ex:Invalid Space [ ?! ottr:IRI ? xsd:gDay   , ,  @@ cross |  ://noScheme (  ) , @@  ex: (  ) :: { xsd::doubleColon } .
"string" [  NEList<<LUB<xsd:decimal>>>:noType "string" = "malformed"^^bad:datatype , ?!! ?c@r7 = ( -7+ ,,  , ]  :: { o-rdf:Type(?B(, ?i) ( } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?U< :Triple 1..2) , ottr:Triple(?V ex:Invalid Space 23.14.15) , } .
http://example.com/:Footballer xsd:unsignedByte "**" @@ xsd:Annotation ( ottr: ) ,: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ottr:Invalid Space [ ++ List 123 , owl:AnnotationProperty ?{ , @ zipMin |  badPrefix:Type ( ( ?a ,  ) ) ^^ badPrefix:string ) :: BASE
xsd:Footballer [ ] :: { ottr:Triple("8*5j*" owl:Template2 "string") , }
ex:Invalid Space [ LUB<List<LUB<ottr:Bot>badPrefix:string>> ?b; ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?+, ?:)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { <unclosedIRI(_:blank, 1..2) } .
ex::doubleColon [  ]  :: { 123 ( bad::IRI ) } .
:noPrefix [ xsd:double xsd::doubleColon ,  @@ ://noScheme  , @@  http://invalid (  ) :: { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) ( } .
?var [ ! ?g = "value"^^invalid , ] List :: { xsd:invalidType } )
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { <unclosedIRI(?\X, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple ?? xsd:byte ? xsd:unsignedShort "string" = "malformed"^^bad:datatype , , invalid @@ cross |  badPrefix:Annotation (  ) ; :: BASE
ottr:IRI [ badPrefix:string ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { ottr:Triple(123 ottr:Type ""*") , 
:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ http://invalid ( ++ ++ ( , ) zipMin |  ) :: { cross ?var ( ++ ( (  ) ) ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(_:blank, "invalid"^^<unclosedIRI) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ++ List<<xsd:base64Binary>>invalid  = invalid^^type ]  :: {  } .
ex:Invalid Space [ zipMax |  xsd:language ?Y , ,  ] :: {  } .
://noScheme [ "string" ?># , ] { ottr:Triple(?=i, :noPrefix, ?C) ( } .
bad::IRI ! LUB 123 , ?? xsd:float  @@ ex:  @@ ottr:IRI (  ) :: ( o-rdf:Type(_:blank, "unclosed) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ) .
owl:Footballer :: { ottr:Triple(?L, o-rdf:Triple, ""&"") , }
http://invalid ?! LUB<<List<xsd:unsignedShort>>>badPrefix:string  = "malformed"^^bad:datatype xsd:string ?S invalid |  @@ ottr:Footballer ( "string" ) :: { :noPrefix } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: BASE .
?var [ "G+" ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ottr: <unclosedIRI invalid) ( } .
ex: [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ? "string" = xsd::doubleColon , 123 ?c- , ] :noType :: { o-rdf:Type(_:blank, _:b2) } .
bad::IRI [  @@ ex:Invalid Space :: {  } .
 [ ?? xsd:short 123  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ex::doubleColon(_:blank, _:b1) cross |  <unclosedIRI ( _:blank ) }
:Template2 [ List<List<>> ?J6 , zipMax |  xsd:integer 123 , , ++ ++ xsd:normalizedString , ] { ottr:Triple(?#(W, badPrefix:Triple, "malformed"^^bad:datatype) , } .
?var [ ?! :noType  , @@ ottr:IRI ?var 1 ^^ invalid , "string" :: { o-rdf:Type("unclosed, "invalid"^^:noPrefix) ; } .
://noScheme [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ?!! LUB<<List<xsd:hexBinary>>>xsd:invalidType ?i = "value"^^invalid @ zipMin |  ex:Invalid Space ( _:blank zipMax |  ) :: { ottr:Triple(_:blank http://invalid ?AF)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI } .
bad::IRI [ ] :: { ex:(?W?|, none) , ottr:Triple(?/, foot:Annotation, badPrefix:string) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { (?8, xsd:Template1) , } ,
:Footballer [ xsd:integer "unclosed ++ rdfs:Literal 123  ,  ] :: ( badPrefix:Invalid Space ( _:blank  ) ) .
http://example.com/:Triple [ 123 ?Pn , , xsd::doubleColon ]  ': { http://invalid(?5, "malformed"^^bad:datatype) ) } .
ex:Template1 [ 123 ?.j , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  ex::doubleColon (  ) @@ ottr:IRI ://noScheme :: BASE .
?var : {  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { ottr:Triple(_:blank, o-rdf:Footballer, _:b2) , } .
bad::IRI [  ] :: { "string" } .
ex: [  "string"  ] xsd:invalidType :: { o-rdf:Type("unclosed, "2023-01-01"^^xsd:date) , http://invalid(_:blank, _:b1) ; } .
:noPrefix ! invalid 123 , xsd:base64Binary  , @@ ex:Template1 ( ?[ :: { ottr:Triple(?d~ ex:Invalid Space badPrefix:string) } .
<unclosedIRI [ xsd::doubleColon @@ ottr: :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" [ ?! rdfs:Literal  ] @@ :noPrefix (  ) , @@ "string" (  ) :: { ottr:Triple(?H badPrefix:Type "malformed"^^bad:datatype)  } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?L, ?a-) , 
http://example.com/:Footballer ?var ?< , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?! "string"  , ] :: { http://invalid } .
ex:Invalid Space :: { ottr:Triple(_:blank <unclosedIRI "w*") ; } .
ottr:IRI [ ] :: {  } .
 [ xsd::doubleColon ] invalid :: { o-rdf:Type(123, ""1*%**"") , ottr:Triple(?_A, :Triple, "2023-01-01"^^xsd:date) } .
ex: [ ++ ++ List<<owl:AnnotationProperty>>LUB , , ?!! xsd:float ?u = invalid^^type @@ :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
://noScheme [  ] { bad::IRI  } .
:noPrefix [ cross |  List<owl:Class> ?, ? List  ] @ ottr:Type ( _:b2 , invalid term ^^ ottr: ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?(  ?iG)) } .
xsd:Triple  @@ "u" :: BASE .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ List<xsd:normalizedString>ottr: invalid , , ++ xsd:gYearMonth ?O = "unclosed , ]  :: { o-rdf:Type(_:blank, 23.14.15) ( } .
bad::IRI [ ://noScheme ] 123 :: { ex::doubleColon(<unclosedIRI, List) , } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  http://invalid ( xsd::doubleColon ) :: { LUB } .
ex: [ ! owl:NamedIndividual 123  ] :: ( ottr:Triple(_:blank, ex:Invalid Space, "malformed"^^bad:datatype) , :noPrefix  ) .
?var :: BASE
badPrefix:Template1 [ ?? xsd:invalidType "string" , ?! xsd:Name  ] { ottr:Triple(_:blank ex:Invalid Space _:b2)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI zipMin |  xsd:duration  , xsd:unsignedInt 123 @@ invalid |  "string" (  ) @@ owl:Type  :: { :noPrefix } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ NEList<<LUB<xsd:string>>>List ?m ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  :: { ottr:Triple(?!, , ?,^l) , } .
://noScheme [  @@ bad::IRI ( "N*u&*" ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { http://invalid(xsd::doubleColon, "2023-01-01"^^xsd:date) ottr:Triple(_:blank xsd:Annotation xsd:invalidType) ,  } .
ex: :: { o-rdf:Type(?P, "malformed"^^bad:datatype) }
?var [ 123 ?`Q , , :noType ] badPrefix:string :: BASE
ex: [ ?!! 123 = "string" , ] :: {  <unclosedIRI ( ++ ++ ( 5+ ) , "string"^^^xsd:string ^^ invalid ++ ( ?Ox ,, ) ) cross |  ) } ...
:Template2 [ _:b2 ,  ?{ ] { ottr:Triple(?2R badPrefix:Triple "unclosed) , } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: BASE .
http://example.com/:Footballer ?! ottr:Bot ,  zipMin |  @@ invalid |  123 (  ) :: { ex:(_:blank, ?D) , } .
http://invalid [ ? badPrefix:string ?2:#I$T4 , , LUB<xsd:duration>invalid  , ] :: { ex:Invalid Space ( 123 , ?var 1 ,, ) ^^ xsd:invalidType } .
://noScheme [ ! owl:AnnotationProperty "string" = 123 ++ "string" = ( ottr: ,, ) ] :noPrefix :: { "string" } .
bad::IRI [ ] :: { o-rdf:Type("J*", "<+") } .
ex::doubleColon [ xsd::doubleColon ]  :: { ottr:Triple(?u, ottr:Template1, none) ottr:Triple(?m <unclosedIRI _:b2) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?~w, ex:Triple, ""%"") ,  }
?var [ "string" ?1 zipMax |  rdfs:Literal "string" , @@  ://noScheme (  ) @@ o-rdf:Type ( _:blank cross |  ) : { ottr:Triple(?C owl:Annotation 9+) ; } ..
ottr:IRI ?!! xsd:normalizedString   ++ ++ xsd::doubleColon 123 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix (  ) , :: { ottr:Triple(?2, owl:Triple, 23.14.15) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: BASE .
:Type :: { ex:("string", ) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
http://invalid [  ]  :: { cross |  ://noScheme ( ex:Invalid Space ) } .
ex::doubleColon [ ? ?vX/ = "unclosed ] "<" :: { o-rdf:Type(_:blank, ?%^E) ,  } .
<unclosedIRI [ LUB<xsd:time>List LUB , List<List<( "string" ,, )>> ?_mSo , @@  ++ ++ invalid ,, , @@ zipMax |  bad::IRI ( (  ) ) ) :: { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?xA <unclosedIRI "malformed"^^bad:datatype) , }
123 [ "unclosed ] { ottr:Triple(?8 foot:Footballer ex:Template1) ; } .
o-rdf:Annotation [  xsd:language ?0!. , , ottr:foaf:name ?$ , ] :: { o-rdf:Type(?s, ""B*">*"") ( } ...
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: (  ) , @@ zipMin |  ex:Triple ( ( ?' ) ^^ badPrefix:string ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
"string" [ zipMax |  xsd:nonNegativeInteger "string" , @@ :noPrefix :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  LUB<xsd:gMonthDay>invalid  = 123 ] :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ottr:Triple("<*" ://noScheme ?zNFr&) , 123 } .
ex::doubleColon [   xsd:NCName , ! xsd:short ?8% = "malformed"^^bad:datatype , , xsd::doubleColon ]  :: { bad::IRI(?A^qO, ottr:) ; } .
ex:Invalid Space [ ] :: { ottr:Triple(?$, xsd:Template1, 23.14.15) , } .
http://invalid [ ?? ?D = "2+"  ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
<unclosedIRI : { http://invalid(?9, "malformed"^^bad:datatype) } 
?var [ ? :noType 123 ] @@ invalid |  owl:Footballer (  ) ( :: { 123 ++ "unclosed  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var ( ( "unclosed ,  ) ,, ) } (
<unclosedIRI [ "string" ]  :: { ottr:Triple("{", xsd:Footballer, "2023-01-01"^^xsd:date) ; } .
http://example.com/:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName invalid |  @@ wrong ottr:IRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] LUB :: { o-rdf:Type(?tY, :noPrefix) } .
ex::doubleColon :: { http://invalid(_:blank, ?e) badPrefix:string } .
ex: [  "string"  , ] :: {  } .
ex:Invalid Space [ ] : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
bad::IRI [ rdf:XMLLiteral  @ ex::doubleColon  :: { ottr:Triple(_:blank :noPrefix "malformed"^^bad:datatype) , ://noScheme(_:blank, _:b2) , 
123 List<xsd:gYear>xsd:invalidType ?ZS , ? xsd:dateTime 123 = invalid^^type , , ?!! owl:NamedIndividual   xsd:duration , @@ :noType :: ( ex::doubleColon(?%, _:b1) , ) .
<unclosedIRI :: ( :noPrefix(_:blank, ?0r) , ottr:Triple("G+", :Template1, bad::IRI) , ) .
badPrefix:Invalid Space [   List<ottr:IRI>:noType ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ cross |  "string" ( invalid term ^^ xsd::doubleColon , ++ (  ) zipMin |  ) :: { ottr:Triple(?S ex:Invalid Space xsd:Triple) , } .
ottr:IRI ++ ++ xsd:nonNegativeInteger "string" = "malformed"^^bad:datatype , ?var ?K , @@  ?t ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] 123 :: { o-rdf:Type(ottr:, 2+) } .
://noScheme [ badPrefix:string ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: { ex::doubleColon(?|, _:b2)  } .
foot:Footballer [ ?!! xsd:language ?v = "value"^^invalid @@  :: { LUB }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { owl:Type "unclosed 
ex:Template2 [ owl:ObjectProperty  , ,  rdf:HTML 123 , ] @@ ottr:IRI ( _:blank  ) @@ invalid |  http://invalid (  ) :: BASE
owl:Triple [ List<<rdfs:Datatype>>ottr: "string" , ?var ?E< invalid |  xsd:byte ?"6A ]  :: { ottr:Triple(_:blank, o-rdf:Invalid Space, "2023-01-01"^^xsd:date) , } .
http://invalid :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { xsd:invalidType 
ex:Invalid Space [  @ ex:  :: { (_:blank, 23.14.15) ,  ottr:IRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("@", 123) ottr:Triple(?3} :noPrefix ?y) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] bad::IRI :: { ex::doubleColon(?0-, "malformed"^^bad:datatype) ( } .
://noScheme [ LUB ] ; {  } .
:Template1 ?   , ,  ?i] , @@ "string" ( _:blank ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:Template2 [   xsd:gYear 123 = "unclosed @@ zipMax |  xsd:Annotation ( ++ 1..2 ,, ) , @@ || ex:Footballer ( xsd::doubleColon ) :: ( o-rdf:Type(?U, false) ) ) .
123 [ ++ NEList<xsd:positiveInteger>xsd::doubleColon , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ xsd:Invalid Space ( ++ ++ ( ( ( , ) ,  ,, ) ) ) , o-rdf:Triple ^^ LUB ,, ) :: { bad::IRI(?H6, "h") , }
://noScheme :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  owl:NamedIndividual 123 = 23.14.15  ] @@ ex:Invalid Space  , @@ zipMax |  :noPrefix (  ) :: { "string" } .
ex: [ cross |  rdfs:Resource "string" , ,   invalid ?} ] :noType :: { o-rdf:Type(<unclosedIRI, ?|9) , } .
ex::doubleColon [ ] :: { ottr:Triple(_:blank  abc) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMin |  http://invalid ( badPrefix:string ) } .
?var [ ?!! ?E` = invalid^^type , ] :: { ottr:Triple(?8v, foot:Type, none) ,  } .
owl:Template2 "'+" @@ wrong ottr:Template1 ( _:blank invalid |  ) :: { ottr:Triple(?Km, http://example.com/:Annotation, _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
:Footballer  ?B xsd:date "string" ,  @@ zipMax |  ://noScheme (  ) :: ( o-rdf:Type(?u, "2023-01-01"^^xsd:date) ( ) .
"string"  ?.  @@ invalid |  ex::doubleColon (  ) , @@ ottr:IRI  :: { o-rdf:Template1 ( ?var 1 ,  ) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  <unclosedIRI ( List ) ; :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ 123 ] :: BASE
bad::IRI [ xsd:unsignedByte  , , ++ ++ xsd:normalizedString , ] @@ zipMax |  :noPrefix ( _:blank  ) :: { o-rdf:Type(_:blank, _:b1) } .
ex:Invalid Space :: { ottr:Triple( owl:Footballer ?+>:)  } .
://noScheme [ ? NEList<xsd:byte>:noType ?w = "value"^^invalid ]  :: { "1" } .
?var [ ] :: { ottr:Triple(?D@tUC, http://invalid, xsd::doubleColon) , :noPrefix(?J8, ""T*"") , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
ex:Type [ ! rdf:HTML 123  , ?var ?y ,  ] { o-rdf:Type(_:blank, none) , } .
?var [ t-pnd:Punned-Class-ObjectProperty xsd::doubleColon , , zipMin |  List<List<owl:Class>List> ?~&]{Y , ] @@ ""+" :: { o-rdf:Type(?nb, "unclosed) ( } .
owl:Invalid Space "string" @@ ex:Invalid Space ( ottr: ) , @@ || ottr:IRI ( _:blank ,  ) : { ottr:Triple(<unclosedIRI, http://invalid, ://noScheme) , } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ xsd:gYear "string" , 123 ?r @@  ?var 1 ^^ :noType :: BASE .
:noPrefix [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: { ex:(_:blank, ?IS) , ottr:Triple(?| ottr:Template1 foot:Template2)  } .
ex:Triple :: { "unclosed } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  :Footballer ( (  ) ,, ) } )
http://example.com/:Type [  ] :: ( ottr:Triple(?9:, o-rdf:Annotation, 23.14.15) ) .
badPrefix:Footballer ? LUB ?y  @ ex:Invalid Space  :: { o-rdf:Type(?i_, abc.abc) ; 
badPrefix:Template1 [ ++ ++ xsd:yearMonthDuration ?^  , , ".*n2*" ] zipMax |  @@ zipMin |  ex: ( ++ ++ ( ( ( , ) ) ,  ) ) cross |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI   : { ex::doubleColon(_:blank, ?'+f9) ; } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ bad:decimal ?/7` ] badPrefix:string :: {  } .
:noPrefix [ ? List<<ottr:Bot>> 123 = 23.14.15 ! xsd:Name , ?!! xsd:invalidType  , ] :: { http://invalid } .
bad::IRI [ ] :: { <unclosedIRI (  ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross 123 ( _:blank ,, ) :: { ottr:Triple(invalid  none) o-rdf:Type(?r, ?var) , }
://noScheme :: { ex:(?B, abc) , ottr:Triple(?%$, xsd:Type, _:b2) 
:Template2 [ owl:real "string" , ] { ottr:Triple(?<6L1 owl:Invalid Space "invalid"^^ex::doubleColon) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { foot:Annotation ++ ++ ( _:b1 ) } .
 [ List<<unclosedIRI> ?6k , List<<ottr:Bot>>List  ] :: { ottr:Triple(123, o-rdf:Template2, "invalid"^^bad::IRI) 
ottr:IRI ?? ?#8 = "string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ "W" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var :: { o-rdf:Type(_:blank, :noType) , } .
ex:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ? xsd:gYearMonth , ] LUB :: { ex::doubleColon(?>, ?q) , ottr:Triple(?:7 ex: none) , } .
"string" [  ] @@ zipMin |  :noPrefix ( 123 ^^ badPrefix:string , invalid ) , @@ owl:Type ( _:blank || ) :: ( ://noScheme(?t\, "unclosed)  ) .
http://example.com/:Footballer [ invalid |  rdf:HTML ?D , , xsd:invalidType cross |  @@ zipMax |  badPrefix:Template1 ( ( "malformed"^^bad:datatype ,  ) ) ++ "string"^^^xsd:string ,, ) :: { "-+" } (
xsd:Triple xsd:date "unclosed @@ :Invalid Space ( ottr: ) :: { ex::doubleColon(?3oBP, false) ; }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex::doubleColon [ cross |  xsd:dayTimeDuration  ,  ] :noPrefix :: { ottr:Triple(?2^W badPrefix:Footballer ?|) ?var } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ NEList<<LUB<ottr:Bot>>>xsd::doubleColon "V*f]*" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ottr:IRI :noType :: { :Invalid Space ( ?' ^^ List ) } .
<unclosedIRI :: { ottr:Triple(_:blank, ex:, 7+.abc) , } .
://noScheme xsd:invalidType  :: { o-rdf:Type(?6, ottr:) , http://invalid(LUB, 23.14.15) , } .
ex:Invalid Space [  ?g/q , ] :: { bad::IRI(?zj8, false) } .
123 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
 [ ?!! xsd:base64Binary 123 = "string" @@ invalid |  owl:Template1 ( _:blank ++ ++ _:b1 ,, ) ( :: {  }
xsd:Triple [ xsd:gMonthDay ?Y: , ,    ?=, , @@ ex:Template1 ( ?O :: BASE
ottr:IRI [ LUB<List<owl:DatatypeProperty>> ?~a , @ ?var "5+" :: { o-rdf:Type(_:blank, 123) , } .
bad::IRI [ ++ "string"  <unclosedIRI ] @@  http://example.com/:Template2 ( _:blank cross |  ) , @@ ex:Invalid Space (  ) :: BASE .
ex: :: { ://noScheme(?1l, ?@L) || http://invalid ( ?^KD , ++ ( (  ) ) ) ++ ++ "unclosed ,, ) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ? LUB  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: {  } .
ex::doubleColon [ zipMax |  List<<t-pnd:Punned-Class-ObjectProperty>>xsd:invalidType 123 , ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { ottr:Triple(invalid, , ""unclosed") , List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ++ ++ owl:Class ?s"ekh.q6 = "value"^^invalid ] { ottr:Triple(?: badPrefix:Template1 "invalid"^^:noPrefix) } .
ottr:IRI ?!! xsd:dateTime "string"   @@ ex::doubleColon (  ) : { ottr:Triple(_:blank, o-rdf:Annotation, none) , } 
badPrefix:Type [ ex:Invalid Space @  (  ) :: BASE .
"string" [  ] ?var :: { ex:(_:blank, LUB) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { <unclosedIRI ++ ++ "string"^^^xsd:string } (
bad::IRI List<<xsd:unsignedByte>>ottr: "unclosed , ?? badPrefix:string ?hU @@ zipMin |  :noPrefix (  ) , @@ zipMax |  http://invalid (  ) :: {  } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple( ottr:Template2 none) , } .
ex::doubleColon [ ++ xsd:boolean 123 = "string" , ] :: { "o" } .
123 [ ] :: { ottr:Triple(?16a#mE, <unclosedIRI, ?t) , o-rdf:Type(?i, _:b2) 
xsd:Invalid Space [ ?!!  = "malformed"^^bad:datatype , ,   xsd:duration  owl:AnnotationProperty , ,  ] { o-rdf:Type(_:blank, 23.14.15) http://invalid(_:blank, o-rdf:Footballer) ) } .
123   "string" ! rdfs:Resource @@ ottr:IRI  , @@ bad::IRI ( _:blank , _:blank cross |  ) :: { badPrefix:string } .
foot:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex::doubleColon :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(_:blank, "^") ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: { ottr:Triple(?~jsK, o-rdf:Invalid Space, ?M\) ( } .
ex: :: { || :noPrefix ( ( ?var 1 ,, ) ) } .
 [ ottr:IRI 123 , , ?! NEList<<LUB<rdfs:Literal>>>List ?n =  , xsd::doubleColon ] :: { ://noScheme(?var, 23.14.15) , } .
<unclosedIRI [  ] {  } .
http://invalid [   ?" = invalid , ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" [ ?var ?! ] @@  ?var (  ) ) :: { ottr:Triple(?L bad::IRI _:b1) o-rdf:Type(?Y, none) , o-rdf:Type(_:blank, "malformed"^^bad:datatype) ; } ,
:Template2 [  t-pnd:Punned-Class-ObjectProperty  :: { bad::IRI 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |  ottr:IRI ( ++ (  ) ++ ++ 123 cross |  ) } .
"string" [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
  @@ :noPrefix (  ) , @@ http://invalid ( "string"^^^xsd:string ,, ) ) ^^ invalid , 23.14.15 :: { ottr:Triple(_:blank, ://noScheme, "8+") } .
ex: [ LUB<xsd:base64Binary> 123 , ] :: {  } .
ex:Invalid Space [ List<List<LUB<LUB>>> ?a , , xsd:yearMonthDuration ?E ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { ex::doubleColon(?(,, ?j':) ; } .
?var [ :noType ] @ wrong 123 ( "unclosed ) :: ( o-rdf:Type(ottr:, _:b2) , ) .
<unclosedIRI :: { ottr:Triple(?vN4 badPrefix:Template1 "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
://noScheme [  ] @@  ?var (  ) :: { ottr:Triple(?_, <unclosedIRI, none) , o-rdf:Type(_:blank, _:b1) ( } ,
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName || @@ ?var :noType :: BASE .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation [ owl:Class 123 <unclosedIRI ] "string" :: { cross |  :noPrefix ( ++ http://example.com/:Type ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid :: { ottr:Triple(?@ ex:Template2 ?T/>E_) } .
 [ bad:foot:clubHistory ?{26 , ] @@ ex:Invalid Space ( ?` zipMax |  ) ; :: {  } .
://noScheme [ LUB<owl:DatatypeProperty>invalid badPrefix:string @@ invalid |  ex: (  ) @@ zipMin |  ex::doubleColon ( (  ) ^^ xsd:invalidType ,, ) :: { "d+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(xsd::doubleColon, ex:, ) :noPrefix(?ntf, "invalid"^^:noPrefix) , o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
123 [ ++ ++ "string" = ( 23.14.15 ,,  ,  ] :: ( (?KH, 1+) ) ) .
badPrefix:Footballer [  xsd:dateTimeStamp  = "malformed"^^bad:datatype , ,   xsd:short , , ?!! t-pnd:Punned-Class-ObjectProperty ?! xsd:date ,  ] { ottr:Triple(_:blank o-rdf:Triple "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] :: { o-rdf:Type(_:blank, http://example.com/:Triple) , ottr:Triple(?~, http://invalid ?$m) , } .
ottr:IRI [ ] : {  } 
ottr:Type [ ++ LUB<xsd:hexBinary>List ?ud= = invalid^^type , ] ex:Invalid Space :: BASE .
?var [ :noType @@ invalid |  ://noScheme ( ++ ++ ?var 1 , ( ( "invalid"^^<unclosedIRI , ""j"" ,, ) ) ) zipMin |  ) , @@ ex::doubleColon ( "string" ^^ xsd:invalidType _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix "string" ?Z>. ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName cross |  @@ ex: ++ abc :: { ottr:Triple("p*";*", owl:Footballer, 123) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?i, true) ; } .
badPrefix:Annotation [ zipMax |  rdf:XMLLiteral  ] @@  :: (  xsd:Template1 ( xsd::doubleColon ) ) .
o-rdf:Template2 :: { <unclosedIRI(?%`, none) invalid 
:Invalid Space [ ?! owl:Class  = "malformed"^^bad:datatype ,  ottr: 123 , ,  ] @@ wrong foot:Annotation (  ) ) :: BASE
"string" [ ] :: {  
ottr:IRI zipMax |  List<<xsd:time>>xsd::doubleColon  , @@ cross ex:Template1 ( ?|o ) :: { o-rdf:Type(_:blank, ?var) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [   xsd:duration ?m = "value"^^invalid ] @@ ex::doubleColon :: BASE .
o-rdf:Footballer :: { "<+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(, _:b2) , ottr:Triple(?e?. xsd:Template2 ?^\) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ?!! ottr: "string" , , :noType @@ <unclosedIRI 123 ^^ xsd:invalidType ,, @@  ( ++ none cross |  ) :: { ottr:Triple(?"S, :noPrefix, _:b1) , } ;
ex: [  ] invalid :: { ://noScheme(?M, ""G*2x*"") , }
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] (: { invalid |  badPrefix:Invalid Space ( _:blank ) } ..
foot:Type [ ?? ?5  , ? xsd:byte    ] { ottr:Triple(_:blank :noPrefix "2023-01-01"^^xsd:date) ( } .
ottr:IRI :: { ottr:Triple(?k o-rdf:Footballer ?l2E*-PT) , ottr:Triple(bad::IRI, http://invalid, "#+") } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ++ ++ xsd:dateTime , :noType ] @@ ?var ( ++ ++ ( ""D*"" ,, ) , _:blank zipMin |  ) @@ badPrefix:Type  :: BASE .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: { invalid |   ( List ) } .
:noPrefix [ List<xsd:duration>xsd::doubleColon  ] :: { o-rdf:Type(_:blank, none) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid } .
ex::doubleColon  @@  ex:Invalid Space ( ( "string"^^^xsd:string ) ) ^^ xsd:invalidType ,, ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ foot:ex:Invalid Space ?d , @@ badPrefix:string :: { ex:(?+H, "2023-01-01"^^xsd:date) , 
:Invalid Space [ ] :: { o-rdf:Type(?Ly6, true)  }
ex:Template2 [ ?!! xsd:float , ,  ] @ zipMax |  owl:Triple ( _:blank ) :: ( ottr:Triple(_:blank, foot:Template1, _:b2) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  ] { o-rdf:Type(_:blank, "unclosed) , } .
"string" ++ ++ ottr:IRI , ?var ?r , , ?! List<xsd:dateTimeStamp>xsd::doubleColon  = "malformed"^^bad:datatype , @@ ottr:IRI ?~j& ) :: BASE .
o-rdf:Template1 :: {  } .
bad::IRI [ 123 invalid |  @@  ex:Invalid Space ( 23.14.15 ,  ) :: { :noPrefix(?8, ?xa) } .
http://invalid [ NEList<:noType> ?c ] @@ "]*mP*" :: { <unclosedIRI } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(LUB ://noScheme ) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] xsd:invalidType :: { ottr:Triple(?%{, ex:Invalid Space, "2023-01-01"^^xsd:date) ex::doubleColon(_:blank, none) , } .
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :Triple ( invalid term ,, ) ) ^^ badPrefix:string ,, } )
badPrefix:Footballer [ ] :: { (?z, owl:Template2) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Invalid Space [  ] @@ ottr:IRI LUB :: BASE .
?var :: { :noPrefix(_:blank, "y*") } .
http://invalid badPrefix:string @ ex::doubleColon ( ++ (  ) ) _:blank , ?aw ^^ ottr: ,, ) :: { ottr:Triple(123, ex:, _:b1) <unclosedIRI } .
://noScheme [ rdf:HTML :noType , ,  @@ cross |  bad::IRI (  ) @@ ex:Invalid Space (  ) :: { o-rdf:Type(?1, ?em) ( } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: {  } .
 [ ] :: { ottr:Triple(?h-C badPrefix:Template2 "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
http://example.com/:Annotation [ ?! xsd:unsignedInt , NEList<rdfs:Literal>invalid  , ] { o-rdf:Type(?), """+"") , } .
:Type [ ++ ++ xsd:long 123  ! "string" = "unclosed ] :: {  o-rdf:Footballer ( ( invalid term , "malformed"^^bad:datatype ,, ) ) 
http://example.com/:Footballer invalid |  List<owl:Class> ?k? @@ "string" :: BASE .
123 [ xsd:invalidType ] cross |  @@ ottr:IRI ( (  ) ^^ invalid  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( :noPrefix(?(, ?Q$) ; ) .
<unclosedIRI :: { ottr:Triple(_:blank ex:Invalid Space _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  bad::IRI ( ++ ++ 123 ,, ) } .
 [ ] :: { o-rdf:Type(ex:, xsd::doubleColon) , "u+" } .
://noScheme [ ?!! xsd:negativeInteger  = "malformed"^^bad:datatype  @ ex::doubleColon _:blank cross : {  } 
?var [ ?? LUB "string" , List<:noType> ?g[ , , ?! xsd:dateTimeStamp , ] ottr: :: BASE
?var [ xsd:gDay "unclosed , ,   :: { ottr:Triple(?WM, badPrefix:Triple, "unclosed) } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: [  ] "n+" :: { o-rdf:Type(bad::IRI, LUB) ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 [ ] :: (  ) .
"string" [ ? xsd:unsignedShort , , invalid ] @@ List :: { ottr:IRI ++ ++ 1..2 } .
ex:Invalid Space [  xsd:invalidType  , 123 ?pJC8<lq{^ , @@ ://noScheme ?'%R ) :: { :noPrefix(_:blank, ?Ih) , } .
<unclosedIRI [ cross xsd:gYearMonth ?.W2 List<xsd:gMonthDay>:noType 123 ] :: { ottr:Triple(?o badPrefix:Annotation _:b2) ( } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?Y, http://invalid, _:b1) } .
 ?!! xsd:long "string" = 23.14.15 @@  foot:Footballer ( ( "string"^^^xsd:string ) ^^ xsd::doubleColon ,, ) @@ o-rdf:Type ( (  ) ) ++ ?\ zipMax |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
http://example.com/:Template1 $: { ottr:Triple(?*:6 xsd:Triple none) , o-rdf:Type(?y~, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation [  ]  :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "string" :: { o-rdf:Type(_:blank, ?G) , } .
?var [ ! xsd:gYear , ] :: { ex:(?=lut', "+*") ; } .
ex::doubleColon invalid  @@ bad::IRI ( ( , ) ^^ xsd::doubleColon ,, ) :: { ottr:Triple( owl:Footballer xsd:Template1) } .
http://invalid :: { ://noScheme(?<, "malformed"^^bad:datatype) , ottr:Triple(?s-, :noPrefix, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ++ xsd:dateTimeStamp "string" = "value"^^invalid  :: { zipMax |  ex:Invalid Space ( _:blank  ) }
o-rdf:Triple [ ?! List<<xsd:time>>ottr: ?c  , LUB<xsd:unsignedLong> ?Td xsd:duration  , ,   123 = 23.14.15 ++ ++ xsd:invalidType "string" , ] { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { ottr:Triple(_:blank badPrefix:Template1 ?Q) :noPrefix(LUB, 1..2) } .
123 [ ?? NEList<xsd:unsignedByte>   , @@ zipMin |  ://noScheme ( _:blank  ) :: BASE .
owl:Annotation  @@ bad::IRI ?a ) ; { o-rdf:Type(?nv, ex:Invalid Space) ) } ..
<unclosedIRI :: { http://invalid "d*m+*" } .
ex::doubleColon [ zipMax |  xsd:gYearMonth ?Z!w%L ] List :: { ?var } .
ex: [ foot:ex:Invalid Space ?U , ? xsd:token , , :noType ] @@  ( "string" ^^ xsd:invalidType ,  ) ( :: {  } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [   xsd:gMonthDay 123 = 23.14.15 ++ ++ xsd:gMonth ,  ] :: ( ottr:Triple(?A, ://noScheme, "2023-01-01"^^xsd:date) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?l :Template2 "unclosed) , ottr:Triple(?1 foot:Triple -9+) , } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:Type [ || List<<xsd:unsignedByte>>:noType  , , ++ ?t = ( ://noScheme ,  ) , badPrefix:string ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ cross |  List<owl:NamedIndividual> ?hz( , ] @@ ottr:IRI  :: BASE .
123  @@ ex: ( "U*oT*" ) :: { ottr:Triple(_:blank xsd:Template1 23.14.15) , } .
bad::IRI [ ? xsd:NMTOKEN 123 = 23.14.15 ] ?var :: { ottr:Triple(invalid, :noPrefix, ?/) List } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  :: { zipMin |  ex::doubleColon ( xsd:invalidType ) } .
 [ ] :: { http://invalid(?:, "unclosed) , } .
"string" :: (  ) .
badPrefix:Triple [  xsd:date "string"  ?!! xsd:gYear ] @@ o-rdf:Invalid Space ( _:blank ,, ) , @@ zipMax |  owl:Annotation ( _:b2 ^^ xsd::doubleColon ) :: { o-rdf:Type(?1!K%, "unclosed) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ottr:IRI [ ] :: BASE .
http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
123 ? invalid ?[ cross |  @@ owl:Template1 ( ++ ( , ) , "string" ,, ) :: { ://noScheme(xsd::doubleColon, _:b2) } .
ex:Invalid Space [   xsd:hexBinary  ] @@ zipMax |  <unclosedIRI (  ) , @@ ex::doubleColon  :: { o-rdf:Type(_:blank, _:b1) o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { invalid |  :noPrefix ( ( none ,  ) ) ^^ LUB ) } .
"string" [ List<owl:Class>List 123 , ++ xsd:gYearMonth  = ?k; , , ?var ] :: { "N*b3*" } (
bad::IRI [ ! rdfs:Datatype ?h = "value"^^invalid , @@  :Template2 ( _:blank _:blank cross |  ) @@ zipMin |  ottr:Annotation (  ) :: BASE
http://example.com/:Invalid Space xsd:long badPrefix:string ,   :: ( ottr:Triple(_:blank, http://invalid, 23.14.15) , ottr:Triple(_:blank ://noScheme "2023-01-01"^^xsd:date) , ) .
foot:Invalid Space [  ] ?var :: BASE .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  123 (  ) @@ <unclosedIRI  :: { ottr:Triple(_:blank ex:Invalid Space 23.14.15) , o-rdf:Type(_:blank, "unclosed) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: {  } .
http://invalid [ ottr: ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(://noScheme, "p*")  ( ++ ( , ) ,, ) } .
:noPrefix [ ] :: { ottr:Triple(?6, badPrefix:Annotation, ?#k@O)xc) } .
"string" [ ++  "string" , ,  @@ || ex::doubleColon (  ) , @@ zipMin |  :noPrefix (  ) ; { LUB } .
:Template2 [  ] @@  http://example.com/:Type ( _:blank ,  ) :: { :noPrefix(?va, _:b2) ; }
ottr:Triple [ zipMax |  NEList<owl:real>xsd:invalidType ?. ] { o-rdf:Type(?], none) ( } .
:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { (?_q, bad::IRI) ; } .
ex::doubleColon [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ foot:foot:clubHistory ?B   ottr:IRI  = ?& ] :: {  } .
123 [ ?var ] "!*mS*" :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: { ottr:Triple(List, <unclosedIRI, owl:Triple) } .
http://invalid  @@ invalid |  ex: ( _:blank ,, ) :: { o-rdf:Type(_:blank, ?^) ottr:Triple(?k foot:Annotation none) , ex:Invalid Space(?Qu, _:b2) , } .
://noScheme [ zipMin |  xsd:boolean 123 , , List<<rdfs:Datatype>>:noType "string" , ] @@ invalid :: { ottr: } ,
"string" [ cross |  List<owl:NamedIndividual> ??d , ?!! ottr:Bot ?E = "value"^^invalid , ? xsd:token @ ottr:Footballer (  ) :: { xsd:Type ++ ++ invalid term 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?s, http://example.com/:Template2, "invalid"^^<unclosedIRI) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var :: BASE .
ottr:IRI [ List<<unclosedIRI> ?X ] xsd::doubleColon :: { ottr:Triple(?cQ ://noScheme ?\) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ++ ++ "string" = ?5 , "D" ] :: BASE
ex:Invalid Space [  @@ ex: (  ) ,, , @@ http://invalid (  ) :: { zipMin |  123 ( ++ ++ xsd:Footballer , 123 ^^  ) } .
ex::doubleColon [ ] :: { ottr: } .
"string" [ zipMax |  xsd:short  , ,  ] @@ :noPrefix ?{ ) :: { ottr:Triple(_:blank, , badPrefix:string) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(invalid, "invalid"^^<unclosedIRI)  } .
http://example.com/:Annotation [ LUB<<List<xsd:dayTimeDuration>>>xsd:invalidType :noType , ] { bad::IRI(?pu, true) , } .
ottr:Triple :: ( ottr:Triple(?va, o-rdf:Template1, "2023-01-01"^^xsd:date) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross "string" (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ foot:foot:clubHistory ?O @@ foot:Type ( ??'iU ^^ List ,, ) @@ ottr:IRI ( ( false ,, ) ) ) _:blank :: BASE .
http://invalid [ ?!! xsd::doubleColon "string" , ] :: { ottr:Triple(_:blank, :noPrefix, ?6) , ottr:Triple(?yE owl:Template1 abc) , 
ex: [ ] :: { bad::IRI } .
 :: { ://noScheme("7+", 123) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ cross |  xsd:nonPositiveInteger  , ?! xsd:language 123 = invalid^^type  ] LUB :: { o-rdf:Type(?#RD}, _:b2) , } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ?var ( badPrefix:string ) , @@ zipMax |  ?var ( ++ "string"^^^xsd:string zipMin |  ) :: { <unclosedIRI(?), 23.14.15) } ...
badPrefix:Template2 [  List<rdfs:Datatype>:noType , ,  ] {  } .
ottr:Invalid Space ! xsd:decimal 123 =  , ,  ?_ , ,  @@ invalid |  ottr:IRI (  ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ List<<xsd:yearMonthDuration>>ottr: ?DJ @@ xsd:Triple  @@  ottr:IRI ( "2023-01-01"^^xsd:date ^^  , ++ "string" ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ex:) , <unclosedIRI(?|96, owl:Invalid Space) ottr:Triple(invalid badPrefix:Template2 ?]) } .
"string" [  ] :: BASE .
:noPrefix [ List<List> ?( , foot:://noScheme ?_ , ] ?var :: { ottr:Triple("g*14*", ex:Invalid Space, ""b+"") ) } .
ex::doubleColon  123 = (   :noType @@ bad::IRI ( ++ ++ ( (  ) ) ) zipMin |  ) :: { cross http://invalid ( LUB ) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] zipMax |  @@ invalid |  :Type ( _:blank invalid term ,, ) : {  } .
http://example.com/:Annotation [ cross |  rdfs:Literal  , , ! xsd:boolean ?!! xsd:invalidType ?r ] { ottr:Triple(?C, ex:Footballer, abc) , } .
foot:Template1 [ ] :: ( "3" ) .
ottr:Invalid Space :: { ottr:Triple(?+he o-rdf:Type "invalid"^^http://invalid) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ] :: BASE
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme(_:blank, ?U}) ; } .
?var [   xsd:int 123 = invalid^^type  ] 123 :: { ottr:Triple(_:blank, , 23.14.15) , o-rdf:Type(?>, "malformed"^^bad:datatype) } .
xsd:Type :: { :noPrefix ( ++ ++ ( invalid term , (  ) ,, ) ) , badPrefix:string ) } .
ex::doubleColon ?!! :noType "string" , , List<rdfs:Datatype>invalid ?4s;N , invalid |  @@ http://invalid  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ "<*"  :: { ottr:Triple(?r: foot:Triple bad::IRI) <unclosedIRI(ottr:, _:b1) , } (
"string" [ ?var ?ucl ,  ?e ] @@ ottr:IRI  @@ cross |  ex::doubleColon (  ) :: ( xsd:invalidType ) .
ottr:Template2 [ ! owl:Class , , ? xsd:long , ,  xsd:hexBinary , ,  @@ ottr:IRI (  ) , @@ zipMax |  ?var (  ) :: {  } 
123 [ ] :: { ottr:Triple(:noPrefix owl:Footballer ?var) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  @ wrong xsd:Annotation (  ) :: BASE .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "F*" :: { ://noScheme(_:blank, ""{*Z}*"") , } )
http://invalid foot:foaf:name ?]   xsd:negativeInteger ,   :: { o-rdf:Type(?g, ?Joy) , ex:  } .
 :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?R, bad::IRI, "2023-01-01"^^xsd:date) <unclosedIRI(?~, "invalid"^^ex:Invalid Space) , } .
123 [ ?!! xsd:string   , ,  ] @@ zipMax |  "string" (  ) @@ ottr:IRI (  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
o-rdf:Triple [ LUB<<List<xsd:gMonthDay>>>invalid ?( ] :: { badPrefix:string }
badPrefix:Template2 [ ++ xsd:duration 123 = "malformed"^^bad:datatype , ] zipMin |  @@ invalid |  http://example.com/:Invalid Space ( ( none ,, ) ) , _:blank ) :: BASE
?var :: BASE .
:noPrefix [ NEList<rdfs:Literal>xsd:invalidType 123 , , LUB ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("t*e=*", <unclosedIRI, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Invalid Space [ ?!! badPrefix:string ?oc , @@ invalid |  ex:Invalid Space ( "string" ^^ invalid ) @@ ottr:IRI ( _:blank , ( ( ( , ) ,, ) ) ) ++ ++ invalid  ) :: { 123 } .
ex: [ "string" ?{ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] http://invalid :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [   xsd:hexBinary cross |  rdfs:Datatype  ] :: { o-rdf:Type(_:blank, ) , } .
://noScheme  zipMax |  @@ cross  ( List ) :: { ex::doubleColon  } .
http://example.com/:Triple [ ] ; { ex:(?#, ?2) ottr:Triple(?E ex:Template1 _:b2) } 
owl:Annotation [ xsd:language "4+" , ] @@ ottr:Footballer ( ++ ""l"" "unclosed ) , @@ zipMin |  xsd:Type ( "unclosed ^^ ottr: ,, ) :: BASE
ottr:Footballer :noType  :: { ex::doubleColon(".*z(*", ?var) , } .
"string" [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] @ :noPrefix  :: BASE .
http://invalid [ none:foaf:name ?D, , @@ <unclosedIRI :: { ://noScheme ( "malformed"^^bad:datatype ++ ( ?g ,, ) ) ,, ) } .
bad::IRI :: { badPrefix:string } .
 [   rdf:HTML 123  ++ xsd:Name "string" = "value"^^invalid ,  ] ottr: :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex: [ invalid |  NEList<xsd:anyURI>  , , ?! owl:Class ] :: { ottr:Triple(?5 :Triple ?O) } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  123 (  ) , @@ zipMin |  123 (  ) :: { o-rdf:Type(_:blank, _:b1) , o-rdf:Type(_:blank, 23.14.15) ) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "@" :: { ottr:Triple(_:blank xsd:Triple badPrefix:string) , } .
ottr:IRI [ ?var ?o ,  xsd:gMonth   , @@ 123 ( _:blank ,  ) , @@ bad::IRI  :: BASE .
foot:Annotation [  ] @@ cross |  ex:Invalid Space ( "string" ) , :: BASE
ex: xsd:time "string" ++ owl:AnnotationProperty zipMin |  @@ invalid |  :noPrefix (  ) :: { zipMax |  ://noScheme (  ) } .
 [ List<List<<xsd:gMonthDay>>List invalid> ?L.& , , ex::doubleColon ] :: { o-rdf:Type(?u<, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: {  } .
ottr:Template1 :: { (xsd::doubleColon, ?:) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Z5m, bad::IRI, _:b2) ,  
owl:Invalid Space [  xsd:dateTime ?{`S , @ cross ex:Template2 ( ( 123 ,, ) ^^ xsd:invalidType ,, ) :: { bad::IRI(?BJ~, abc) ; }
ottr:IRI [ "y+" ] :: { ://noScheme o-rdf:Triple ^^ :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
?var [ none:foaf:name ?) , ] ottr: :: BASE
ex:Annotation [ ] :: { <unclosedIRI(123, ) } .
ex: :: { ottr:Triple(?', foot:Template1, ?P8*) , ottr:Triple(_:blank :noPrefix -7+)  } .
ex:Invalid Space [ LUB<<List<xsd:unsignedShort>>>xsd:invalidType ?LG , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ badPrefix:string :: { LUB } .
ex::doubleColon  @ http://invalid (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
"string" [ ! xsd:dayTimeDuration  = "string" , , invalid |  xsd:negativeInteger 123 ] @@ ex:Template1 ( ?U : { o-rdf:Type(?BNosR, 23.14.15) , } ...
bad::IRI [  @@ zipMax |  ://noScheme (  ) ) :: ( ://noScheme(_:blank, _:b1) ( ) .
ottr:IRI [ ] :: { "N+" } .
http://invalid [ ex: ] 123 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
xsd:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ://noScheme 123 , ++ ?var 1 zipMin |  , @@ ?var (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space [ LUB<<List<xsd:base64Binary>>>xsd:invalidType ?c , , NEList<List<List<List<List<badPrefix:string>>>>> ??R , @@ cross ex::doubleColon ( _:blank ,, ) ; :: { ottr:Triple(_:blank, o-rdf:Triple, ) } .
bad::IRI [ ?!! xsd:NMTOKEN  ] :: { zipMax |   ( ++ ++ (  ) ) :noType ) } .
<unclosedIRI [ none:foaf:name ?_ ]  :: { ottr:Triple(List :noPrefix "malformed"^^bad:datatype) o-rdf:Type(?j, ?&Li) , } (
"string" [ xsd:yearMonthDuration LUB , ? owl:AnnotationProperty  xsd:gMonthDay , ++ "string"  ,  ] { (?-, none) , ottr:Triple(?O :noPrefix "unclosed) , } .
ex:Invalid Space :: { ottr:Triple(?IZ~b, ottr:Footballer, _:b1) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] { ://noScheme } .
:Annotation [ ?var ] @@ ex:Template1 ( ?z5 :: { ottr:Triple(_:blank xsd:Triple "malformed"^^bad:datatype) o-rdf:Type(?^:, :noType) } .
http://invalid  invalid "string" , foot:foot:clubHistory ?4 @@ wrong "string" ( ++ ++ ( 23.14.15 ) ) invalid |  ) :: BASE .
ex:Invalid Space [ zipMin |  ottr:Bot ?>_ , ,  ] :: { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) ; } .
:noPrefix :: { ex::doubleColon("S*"f*", ?+) ,  } .
<unclosedIRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ! LUB<<List<xsd:gYearMonth>>>xsd:invalidType ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: ( bad::IRI(?`F@avP~gWIV, 1..2) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { ex: ++ ?var 1 ,, } ...
ex:Type [   rdfs:Datatype  = 23.14.15 , zipMax |  @@ ottr:IRI (  ) :: { ottr:Triple(?wZ foot:Footballer invalid) ( 
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
foot:Footballer [ ++ owl:ObjectProperty ?: = "malformed"^^bad:datatype , @@ ex: ( ++ ++ ( , ) ,, ) , :: {  } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  LUB<owl:Class> "string" ,  xsd:short 123 = ?7*  ] :: { ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { (?=), ""unclosed") } .
://noScheme [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ex::doubleColon ] ottr: :: { o-rdf:Type(_:blank, "`*") ; } .
<unclosedIRI [ bad:xsd:Triple ?5|K , , xsd:normalizedString :noType ] { :noPrefix _:blank cross |  } .
bad::IRI ++ ++ xsd:invalidType  , , ?!! ?U = badPrefix:string , @@ ex:Template1 ( ?y" :: { ottr:Triple(LUB, owl:Template1, ?k) , } ...
ex:Invalid Space :: BASE
 [ ex::doubleColon ] @@ ottr:IRI ++ invalid term ,, @@ ex:Annotation ( ++ ++ ( false ,  ) ) , ( 123 ,, ) ^^ ottr: ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ] :: { ex:Invalid Space(?var, invalid) ottr:Triple(?F, bad::IRI, ?rv`) } .
ex: [ 123 ?)a , , ++ LUB<<List<owl:rational>>>badPrefix:string ?' = 23.14.15 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(_:blank, _:b2) ) } .
<unclosedIRI [ xsd:unsignedInt LUB invalid |  owl:DatatypeProperty  ] "{*" :: { zipMin |  ://noScheme ( _:blank  ) } .
:noPrefix ?! 123 = "string" ,  :: { List } .
http://invalid [ ?!!  ?= , @@ owl:Footballer ?8 ) :: { ottr:Triple(?] foot:Invalid Space "invalid"^^://noScheme) , } .
badPrefix:Type [ ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
xsd:Template2 :: { ottr:Triple(?[ http://example.com/:Template1 23.14.15) ,  
o-rdf:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("E*", ex:, ?2) ) } .
<unclosedIRI ?!! List "string" ?? ?te = 123 @ ottr:IRI (  ) _:blank invalid |  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ xsd:base64Binary ?d , , ?var @@ zipMax |  http://invalid ( _:b1 ^^ invalid , ++ ++ ?var 1 ,, ) :: BASE
ex::doubleColon [ ! LUB<xsd:gYearMonth>xsd::doubleColon ?CL  , ]  :: { ottr:Triple(?q ex:Annotation ) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:string } .
bad::IRI [ ] :: { ://noScheme(_:blank, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ zipMin |  rdfs:Literal ?bp ,  ] { o-rdf:Type(?sG, none)  } .
123 [ List<ottr:integer ?c> ?* ] @@  http://example.com/:Triple (  ) @@ foot:Template2 ( ++ (  ) ) ) :: { :noPrefix(?A, ""\+"") 
ottr:Footballer :: { cross |  xsd:Template1 ( LUB ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [  ] :: { :noPrefix ++ ++ (  ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  }
ottr:Invalid Space [ ?!! xsd:unsignedByte , ? 123 = "value"^^invalid , @ ottr:IRI ( ?m ^^ LUB ,, ) :: BASE .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ">*" ] @@ zipMin |  bad::IRI ( 123 ) ) :: { o-rdf:Type(_:blank, invalid) , } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr: :: { ex:Invalid Space } .
ex: :: { ottr:Triple(?Yc"} <unclosedIRI ?UT) (:noType, foot:Annotation) ( } .
"string" [  LUB<<List<xsd:dayTimeDuration>>>badPrefix:string "string" = ( -1+ , List ,, ) , , owl:Class  List<"[+"> ?h ]  :: BASE
:Template2  @@ cross |  ex:Triple (  ) , @@ bad::IRI  :: { ottr:Triple(_:blank, owl:Footballer, "unclosed) 
badPrefix:Annotation [ ++ xsd:anyURI , , ? xsd:double @ 123 _:blank ,  :: { ottr:Triple(_:blank, http://invalid, ?H) , } .
://noScheme  ?7 ,  ; { ottr:Triple(_:blank <unclosedIRI "2023-01-01"^^xsd:date) , ex:Invalid Space(_:blank, 23.14.15) "string" } ...
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ NEList<<LUB<xsd:positiveInteger>>> ?K. , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noPrefix :: { zipMax |  ex::doubleColon ( ( 123 , ( none ) ,, ) ) ^^ LUB ) } .
?var [ "unclosed ] @@ bad::IRI ( xsd::doubleColon ) :: { o-rdf:Type(xsd:invalidType, ottr:) ; 
ex:Type [   badPrefix:string "string"  ] { ottr:Triple(?a: foot:Template2 _:b1) } .
:Template1 [ rdfs:Datatype "'" , ] :: { o-rdf:Type(?-[9, ""L*"") ) } ,
badPrefix:Template2 [ ? xsd:gMonthDay 123 = "j" @@ ex: 123 , @@ zipMin |  ?var (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] {  } .
bad::IRI [ zipMax |  NEList<xsd:negativeInteger>xsd::doubleColon ?3 ! xsd:invalidType "string" , ?! xsd:dateTimeStamp , ] :: {  } .
ex:Invalid Space [ ] :: { <unclosedIRI ( ++ ( invalid term ) , ++ ++ (  ) ) ,, ) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ cross ://noScheme ( ?dV6 ) :: { o-rdf:Type(invalid, ex::doubleColon) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid ottr:  :: { :noPrefix(_:blank, ?S) } .
"string" [ owl:Class List , , ++ xsd:token  = "malformed"^^bad:datatype ottr:foot:Invalid Space ?? , ] "+*pX*" :: { ottr:Triple(?H, ottr:Triple, _:b1) ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?0, ""unclosed") ottr:Triple(?;u1 ex::doubleColon owl:Annotation) , }
o-rdf:Type :: ( ottr:Triple(?f :Footballer "invalid"^^http://invalid) , ) .
"string" [ ++ List "string" ] :: { o-rdf:Type(_:blank, "unclosed) , } .
ex: [  ] <unclosedIRI :: { ex:Invalid Space(123, "unclosed) , xsd::doubleColon 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
badPrefix:Template1 :: BASE .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ http://invalid badPrefix:string :: { bad::IRI ( ++ 23.14.15 zipMin |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ owl:real invalid , , ?!! xsd:dateTime ,  @@ ottr: :: { ottr:Triple(_:blank, :noPrefix, "malformed"^^bad:datatype)  } )
://noScheme "w*7[*" cross |  @@ zipMax |  ?var ( _:blank ,, ) :: ( ottr:Triple(?N http://example.com/:Template2 ?s>4) ) .
ottr:IRI [ "string" ?CA , ] @@ invalid |  ex: (  ) :: { o-rdf:Type(_:blank, _:b1) , }
xsd:Annotation ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@   @@ zipMin |  "string" ( _:blank ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { o-rdf:Type(?.$, ?8) 123 } ...
ottr:IRI [ ? 123 = "2023-01-01"^^xsd:date , ?!! List<<xsd:float>>badPrefix:string ] ex:Invalid Space :: { ottr:Triple("1*wc*", <unclosedIRI, :Type) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?var ?( , ,  @ bad::IRI ( ( 23.14.15 , (  ) ) ) ^^ xsd:invalidType ++ invalid term  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?? LUB ?|^ LUB<invalid> ?s , ] :: { ottr:Triple(_:blank owl:Footballer ) , } .
ex: [ ] :: {  } .
://noScheme [ :noType ] @@ cross http://invalid ( "unclosed ) :: { http://invalid(?U, _:b1) ; } (
http://example.com/:Template2 :: BASE
o-rdf:Invalid Space cross |  xsd:anyURI  @@ "unclosed :: { ottr:Triple(?T foot:Template1 _:b2) , ex: (  ) 
bad::IRI [ ++ ++ LUB<rdf:HTML>xsd::doubleColon  = 23.14.15 ] ottr: :: { o-rdf:Type(ex:Invalid Space, -6+.abc) ( } .
xsd:Annotation :: { zipMin |  "string" ( "?*" ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ? xsd:gMonth , ] :: { 123 } .
<unclosedIRI [ ] :: {  } .
http://invalid [ zipMax |  xsd:NMTOKEN "string" xsd:double 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ( ?=; ^^ invalid ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: List  :: { ottr:Triple(_:blank o-rdf:Template2 none) ://noScheme(_:blank, "malformed"^^bad:datatype) , ottr:Triple(_:blank, ex::doubleColon, "2023-01-01"^^xsd:date) } .
 [  ] @@ cross ?var (  ) :: BASE
http://example.com/:Template1 [ ?!! xsd:invalidType ?E"y , , wrong List<owl:ObjectProperty> ?h , xsd:nonPositiveInteger "++" ] { ottr:Triple(?| badPrefix:Invalid Space :noType) , } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
http://example.com/:Type [ ++ List<xsd:date>LUB  = "value"^^invalid , ? ottr: ?X> , ] @@ "string" ++ ++ 23.14.15 ,, :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: { ottr:Triple(_:blank :noPrefix ?(J) , } .
bad::IRI [ ] :: { http://invalid } .
ex:Invalid Space [ invalid ] "a" :: { ottr:Triple(?N, o-rdf:Invalid Space, "unclosed) ( } .
ex::doubleColon  @@ cross |  ?var (  ) @@ ://noScheme ( ( ( , ) ,, ) ^^  , badPrefix:string ) :: { <unclosedIRI(xsd:invalidType, 123) ,  } .
ex: [ ! xsd:unsignedInt , ,   xsd:gMonth  @@ invalid |  owl:Template1 ( _:blank ) , @@ zipMin |  http://invalid ( _:blank  ) :: BASE
foot:Triple [ ?! xsd:gDay 123 = ( "2023-01-01"^^xsd:date  ] { zipMax |  badPrefix:Template2 ( ++ "string"  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( o-rdf:Type(?:, "invalid"^^) ) .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
://noScheme :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123   :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?G xsd:Type ""{*-Z*"") ?var } .
ex:Template2 [ xsd:gMonth "string" , ] :: { ottr:Triple(_:blank, bad::IRI, 23.14.15) , ex:Invalid Space(_:blank, "unclosed) , } .
:noPrefix [ LUB<xsd:gDay>xsd::doubleColon ex::doubleColon ++ ++ xsd:long ?BR= = "unclosed , , "unclosed @@ ex:  ; :: BASE
<unclosedIRI [ none:foot:clubHistory ?; ] ottr: :: (  ( ( abc.8+ ) ^^ LUB , :noType ) ) .
http://invalid [ ! badPrefix:string 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ex:Template1 ( ?V ) ; { o-rdf:Type(invalid, ?&q) } ..
"string"  @@ "string"  , @@ invalid |   (  ) :: { ottr:Triple(_:blank, ://noScheme, _:b1) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { xsd::doubleColon } .
ottr:IRI [ ] :: BASE .
"string" [ ++ List<xsd:dayTimeDuration>ottr: "string" = "malformed"^^bad:datatype ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("unclosed, ://noScheme, 123) ,  } .
bad::IRI [ ?!! List ?" <unclosedIRI ] @@ http://invalid (  ) :: { badPrefix:Template2 ( owl:Annotation , ( invalid term ) ) ,, )  } .
 :: { o-rdf:Type(?4%e, ""F+"") ex:(_:blank, ?;) , } .
ex::doubleColon [  xsd:positiveInteger , t-pnd:Punned-Class-ObjectProperty :noType , ] invalid :: BASE
ex:Invalid Space [ ? 123 = ( "2023-01-01"^^xsd:date , "-"  , ,  ] { ottr:Triple(?Uw xsd:Invalid Space 1..2) , } .
123   xsd:hexBinary , ! xsd:long  = "unclosed @ zipMax |  ?var ( "unclosed ^^ LUB ) :: ( o-rdf:Type(?nx~D8, "invalid"^^bad::IRI) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(?<5, ?M) , ex:Invalid Space } .
ottr:Template2 [ ?!   , , ottr:  :: {  }
?var [ ] :: BASE .
 [ ++ invalid ?q"!0 , LUB<List<LUB<<List<owl:Class>>>LUB>> ?l) xsd:unsignedShort 123 , ] "unclosed :: { o-rdf:Type(123, :Annotation) , } .
http://invalid [ ?? xsd:Name ] @@ xsd:invalidType :: { ottr:Triple(_:blank, <unclosedIRI, none) invalid |  ex::doubleColon ( _:blank cross |  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: BASE
://noScheme  @@ "string" ( badPrefix:string ) :: { ottr:Triple(?* badPrefix:Invalid Space "+*Zb*") , } ;
ex: [ ?var ?G; , ] { ://noScheme(?H?k, _:b1) } .
o-rdf:Triple :: { o-rdf:Type(?var, ?zj) ( } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: (  ) :: ( "unclosed ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ xsd:dateTime  ,  ] @@  :: BASE .
bad::IRI xsd:invalidType @@ ex:Invalid Space  @@ invalid |  ex::doubleColon (  ) :: { ottr:Triple(_:blank, :noPrefix, "2023-01-01"^^xsd:date) ,  <unclosedIRI (  ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?| ottr:Template2 ""H*<d*"") http://invalid(?A, List) } .
://noScheme [ ++ LUB<xsd:int>LUB ?GJ`X = "malformed"^^bad:datatype ] :: {  } .
123 [ ?!! xsd:duration 123 = "invalid"^^:noPrefix , ] ottr: :: BASE
badPrefix:Template1 [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Annotation [ owl:AnnotationProperty  , , ?! "string"  ottr:<unclosedIRI ?n ++ ++ xsd:date , wrong owl:rational ?T ,  invalid ?l ,  ?+ , ] { ottr:Triple(?3 :Footballer "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { zipMin |  :Template1 ( ( (  ,, ) ) ) ,, ) } .
ottr:IRI [ ! NEList<<LUB<xsd:integer>>>:noType , ] @@ "string" ++ ++ invalid term zipMax |  ) :: BASE .
http://invalid ?var @@ bad::IRI ?)_ ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(://noScheme http://example.com/:Invalid Space 1..2)  } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?}, ) , } .
:noPrefix [   xsd::doubleColon "string" , owl:Class ?Zd ] "|*" :: { ex:Invalid Space(_:blank, ?1O]h) , } .
ex::doubleColon [ ] : { ottr:Triple(?;>, , _:b1) } .
123 [  cross |  @@ badPrefix:Template2 ( badPrefix:string ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
o-rdf:Annotation [ ?!! t-pnd:Punned-Class-ObjectProperty 123 = "value"^^invalid , , foot:bad::IRI ?t List<List<LUB<List<xsd:gMonth>>>> ?F , ] { ottr: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Type [ ] :: BASE .
?var [  NEList<<LUB<xsd:positiveInteger>>>badPrefix:string  = "value"^^invalid , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ List :: { ex:(_:blank, 123) } .
ex:Invalid Space [ ++ invalid ?@ , ?!! 123 = "string"  @@ invalid |  ottr:IRI ( _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex::doubleColon "string" ?M< , @@  ( _:blank zipMin |  ) , @@ :noPrefix  :: { ottr:Triple("unclosed owl:Footballer "2023-01-01"^^xsd:date) , } .
://noScheme [ http://invalid ] :: {  } .
<unclosedIRI :: { o-rdf:Type(?f, ?/r) ottr:Triple(?~:0, bad::IRI, -2+) ,  } .
:Invalid Space [   xsd:double   ] :noType :: { ottr:Triple(?k,, foot:Triple, ""unclosed") ) 
o-rdf:Annotation [ ?? xsd:date , NEList<List<List<xsd::doubleColon>>> ?UN( ] { cross |  badPrefix:Template2 ( ++ ( "malformed"^^bad:datatype ) , ++ ++ ( ?S ,, ) ) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?y3, 23.14.15) ( }
?var   NEList<<LUB<xsd:gMonthDay>>>List ?F = "unclosed ,  @@ o-rdf:Triple ( ++ (  ) zipMax |  ) :: BASE .
<unclosedIRI [ ?? owl:NamedIndividual "f*" @ http://invalid ++ ++ ( "malformed"^^bad:datatype ) ) , "string" :: ( invalid |  ottr:IRI ( _:blank ,, ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] @@ zipMin |  ex::doubleColon ( ( , ) ) , :: { ex: } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?tnE, xsd:Template2, invalid) , } .
ex:Invalid Space [ ?!! owl:Class  = 123 ] :: { o-rdf:Type(_:blank, ?@~VM) ,  } .
 [ ] :: { ottr:Triple(:noType :noPrefix _:b1) ) } .
123 :: { ://noScheme(?D], 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:Template1 [ cross |  xsd:double "string" , ! owl:rational , ,  ] LUB :: { ex::doubleColon(_:blank, none) }
:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ? LUB<xsd:nonPositiveInteger>xsd:invalidType ] { ottr:Triple(ex: :noPrefix ottr:Invalid Space) , } .
ottr:IRI [ "I+" ] :: BASE .
123 [ xsd:decimal  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { ottr:Triple(?A, badPrefix:Type, ?!k)  } .
:Template1 :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?var) } .
://noScheme bad:foot:clubHistory ?= , ?!! rdfs:Literal   , zipMin |  @@  ex::doubleColon ( _:blank ,  ) :: { :noType } .
http://invalid [  ] List :: { ex:Invalid Space(?S, 23.14.15) , } .
 [ ] :: BASE
<unclosedIRI [ ! 123  , ,   xsd:gMonthDay , ,  @ ottr:IRI ( _:blank ,, ) :: ( "string" ++ "2023-01-01"^^xsd:date ?var 1 ^^ invalid wrong ) .
"string" [ ?! NEList<xsd:decimal>:noType "string" = 23.14.15 , 123 ] :: { ex:Footballer ( ++ (  ) , invalid term ^^ xsd:invalidType ,, ) } .
ottr:IRI [ ] :: BASE .
ex:Invalid Space [ List<List<>> ?, , ,  ?`P = "unclosed , ] @@ cross |  ://noScheme (  ) @@ <unclosedIRI  :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix :: { badPrefix:string } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(_:blank http://invalid ?V!) ( } .
 owl:Class  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ wrong ex::doubleColon ( _:blank invalid |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ rdf:XMLLiteral List ] bad::IRI :: { ex:(?<dYTs[#, ottr:) o-rdf:Type("@*eu*", 7+) , 
owl:Invalid Space [   :: { ottr:Triple(?7, xsd:Annotation, "unclosed) , ottr:Triple(?J- badPrefix:Template2 ""unclosed") }
http://example.com/:Type [ ?? xsd:gYear 123  ++ ++ xsd:nonPositiveInteger , 123 ?2 , ?!!  ?~ zipMax |  xsd:unsignedByte ?" , ,   xsd::doubleColon ?Fi , ] { http://invalid(?4f, 1..2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { ottr:Triple(?t :Invalid Space ?]jh) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ List<"string" ?p> ?g @@ o-rdf:Template1 _:blank cross |  , @@ zipMin |  ?var ( ++ ++ "2023-01-01"^^xsd:date ,, ) :: { badPrefix:string } ,
<unclosedIRI [ invalid |  ottr:IRI ?~F\  ] @@ "unclosed :: { ottr:Triple(123, http://invalid, bad::IRI) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { :noPrefix(_:blank, _:b1) ) } .
ex:Invalid Space :: { ://noScheme ( (  ) ) ,  ) } .
ex:Invalid Space [ ?? ottr:  , , LUB ] { o-rdf:Type(?%r, "invalid"^^ex::doubleColon) , } .
owl:Footballer [ ? xsd:boolean 123 = invalid^^type , ?!! List<<xsd:unsignedInt>>List "string" = 123 , ]  :: {  
ex:Annotation [ rdf:XMLLiteral ?o , xsd:anyURI :noType ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: { :noPrefix(123, ?z) ; } .
http://invalid [ zipMin |  List<xsd:gMonth>ottr: ?/| ?  = "value"^^invalid ] @ zipMax |  foot:Triple ( _:blank  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "K+" :: { ottr:Triple(?<\%{ :Template2 badPrefix:Template1) , } .
ex:Invalid Space ://noScheme @@ bad::IRI 123 :: { <unclosedIRI ( ++ ++ ( ?var 1 ,  ) ) ,, ) } .
 [ foot:foot:clubHistory ?& , @@ xsd:invalidType :: { o-rdf:Type(_:blank, LUB) } .
ex: [   List "string" , ?! xsd:date , ,  ] :: {  } ...
?var [ xsd:base64Binary  ! xsd:boolean 123 = invalid^^type , ?? xsd:double ,  ] { ottr:Triple(?9, ex::doubleColon, "malformed"^^bad:datatype) , "unclosed } .
ottr:Footballer :: { ottr:Triple(?!, ex:Invalid Space, "unclosed) ottr:Triple(?a http://example.com/:Type _:b2) , } )
ottr:IRI [ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex: xsd:Template1 _:b2) ottr:Triple(_:blank, :noPrefix, ??) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ List<<xsd:float>>badPrefix:string ?_A @@ owl:Type ( , ) ^^ LUB , @@ "string" ( _:blank _:blank ,, ) :: BASE
ex:Invalid Space [ List<xsd:NCName ?var> ?P,x= , , "V*6g*" ] @@ :noType :: {  } .
://noScheme invalid |  xsd:language "string"  xsd:boolean ,  zipMin |  @@  bad::IRI (  ) :: {  } .
 :: { http://invalid(?8, ottr:) , o-rdf:Type(?", ""T"") ( } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Z&Q, foot:Invalid Space, 5+) } .
123 [ ! 123 = ( http://example.com/:Footballer , ( xsd:invalidType ) ,,  , ]  :: { cross ottr:Annotation ( invalid ) 
o-rdf:Triple [ ?var ?@2 , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] @@ cross :noPrefix ( (  ) ) , ++ ( ?.3u ) ,, ) :: { ottr:Triple(<unclosedIRI, ://noScheme, ?l) ,  } ;
:Invalid Space [ ] :: BASE .
123 :: { o-rdf:Type(_:blank, 1..2) ex:Invalid Space "string" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?m8 o-rdf:Annotation xsd::doubleColon) , } .
 [ xsd:double "string" ! LUB<<List<xsd:unsignedByte>>>List  = "unclosed ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { "<*" }
ex::doubleColon  xsd:anyURI , ? 123 = ?,kHX , , rdfs:Datatype ottr: , @@ xsd:invalidType :: BASE
http://invalid [ "C+" @@ invalid |  ex: (  ) :: { ex:(?EJ, _:b1) , 
?var NEList<zipMin |  owl:DatatypeProperty > ?>f) , , 123 ?] , ,   xsd:positiveInteger , ?! owl:rational , @ xsd:Triple ( ++ ++ invalid ) :: ( ottr:Triple(?`, ex:Template1, 23.14.15) ) .
123 [ ! ?l8&  ] ://noScheme :: ( ottr:Triple(?-; owl:Template2 ?@) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://invalid  , @@  (  ) :: { ex:Invalid Space(_:blank, "unclosed) , ottr:Triple(_:blank, ex::doubleColon, none) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://example.com/:Triple [ ] :: {  } .
<unclosedIRI [ List<"string"> ?x , , xsd:hexBinary  , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: :: { o-rdf:Type(xsd::doubleColon, 23.14.15) , } .
:noPrefix   :: { cross ?var ( ++ ++ ( 123 , (  ) ) ) zipMax |  ) }
bad::IRI [ ?! xsd:NMTOKEN "string" = 23.14.15  ] @@ ://noScheme  : { bad::IRI(_:blank, "malformed"^^bad:datatype)  } .
badPrefix:Footballer ?? LUB ?B." ,  @@ zipMin |  o-rdf:Template1 ( _:blank , ++ ""'"" ,, ) @@ cross |  ex:Type ( ( , ) ) :: { List 
bad::IRI [ NEList<<LUB<ottr:Bot>>>xsd::doubleColon ?9 , ] :: BASE .
123 [ NEList<   = 23.14.15> ?H , ,  ] ?var :: { ottr:Triple(?hT, :Type, abc) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Triple invalid |  xsd:time "string" "7" @ ottr:IRI ottr: :: { ottr:Triple( <unclosedIRI ?~) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: { badPrefix:string } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  ex: ( true ) :: { http://invalid(_:blank, ) ; } .
ex::doubleColon [  xsd:invalidType 123 , ?! xsd:long ] @@ || 123 (  ) @@ "string"  :: { :noPrefix ( _:blank , ( (  ) ) ,  ) ^^ LUB  ) } ,
foot:Invalid Space ; { o-rdf:Type(?]v, "invalid"^^bad::IRI) } ...
123 ! xsd:Name , ?? xsd:dateTimeStamp  @@ ://noScheme (  ) ( :: { ex:Invalid Space(?c, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ) }
ex::doubleColon :: ( ottr:Triple(?y, :noPrefix, ) , ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ badPrefix:Footballer ( ++ ++ "malformed"^^bad:datatype invalid |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ] :: {  } .
http://invalid "unclosed @@  <unclosedIRI ( _:blank  ) :: { ottr:Triple(_:blank o-rdf:Annotation none) ex:(123, "2023-01-01"^^xsd:date) } .
ex:Invalid Space [    ?F  ?- ] zipMax |  @@ bad::IRI invalid :: { o-rdf:Type(_:blank, ?r) ; } .
://noScheme [ ?? t-pnd:Punned-Class-ObjectProperty , "string" ?.M , ] { ottr:Triple(_:blank, ex:Template1, 23.14.15) , cross |  ottr:IRI (  ) } .
owl:Invalid Space [  ] :: { List 
ex:Invalid Space [ ?! owl:NamedIndividual , , zipMin |  xsd:integer  , ] badPrefix:string :: { ottr:Triple(?', http://example.com/:Template2, _:b2) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space("N*", xsd::doubleColon) } .
ex: :: BASE .
?var [  ?X  ] bad::IRI ; { ottr:Triple(_:blank, http://invalid, "unclosed) , ottr:Triple(?K :noPrefix 23.14.15)  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Annotation [ ?!! xsd:boolean , , ! xsd:dateTimeStamp ,  @@ 123 :: { o-rdf:Type(?n, ?cWT) , } .
ottr:IRI zipMax |  LUB<<List<ottr:IRI>>> ?+R , @@ || <unclosedIRI ( ( ( invalid term , _:b1 ) ) ,, ) invalid |  ) :: { ottr: } .
ex::doubleColon [ ] :: { ://noScheme ( ++ "string" LUB ) } ;
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
 [ xsd:invalidType ]  :: BASE
ottr:Invalid Space [ ottr:boolean ?e< ] { ottr:Triple(?_, xsd:Template2, none) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: BASE .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] LUB :: { o-rdf:Type(?V, ex:) ottr:Triple("v+" foot:Template2 ?n$) , } (
o-rdf:Footballer [   NEList<xsd:double>invalid 123 = "unclosed , ] :: { ottr:Triple(_:blank, :noPrefix, "unclosed) } .
ottr:IRI  xsd:byte ?r0 ,  @@ ?var :: { xsd:invalidType } .
ex:Invalid Space :: { <unclosedIRI(?e, "invalid"^^) ,  } .
://noScheme [ none::Type ?} ] @@ ex::doubleColon  , :: { zipMin |  bad::IRI ( ++ ++ ( invalid term ) ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" [ ++ :noType "string" List<"unclosed> ?5 , , ottr: ] { ottr:Triple(?\D, badPrefix:Invalid Space, true) ) } .
ottr:Annotation [ owl:AnnotationProperty List @@ cross ex:Template1 ( ?| ) :: { http://invalid(?{E, ""'*"") ; 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: { ottr:Triple(?9U ex:Invalid Space ex::doubleColon) , } .
ottr:IRI :: BASE .
123 [ invalid |  xsd:dayTimeDuration "string" ,  ] :: { ottr:Triple(_:blank, badPrefix:Invalid Space, ?\) o-rdf:Type("unclosed, _:b2) ( }
ex:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix (  ) ) , "string" ; :: { :noType } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:(?654L]M, ""K"") , ://noScheme ( ++ "malformed"^^bad:datatype cross |  ) } .
 [ NEList<<LUB<xsd:unsignedLong>>>invalid ?=z ] { <unclosedIRI(?', "2023-01-01"^^xsd:date) } .
http://invalid none:ottr:Annotation ?e ,  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
?var [ ottr: ] badPrefix:string :: (  ) .
xsd:Template1 [ NEList<List<( , )>> ?l ?!! xsd:token , , ?! 123 = xsd::doubleColon , , ! xsd:NCName  = "unclosed , ] @@ List :: BASE
:noPrefix [ ] :: { ottr:Triple(?e, foot:Template1, ex:) 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ 123 ( (  ) ) , ++ ++ ( http://example.com/:Type ) ) :: { o-rdf:Type(_:blank, ?l]F) o-rdf:Invalid Space ++  _:blank ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ List<xsd:token>xsd:invalidType ?m , ,  ] ?var :: { ottr:Triple("@+" ://noScheme false) ( } .
 [ ottr:  :: {  } .
bad::IRI [ ! List 123 ?! owl:NamedIndividual "string"  , ] :: { invalid } .
<unclosedIRI :: BASE
ex:Invalid Space ++ ++ 123  ,  @@ 123 (  ) @@ "string"  :: ( ex::doubleColon(_:blank, _:b1) , ) .
:Annotation [ ?!! xsd:Name ] @@ cross ex:Template1 ( ?SqO ) :: { ottr:Triple(?M.P ottr:Triple "":"") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI :: { bad::IRI(?%, "?") , } .
:noPrefix [ ++ xsd:nonNegativeInteger 123 = 23.14.15 , , invalid @@ ex:Template1 ( ?B|s{ :: BASE .
?var [ List<xsd:string>ottr: ?Hdz ] 123 ; { ottr:Triple(_:blank, ex::doubleColon, ?c) } ..
 [ ?!! xsd:date ,  ] @@ zipMax |  ://noScheme (  ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ottr:Template1 _:blank ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ex: http://example.com/:Triple _:b2) ( } .
http://invalid [ xsd:integer xsd::doubleColon , ] :: {  } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex:Invalid Space [ ] :: {  } ;
"string" [ ?! rdfs:Resource  ] cross |  @@ ottr:IRI (  ) :: { ottr:Triple(?`, bad::IRI, "malformed"^^bad:datatype) , ://noScheme(_:blank, "unclosed) , }
://noScheme ; { o-rdf:Type(123, _:b1) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ List<ottr:Bot>List ?C , ex:Invalid Space ] ">" :: { ottr:Triple(?{X'6, <unclosedIRI, ?Ya) } .
:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" [ ] :: { :noPrefix(_:blank, xsd::doubleColon) , } .
 [ ??  = "string" @@  :: { ottr:Triple(?Kt` o-rdf:Triple ""g+"") , invalid } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ zipMin |  List<xsd:NCName> ?G_ , ] @@ ex: ?var 1 LUB @@ cross ex::doubleColon ( (  ) ^^ :noType ) :: BASE
?var ! ottr:IRI 123  , ,  @ <unclosedIRI (  ) :: { http://invalid(?v, _:b2) ://noScheme (  ) } (
http://example.com/:Footballer [ owl:ObjectProperty "~*" ++ ++ rdfs:Literal ?: = "malformed"^^bad:datatype  :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: ( o-rdf:Type("\*nm*", ex::doubleColon) , ex:Invalid Space(_:blank, ""unclosed") ottr:Triple(?}, ottr:Template2, ?N_$) ) .
:noPrefix [ ! xsd:byte ?jG = none ] @@ invalid |  bad::IRI (  ) @@ ?var (  ) :: BASE .
://noScheme [ "string" ?M-3 ?? NEList<<LUB<xsd:NMTOKEN>>>List , @@ o-rdf:Footballer :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ] :: { 123 } .
ex: [  t-pnd:Punned-Class-ObjectProperty "string" = invalid^^type , xsd:unsignedLong xsd::doubleColon , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] badPrefix:string :: { ottr:Triple(?5 <unclosedIRI _:b2) ( } .
http://invalid :: {  } .
:Type  @@  xsd:Template1 ( 123 cross ) , @@ zipMin |  ex:Annotation ( ++ ( (  ) ) ,, ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { zipMax |  badPrefix:Invalid Space ( _:blank ?var 1 ^^ invalid , ++ ++ "unclosed ,, ) } ,
owl:Triple [ ++ LUB  ] @@ "r" :: { o-rdf:Type(?so{p, 23.14.15) , }
ottr:IRI [ xsd:dateTimeStamp ?= , ,  ] @@ "string"  , :: { <unclosedIRI(?"E, none) , } .
xsd:Triple [ ?? NEList<<LUB<xsd:positiveInteger>>>:noType "string" = "unclosed ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: { http://invalid ( _:blank ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName wrong @@ zipMin |  ex:Invalid Space ( ++ ++ ?var 1 cross |  ) :: { ottr:Triple(_:blank ottr:Template2 ?M9) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ] :: { ottr:Triple(xsd:invalidType, ex:, ://noScheme) o-rdf:Type("unclosed, "invalid"^^ex::doubleColon) } .
123 [ invalid  :: { ottr:Triple(?;#, :Footballer, invalid) ) } ;
foot:Annotation [ ?! xsd:double  = 123 owl:NamedIndividual xsd::doubleColon , List<? xsd:dayTimeDuration> ?d , ] :: ( List ) .
123 [ ++ ++ xsd:integer , ,   xsd:negativeInteger , ] @  ottr:IRI (  ) :: { ottr:Triple(?<, http://example.com/:Type, 23.14.15) ( } ...
?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ NEList<<LUB<xsd:long>>>ottr: ?j , ?!! xsd:time , ] @@ badPrefix:Footballer _:blank invalid |  , @@ ex::doubleColon (  ) :: { LUB }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(_:blank, ?d:G) ; } .
:noPrefix 123 ?? @@  <unclosedIRI ( bad::IRI ) @@ cross |   ( ?var 1 ^^ List ) :: {  } .
ex:Invalid Space [  ] "s+" :: { ://noScheme(?HUK, "string") , } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  http://invalid ( ++ (  ) ) ,, ) ( :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Annotation [ wrong ottr:IRI 123  ] :: { zipMax |  :Invalid Space ( ++ ++  none ^^ invalid , "invalid"^^<unclosedIRI , ( _:b1 ,, ) ^^ badPrefix:string cross ) } .
http://example.com/:Template2 [ ] :: ( ottr:Triple("unclosed, bad::IRI, 23.14.15) , bad::IRI(?c, "unclosed) ottr:Triple(?N6 foot:Template1 "malformed"^^bad:datatype) ) .
ottr:Triple ++ ++ rdf:XMLLiteral "string"  , , owl:DatatypeProperty xsd::doubleColon @@ o-rdf:Type ?}F| ) :: { ex:(?Mt, abc) , } )
"string" [ ] :: { ?var }
ottr:Footballer ?!! xsd:Name 123 = "unclosed , @@ cross |  ottr:IRI ( ++ ++ ?var 1 , badPrefix:string ) , @@ :noPrefix  :: BASE .
http://invalid :: { <unclosedIRI ( _:blank ,, ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [  ] @@  ( "\" ) :: {  } .
ex: [ ex:Invalid Space @  ://noScheme ( "invalid"^^ex::doubleColon ^^ List || ) :: { ottr:Triple( :Invalid Space ?kN) } .
123 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template1 [ ++ ++ "string"  ] { ex:(_:blank, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, none) o-rdf:Type(_:blank, _:b1) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?]E, , LUB) , 
badPrefix:Template2 [  NEList<<LUB<xsd:unsignedLong>>>:noType   , List<List<>> ?w ? ottr:IRI , , ?! xsd:nonNegativeInteger ,  ] ~: { o-rdf:Type(?<b, invalid) ( } ..
http://invalid [ ] :: { o-rdf:Type(?jJ, bad::IRI) } .
ottr:IRI [ ++ xsd:gDay  = ?/ , , 123 ] @@ invalid |  ?var ( badPrefix:string ) ; :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("V+", ex:Invalid Space, "malformed"^^bad:datatype) , ottr:Triple(_:blank owl:Triple ?y) ( } .
ex: [ List<?!! xsd:unsignedByte> ?O6 zipMax |  NEList<<LUB<xsd:dateTimeStamp>>>LUB 123 , ] xsd::doubleColon :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ xsd:positiveInteger "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI ?Q ) :: { (?U, _:b2)  } .
:noPrefix xsd:yearMonthDuration List  :: { ://noScheme(?,, _:b1) , } )
"string" :: ( :Footballer ( ++ ( ""unclosed" ,, ) ,  ) ) .
o-rdf:Template1 [ ?! xsd:invalidType ?^ , , ? owl:NamedIndividual ?* = "value"^^invalid , , bad:badPrefix:Annotation ?{L , ,     , , ! xsd:nonNegativeInteger , ,  ] { :noType } .
 [ List<?!!  123> ?U , rdf:HTML ?-r , @ 123 ( _:blank , ++ ++ "string" ++ _:b1  ) :: BASE
owl:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ottr:IRI ( xsd:invalidType ) ) :: BASE .
ex::doubleColon "string" ?e'p?  @@ ex: ( "unclosed ) :: { ex:Invalid Space(_:blank, ?var) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ badPrefix:string ] <unclosedIRI :: { ottr:Triple(invalid o-rdf:Invalid Space ?@) } .
://noScheme :: { List } .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ! xsd:string "string"  , , ??   ] :: { o-rdf:Type(_:blank, none) , ?var  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
badPrefix:Footballer zipMin |  xsd:integer 123 @@ ottr:IRI (  ) @@ ottr:IRI (  ) :: ( ottr:Triple(_:blank, :noPrefix, "unclosed) , ) .
123 ?? xsd:float "string" = 23.14.15 , LUB @@ ex:Invalid Space (  ) @@ cross |  ottr:IRI (  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon ++ ++ ?var 1 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: BASE .
ex:Invalid Space [  ] @@ || bad::IRI ( ?var ) :: { ottr:Triple(_:blank, foot:Triple, ""unclosed") , o-rdf:Type(?mv, ?<5) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@   ( _:blank , ( ?Y , (  ) ,, ) ) ^^  1..2 invalid |  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ owl:rational "unclosed , , "string" ?j ] :: { ottr:Triple(_:blank <unclosedIRI "unclosed) http://invalid(_:blank, none) , } .
owl:Template1 [   :noType  , ] xsd::doubleColon :: { http://invalid }
badPrefix:Type :: { <unclosedIRI(badPrefix:string, List) ) } ,
xsd:Annotation [ zipMax |  xsd:dateTime 123 ?!! rdf:HTML , ] { ottr:Triple(_:blank, , "2023-01-01"^^xsd:date) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix(?xo, _:b2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ] @@  (  ) @@ ?var _:blank  :: { o-rdf:Type(_:blank, ) "m*4X*" 
owl:Type [ ++ ++ xsd:byte ?9 =  , , ++ List<xsd:Name>List ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
bad::IRI :: { ottr:Triple(ex::doubleColon o-rdf:Footballer ?dqC) , } .
ex:Invalid Space [ xsd:language 123 , ] invalid :: {  } .
http://invalid  @@ invalid |  ://noScheme ( LUB ) , :: ( ottr:Triple(?\I}, ex:, true) ) .
<unclosedIRI [ ] :: { o-rdf:Type(?*s, ottr:Template1) ; } (
"string" [ ?? xsd:nonPositiveInteger , ?!! "string"  @@  123 ( ++ ++ ( , ) ) , @@ zipMax |  ottr:IRI (  ) :: BASE
xsd:Annotation [ owl:real badPrefix:string , , ! owl:DatatypeProperty  ] @@ <unclosedIRI (  ) :: { cross |  ex:Invalid Space ( _:blank ,  ) }
ottr:IRI :: BASE .
?var [  ] @@ :noPrefix ( ( ?] ,, ) ) ^^ List  ) ( :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2  @@ ex:Invalid Space  @@ ex::doubleColon  :: { ottr:Triple(_:blank, ex:, "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, "malformed"^^bad:datatype) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(?L}, ://noScheme) , ottr:Triple("Z*3(*" o-rdf:Invalid Space ?1) , } .
 [ ] :: {  } .
bad::IRI [  NEList<t-pnd:Punned-Class-ObjectProperty>:noType 123 = invalid^^type , ] "string" :: { LUB } .
123 [ !   , , badPrefix:string @@ zipMax |  ex::doubleColon ( _:blank , invalid ) , @@ invalid |  http://invalid ( "string"^^^xsd:string ,, ) :: BASE
:Type [ xsd:unsignedInt "x+" ++ ++ xsd:normalizedString "string" = "string" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?9, badPrefix:Annotation, _:b2) ; }
ottr:Triple ? 123 = (   @ cross |  bad::IRI (  ) : { zipMin |  foot:Footballer (  ) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" xsd:Name :noPrefix , ? LUB<xsd:unsignedInt>badPrefix:string , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ ex::doubleColon ++ ++ ( ( , ) , abc.-9+ ) ) || :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   invalid ?*1 cross |  xsd:long  , ] :: { (_:blank, ""K*"") ; } )
ex:Annotation [ ] :: BASE .
<unclosedIRI :: { ottr:Triple(123 xsd:Triple ?^G+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?o, ://noScheme, xsd::doubleColon) ,  } .
ex:Invalid Space [ xsd:invalidType ] @@ ex: (  ) , @@ zipMin |  bad::IRI ( ( none ,, ) , ++ "string" ,, ) :: { "V*>C*" } .
http://invalid [  ] List :: { o-rdf:Type(?q[, "malformed"^^bad:datatype) , }
?var [ List<LUB> ?8 ] { ottr:Triple(?x2: owl:Template2 "2023-01-01"^^xsd:date) invalid |  ottr:Footballer ( _:blank :noType ) } .
:Invalid Space [ xsd:anyURI 123 ?var ?& , , ++ ++ ?/4 = ( "u+" ,   @@ "unclosed :: BASE
http://example.com/:Invalid Space [  ] :: { ottr:Triple("string", :noPrefix, LUB) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: ( ":+" ) .
ottr:IRI [ invalid |  owl:rational "string" , ]  :: { bad::IRI(_:blank, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI ""7*X6*"" ^^ invalid ++ ++ ?E , ++ (  ) ) ,, :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ xsd:language  ] ://noScheme :: { ottr:Triple(?'M o-rdf:Triple ?,BR) , } .
ex: [ List ] { (?5, -8+.abc)  } .
http://invalid :: {  ?var ( invalid term ) 
xsd:Template1 [  List<<owl:DatatypeProperty>>xsd:invalidType 123 = 23.14.15 , ? xsd:unsignedLong  @ foot:Type (  ) :: BASE
ex:Invalid Space [ ?!!  = foot:Triple , zipMax |  List<xsd:gMonth> ?[h ?! invalid 123 , , "unclosed ]  :: BASE .
"string" [  NEList<rdf:XMLLiteral>List ?- = invalid^^type , ] :: BASE
owl:Type :: { ottr:IRI _:blank } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [  ] @@ || http://invalid ( (  ) ) ^^ xsd::doubleColon ++ "string" , ( ?var 1 ) ,, ) , @@ <unclosedIRI ( 123 ) :: {  } .
:noPrefix [ ] :: { ex::doubleColon(ottr:, none) } .
bad::IRI [ cross |  xsd:long ?Y5M @@ LUB :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?ky ex: ?\`) , } .
?var ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  xsd:Template2 ( ++ ++ _:b1 zipMin |  ) @@ invalid |  ottr:Annotation (  ) :: { o-rdf:Type(_:blank, "f+") ; } (
http://example.com/:Footballer [ owl:DatatypeProperty ?3 , xsd:integer badPrefix:string ,  ] { o-rdf:Type(_:blank, _:b2) ottr:Triple(_:blank, :noPrefix, "2023-01-01"^^xsd:date) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?! LUB<<List<rdfs:Resource>>>invalid , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
123 [ <unclosedIRI @@ http://example.com/:Annotation ( invalid term ^^ :noType , _:blank List ) :: BASE .
http://invalid  @@ cross |  ex:Invalid Space ( ++ ( ( "invalid"^^bad::IRI ,, ) ) , none ) invalid |  ) @@  ++ ++ ?q7 :: { ottr:Triple(_:blank ottr:Invalid Space "string") ; } .
:noPrefix :: {  ex: ( "unclosed ,, ) } .
://noScheme [   badPrefix:string  , rdf:XMLLiteral xsd:invalidType ] @@ "unclosed :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ] :: { ottr:Triple(, :noPrefix, _:b1) } .
?var [ ++ xsd:int zipMin |  xsd:yearMonthDuration 123 , ] ")*i|*" _: { <unclosedIRI(?F-, ?5Dc) , } .
o-rdf:Template2 [ ? xsd:duration , ,  @@ zipMax |  ex:Invalid Space (  ) , :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , o-rdf:Type(_:blank, 23.14.15)  } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ 123 ?B ?var ] :: { ottr:Triple(ottr: ex: ex::doubleColon) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
xsd:Invalid Space [ ++ ++ badPrefix:string ?d7/ ,  ] "P*" :: { List } (
ex:Invalid Space :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @  ( invalid term zipMax |  ) :: { zipMin |  "string" ( _:blank , ( "unclosed ) ) ^^ xsd:invalidType ++ ++ ( "string" ,, ) ,, ) } .
:noPrefix [ xsd:gMonth :noType cross |  @@ <unclosedIRI ++ "invalid"^^http://invalid :: { bad::IRI(?`, _:b2) ,  } .
http://example.com/:Type ?!! owl:rational   , , ?! List<<owl:ObjectProperty>>invalid , @@ cross ex:Footballer (  ) , ; { o-rdf:Type(_:blank, ?-) ; } .
badPrefix:Template2 [ ] :: { ottr:Triple(?[, :Triple, _:b1) , 
foot:Annotation [  xsd:base64Binary 123 ,  ] { o-rdf:Type(_:blank, none) o-rdf:Type(_:blank, "malformed"^^bad:datatype) ) } .
ex::doubleColon :: { ottr:Triple(invalid ex:Invalid Space ?var) o-rdf:Type(?yH, _:b2) ,  } .
"string" [ ++ ++ NEList<xsd:token>xsd:invalidType 123 = 23.14.15 , @ ottr:IRI ( "unclosed ) :: BASE .
:Annotation [ LUB ] @@ http://invalid :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName || @@ <unclosedIRI _:blank ,, :: { (_:blank, ?-,) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ xsd:foaf:name ?16X ,  xsd:nonPositiveInteger t-pnd:Punned-Class-ObjectProperty "string" , ,  ] :: { ottr:Triple(??\^m, foot:Template2, "invalid"^^:noPrefix) , } .
://noScheme [ xsd:gDay ottr: ] badPrefix:string :: { List 
123 [ List<List<"string"^^^xsd:string , >> ?j3 ! ?;+  , , ++ rdf:XMLLiteral   , ] { invalid |  o-rdf:Footballer (  ) } .
xsd:Type [ ] :: { ottr:Triple(?v, http://example.com/:Template1, ""4"") }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [  ] :: {  } )
?var [   :: { ottr:Triple(_:blank, ex::doubleColon, "unclosed) , ottr:Triple(_:blank ://noScheme "malformed"^^bad:datatype) <unclosedIRI  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 NEList<xsd:language>xsd:invalidType 123 @@ owl:Template2 ( ++ ++ "string"^^^xsd:string ) :: { bad::IRI(?M-, ottr:) , } .
ex:Invalid Space :: { o-rdf:Type(123, ?d) } .
:noPrefix [ ] :: BASE
http://invalid [ ?! invalid  ,  ] @@ invalid |  123 (  ) , @@ zipMax |  "string" (  ) : { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
badPrefix:Annotation [ ? xsd:unsignedByte ?Su = "unclosed  ] ",*" :: ( ex: ) .
xsd:Invalid Space [ ottr:Bot :noType , ] { ottr:Triple(?y, o-rdf:Triple, _:b1) , } .
"string" [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { :noPrefix http://invalid 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ?;4) ,, ?CU , , ?var @@ ottr:IRI (  ) :: { ex:(xsd:invalidType, 23.14.15) ) } .
://noScheme [ ] :: { ottr:Triple(?' bad::IRI ?6Vv) , "`*" } .
ex:Invalid Space :: { ottr:Triple(_:blank, :Invalid Space, :noType)  } .
<unclosedIRI [  ottr: "string" , zipMax |  List<rdf:XMLLiteral>badPrefix:string  , ] @@ cross ex:Template1 ( ?rl ) :: { o-rdf:Type(?,@c, "2023-01-01"^^xsd:date) } .
 [  ] List :: BASE
123 ++ ++ xsd:short xsd:gDay "d" @ cross ex::doubleColon ( none ^^ invalid , ++ "string"^^^xsd:string ++ ++ ( ( "unclosed ) ,  ) ) ) /: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ottr:Template1 [ ?var ?_ ,  ] invalid |  @@ cross |  ?var (  ) :: ( ottr:Triple(?f, badPrefix:Footballer, _:b2) , ) .
badPrefix:Template2 [ ?! LUB<<List<xsd:duration>>>LUB 123 = ( ( badPrefix:string , "malformed"^^bad:datatype ,,  ) , "-*9"*" ] :: { 123 } .
 [  ] :noPrefix :: BASE .
ottr:IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ...
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ?!! xsd:dayTimeDuration ?3 = "value"^^invalid , ] @@ ://noScheme ( ( "string" , ?var 1 ,, ) ^^ xsd::doubleColon zipMax |  ) ) :: { ottr:Triple(_:blank ex::doubleColon _:b2) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(ottr:, xsd:Invalid Space, ?K) ex:Invalid Space(?6B@, ) ( } .
http://invalid xsd:anyURI "Z*" , , xsd:NMTOKEN   :: { <unclosedIRI ++ ++ (  ) ) } .
bad::IRI [  ?}v  @@ zipMin |  ex: ( _:blank ,, ) @@ cross |  ://noScheme (  ) :: BASE
?var :: {  }
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  @@ invalid |  ?var (  ) :: ( o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , o-rdf:Type(?<N, 23.14.15) , ) .
ottr:IRI [ ex:Invalid Space ] LUB :: { invalid |  ?var ( ( ?var 1 , (  ) ) ,, ) , "malformed"^^bad:datatype ^^ badPrefix:string ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation [  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ none:foaf:name ?}P , , xsd:string  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ :noPrefix ++ ++ ?2 123 ( :: { "unclosed } .
<unclosedIRI  xsd::doubleColon 123 ,  :: { ://noScheme(?L<Q, invalid) } .
 [ ++ ++ owl:NamedIndividual   ,  ] @ bad::IRI (  ) :: { o-rdf:Type(_:blank, none) , o-rdf:Type(_:blank, "unclosed)  } .
ex: [ ] :: BASE
ex::doubleColon ; { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ? xsd:gMonthDay "string" = "unclosed  :: { ottr:Triple(_:blank http://example.com/:Footballer 23.14.15) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ NEList<http://invalid> ?d ,  @@ ://noScheme ++ ++ ?la ,, , @@ cross |  ottr:Footballer ( (  ) ) , ++ ( 23.14.15 ,, ) ) :: {  } .
ottr:IRI [ zipMin |  xsd:gMonth "string" , , ++ ++ ottr:  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: BASE .
ex: :: ( ottr:Triple(?$, , ?var) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple("5+" http://example.com/:Type invalid) , } .
<unclosedIRI [ ] :: { o-rdf:Type(_:blank, ?^Ky) } .
ex::doubleColon [ List ] :: { badPrefix:string } .
bad::IRI LUB<xsd:normalizedString>:noType 123 , @@ invalid :: { :noPrefix(?Q, "unclosed) ex:Invalid Space(?Y, ""S*"") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?var ?v ] invalid |  @@ xsd:Template2 ( ?var 1 ^^ LUB _:blank cross ) :: BASE
foot:Invalid Space  rdfs:Resource , @@ cross ex:Template1 ( ?tL! ) :: { zipMax |  :Triple ( "unclosed ) }
o-rdf:Invalid Space :: BASE .
123 ++ LUB "string" @@ ottr:IRI ( "string" ) :: { bad::IRI(?K, ?T[]p) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [  @@ zipMin |  ://noScheme ( ++ invalid term ) ; :: { ottr:Triple(_:blank, ex:Invalid Space, xsd:invalidType) , }
ex: [ ] :: { :noPrefix ( ?-: ,, ) } .
<unclosedIRI [ "r" ] :: { ex::doubleColon } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :noType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ?$ , ?! xsd:date , ] @ ?var  :: { ottr:Triple(_:blank http://invalid "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(badPrefix:string, "unclosed)  } )
ottr:IRI [ ?? xsd:unsignedByte  @@ ottr:IRI  , @@  ?var ( _:blank zipMax |  ) : { o-rdf:Type(_:blank, _:b1) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ://noScheme(ex:, invalid) ottr: ) .
ottr:IRI none:foot:clubHistory ?'y @@ ?var (  ) :: BASE .
xsd:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] "c*2`*" :: { <unclosedIRI _:blank } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ xsd:Name 123 , ,  ] :: { o-rdf:Type(_:blank, ?C) , } .
ex:Invalid Space [ ++ ++ LUB<<List<xsd:decimal>>>List "string" = invalid^^type ,   xsd:duration  @@ zipMax |  bad::IRI (  ) @@  (  ) :: {  } .
http://invalid [ ] :: { ottr:Triple(?W, ex::doubleColon, xsd:invalidType) , } .
"string" [ xsd::doubleColon ] @@ :Template1 ?+ ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
badPrefix:Template2 :: { ://noScheme(?\, ex:Triple) , ottr:Triple(?1S ottr:Footballer "unclosed) 
foot:Invalid Space [ cross |  xsd:base64Binary  , @@  ottr:IRI (  ) ) :: { ottr:Triple(?I, :noPrefix, 23.14.15) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ottr: , @@ 123 ( _:blank  ) :: { ottr:Triple(?\, ex:, owl:Annotation) , } ;
ottr:IRI [ xsd:dateTime ?var , @ cross |  bad::IRI ( ?DZ( || ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "x+" } .
http://invalid ++ NEList<xsd:positiveInteger>xsd::doubleColon 123    xsd:integer ,   :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date)  } .
://noScheme [ xsd:date ?hS*u , , invalid ] :noPrefix :: { zipMin |  <unclosedIRI ( ++ ( invalid ) , ++ ++ ( ?var 1 , none ,, ) ) ) } .
"string" [  rdf:XMLLiteral  ] :: { ottr:Triple(badPrefix:string ottr:Footballer ) 
ex:Invalid Space [ ?! "string" = invalid^^type ] { :noPrefix(?JC, ?m) , } .
http://example.com/:Template2 [ ] :: { ottr:Triple(?3!, ex:Template1, _:b1) , o-rdf:Type(?v, "malformed"^^bad:datatype) ) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { badPrefix:Triple 123 } .
ottr:IRI [ ?? 123 = invalid^^type , ] "unclosed :: BASE .
<unclosedIRI :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var "string" ?lm , ,  @@  ( ?var 1 ++ (  ) , ++ ++ ?b cross |  ) :: {  } .
ex: [ xsd::doubleColon ] @@ invalid |  http://invalid ( (  ) ) ^^ List ) , @@ zipMax |  ex:Invalid Space (  ) :: { ex::doubleColon(:noPrefix, 1..2) o-rdf:Type(_:blank, xsd:invalidType) } .
://noScheme [ ] :: { ottr: } .
bad::IRI [ zipMin |  NEList<<LUB<xsd:byte>>>:noType  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ || ex:Invalid Space ( _:blank ,, ) ( :: { ottr:Triple(?', :Footballer, ?1) ) } .
ottr:Template1 [ ?!! xsd:token ] :: ( ottr:Triple(?t bad::IRI false) , o-rdf:Type(?U, 23.14.15) , ) .
foot:Type [ ++ ++ badPrefix:string "string" owl:ObjectProperty  , ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ,
owl:Template2 [  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ! LUB<owl:NamedIndividual>invalid @@ ex: (  ) , @@ :noPrefix ++ _:b1 , (  ) ) ^^ ottr: :: { zipMax |  <unclosedIRI ( ( invalid term , ?N) ) ,, ) } .
ex::doubleColon [ List<List<wrong List<owl:Class>>> ?m , ] LUB :: { o-rdf:Type(bad::IRI, 6+) ) } .
://noScheme [ ?var @@ "unclosed :: { ottr:Triple(?< ottr:Template1 xsd::doubleColon) ex:Invalid Space(_:blank, ?-) , } .
http://invalid :: { ottr:Triple(?3, , "";+"") , List } .
123 [ ?!! xsd:invalidType  ++ xsd:integer , ,  ] @  http://invalid (  ) :: { ottr:Triple(?D o-rdf:Footballer none) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
:Annotation [ ?! 123  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ http://example.com/:Invalid Space ?. ) :: ( o-rdf:Type(?ISU, "invalid"^^http://invalid) ; ) .
ottr:IRI [ zipMin |  xsd:boolean "string" ,   List<<xsd:float>>LUB ?|1 = "d*fs*" ] @@ http://invalid ex:Invalid Space :: {  } .
?var [ List<xsd:unsignedByte List> ?-  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
xsd:Template2 :: { o-rdf:Type(?', ?V) , } .
bad::IRI [ ] :: { ottr:Triple(_:blank badPrefix:Type "string") ://noScheme(xsd::doubleColon, 23.14.15) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?: ) :: { ottr:Triple(?YDlC, :noPrefix, "malformed"^^bad:datatype) ( } .
 ?? xsd:invalidType  , , ottr: @@ badPrefix:string :: { cross |  <unclosedIRI (  ) 
ex::doubleColon [ xsd:date 123 , ] { (?6, none) , "o+" } .
123 [  xsd:NMTOKEN , , ++ ++ owl:ObjectProperty ! xsd:gYear , ,  ] "unclosed : { <unclosedIRI(_:blank, "2023-01-01"^^xsd:date) ) } ...
ottr:IRI [ ] :: { ottr:Triple(?9 http://example.com/:Footballer "unclosed) , } .
123  @ <unclosedIRI "c*" :: { ottr:Triple(_:blank, ex:, ?var) o-rdf:Type(, ?|s) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template2 [ NEList<xsd:long>xsd:invalidType ?/Dq , ] @@ wrong ://noScheme ( _:blank ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI :: { ex:Invalid Space(xsd::doubleColon, owl:Annotation) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross http://invalid ( ++ ++ invalid term , (  ,, ) ( none ) ) ^^ :noType invalid |  ) ) :: { List } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" (  ) } .
ex::doubleColon [   xsd:byte , ?? 123 = "string" , , "h+" ]  :: { ex:(?um, _:b1) ; } ..
badPrefix:Type [ ?! badPrefix:string ?1]J ] :: {  } (
ottr:IRI [ ! xsd:token "string"   @@ ottr:IRI  , @@ 123 (  ) :: ( ottr:Triple(_:blank, ex:Invalid Space, 23.14.15) , ) .
ottr:IRI [ NEList<xsd:integer>:noType "unclosed , ] @@ ex:Template1 ( ?V :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:Type [  xsd:language ?> = ( ( owl:Annotation ,, )  "string" ?^ ] 123 :: { ottr:Triple(?3 :noPrefix ?wF) , } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
bad::IRI   xsd:gYear "string" = "malformed"^^bad:datatype , ,  @@ ex:Invalid Space  , @@ ex: (  ) :: { wrong ex::doubleColon (  ) } .
http://invalid [ <unclosedIRI zipMax |  @@ cross |   ( ++ (  , _:b2 ,, ) ,, ) :: { o-rdf:Type(badPrefix:string, ""_+"") , ottr:Triple(?j, ottr:Invalid Space, ottr:) ex:Invalid Space(_:blank, "invalid"^^://noScheme) } .
ex:Template2 [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] <: { ex::doubleColon(?58, 1..2) , } .
foot:Footballer :: (  ) .
o-rdf:Template1 [  ?? ,  ] @@  ?var ( List ) @@ invalid |  123 (  ) :: BASE
:noPrefix ?! owl:Class ?! = "malformed"^^bad:datatype , , ? List<<xsd:double>>:noType bad::IRI @@ ?var :: BASE .
o-rdf:Template2 [ ] :: { ottr:Triple(_:blank, ://noScheme, LUB) , ottr:Triple("@+" owl:Type ""unclosed") } .
ottr:IRI :: { ottr: 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ List<http://invalid> ?OQ , ] badPrefix:string :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?7?, ?jn) ) } .
ex::doubleColon [  ] || @@  ex:Invalid Space (  ) :: { ex:(?[M, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ^: { "string" ( invalid term ) , _:blank } 
 [ xsd:language  , xsd:normalizedString invalid ] { o-rdf:Type(?_d4{zH, none) , } .
ottr:Template1 [ cross |  rdf:HTML 123 , @ http://example.com/:Invalid Space ( ++ "malformed"^^bad:datatype ,, ) :: { o-rdf:Type(?;U, invalid) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ "string" _:blank invalid |  :: { o-rdf:Type(123, :noPrefix) ottr:Triple(_:blank, ex::doubleColon, _:b2) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] `: {  } ...
ottr:Annotation :: BASE .
 [ ! xsd::doubleColon "string" ] :: { ex:Invalid Space(?A8, ?4M) } .
://noScheme LUB<<List<xsd:anyURI>>>invalid ?b]e) , @@ cross ex:Template1 ( ?C ) :: { ottr:Triple(LUB o-rdf:Triple _:b1) , <unclosedIRI("j*`W*", "2023-01-01"^^xsd:date) , } .
http://invalid [ ?! xsd:negativeInteger ottr:foot:clubHistory ?RdYq ,  ] xsd:invalidType :: { badPrefix:string } .
bad::IRI [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } )
?var [  123 = 23.14.15 , ,  @@ cross |  owl:Invalid Space ( ++ (  ) ) , ( 5+ ,, ) ^^ :noType "v" ) , @@ zipMax |  http://example.com/:Footballer ( ++ ++  ,, ) :: { ex: ( ( , ) ) }
foot:Template2 xsd:dayTimeDuration "w+" , @@ "m*" :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex:Invalid Space(<unclosedIRI, "invalid"^^://noScheme) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ?! ?<* = invalid^^type ,  ] LUB :: { zipMax |  ottr:IRI ( "string" ) } (
 [ ] :: BASE .
badPrefix:Annotation ++ t-pnd:Punned-Class-ObjectProperty "string" = "value"^^invalid , @@ ex: ( ++ ++ (  ) invalid term ,, ) , @@ ex::doubleColon _:blank :: { ottr:Triple(_:blank bad::IRI ??) , } .
http://invalid [ "f+" ] @@ cross ?var (  ) , :: { ottr:Triple(?A, http://example.com/:Template1, xsd::doubleColon) } .
:noPrefix [ List<List<LUB<NEList<xsd:nonPositiveInteger>invalid>>> ?5b foot:ex:Template2 ?R ] :: {  } .
ottr:Triple [ xsd:token List , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMin |  @@ cross |  foot:Footballer ( ( 123 ,, ) ) ^^ :noType , ++ :Invalid Space invalid |  ) :: { o-rdf:Type(?}, none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Type :: ( o-rdf:Type(?K, _:b2) "V" ) .
o-rdf:Footballer [ ?? xsd:byte , ] { ottr:Triple(?YNsiP, owl:Type, false) ; } .
?var  ?2  @@ ottr:IRI (  ) @@ ://noScheme  :: { invalid |  :noPrefix ( _:blank , _:blank  ) } .
o-rdf:Type :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ zipMin |  List<<xsd:short>>invalid ?8I , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd:invalidType :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
 [ ?! xsd:gYear  = ex: zipMax |  @@ wrong ex:Invalid Space ( ( badPrefix:Footballer ) ^^ ottr: ,, ) :: { ottr:Triple("u+" foot:Annotation "string") , } .
bad::IRI [ ] :: {  } .
ex::doubleColon [ List ] :: { o-rdf:Type(?YD7, ?M;) ) } .
http://invalid [ xsd:gYearMonth badPrefix:string , ] @  123 ( "$*" ) :: { http://invalid(_:blank, 23.14.15) , ottr:Triple(?z, ://noScheme, none) o-rdf:Type(?J, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
http://example.com/:Template2 [ ? xsd:base64Binary "string" = "unclosed , ?!! xsd:time ,  @@ cross |  123 (  ) ; :: {  
ottr:IRI [ ?var cross @@ zipMax |  "string" (  ) :: { o-rdf:Type(_:blank, "unclosed) , ottr:Triple(_:blank ex:Invalid Space _:b1) } .
:Annotation [ xsd:NMTOKEN 123 , ,  ] @@ :noPrefix  :: { ottr:Triple(_:blank, ex::doubleColon, "2023-01-01"^^xsd:date) bad::IRI(_:blank, none) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ++ List ?n , ] invalid :: BASE .
://noScheme [ ! List<<ottr:Bot>>LUB "string" = "malformed"^^bad:datatype , xsd:xsd:Footballer ?e'"Zs{ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI } .
http://invalid [ ] :: BASE
 :: { ("E*Y.*", ?TF) , 
123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType : {  } ...
http://example.com/:Invalid Space [    = ?Kv zipMin |  rdf:HTML  xsd:double ottr: , ,  @@ || ottr:Triple ( ++ ++ ( (  ) ) ) ,, ) :: ( ex:Template2 ( _:blank invalid |  ) ) .
://noScheme [ LUB<<List<xsd:short>>>:noType "j*" , ++ xsd:unsignedByte , @@ "string"  :: BASE .
:Footballer xsd:foaf:name ?Sr @@ ex:Template1 ( ?B :: { ottr:Triple(?var :noPrefix true) ; } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI :: { zipMax |  ex::doubleColon ( ++ ( ?var 1 , ?08" ) ) ,  ) } .
bad::IRI [ ++ ++ ottr:Bot "string" = "value"^^invalid List<xsd:invalidType> ?EW , , List ] ex: :: { http://invalid(?s, ?N) ,  } .
 [  ]  :: { ottr:Triple(_:blank, xsd:Template1, invalid) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?@, "unclosed) ex:Invalid Space(?-, ""p"") , } .
123 [ ] :: ( ottr: ) .
ottr:Triple [ wrong rdf:HTML 123 ? xsd::doubleColon  , , xsd:base64Binary ?2mOY , , ?? xsd:gYearMonth ?& = invalid^^type ! ?D = ?l , ,   ?=  , ] :: { ex::doubleColon(?q, -6+) ) }
<unclosedIRI [ xsd:invalidType ] "string" :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr:IRI  @@ :noPrefix ( ++ ++ ( , )  ) :: ( cross |  123 ( -8+ ,, ) ) .
ex::doubleColon [ ++ xsd:boolean   :: { o-rdf:Type(_:blank, _:b1) , ottr:Triple(?1 ex:Invalid Space 23.14.15) ; } .
bad::IRI :: { ottr:Triple("E*~O*", o-rdf:Annotation, ottr:) } .
http://invalid [ invalid |  NEList<<LUB<xsd:gYear>>>List ?>T/- , ] @@ :noType :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ] :: { ://noScheme(?h, ?2) ex:(?J, false) , } ,
foot:Template1 [ LUB<List<owl:NamedIndividual>> ?s`RB , , xsd:token "G*" ] { badPrefix:string } .
badPrefix:Footballer [ ++ ++ 123 =  ,  rdfs:Datatype "string"  ? xsd:string 123 = invalid^^type , , ?! xsd:base64Binary ,  ] ; { o-rdf:Type(?a, http://example.com/:Template2) ) } .
?var [ xsd:boolean 123 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Template1 ( ?5D :: { ex:Triple  }
:noPrefix [ List @@ cross |  ottr:IRI ( "string" ) ) :: { o-rdf:Type("s*", _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 :: BASE .
://noScheme [ ] :: { ottr:Triple(_:blank ottr:Annotation <unclosedIRI) } .
ex: [  List<xsd:long>:noType , , ? ?m =  , ] ottr: :: {  } .
ex::doubleColon [  ] :: { badPrefix:string } .
ex:Invalid Space [ owl:Class invalid ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid invalid |  xsd:duration ?X@ , ?? owl:rational "string" = invalid ,  : { bad::IRI(?oU, ?h) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ://noScheme ] :: BASE .
:noPrefix :: ( ottr:Triple(_:blank :Template1 ?EO) ( ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  "string" ( "r" ) , @@ http://invalid ++ ( , ) ,, :: { o-rdf:Type(xsd:invalidType, ?var) } .
 [ 123 ?~ , ++ xsd:unsignedByte , ]  :: { ex:Invalid Space(?!, false) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
bad::IRI [ ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon ( ?HM ) } .
<unclosedIRI [ ?? NEList<xsd:date>:noType 123  ] LUB :: {  } ;
ex: [  @@ zipMax |  "string" (  ) ) =: { ottr:Triple(_:blank, bad::IRI, _:b1) , ottr:Triple(_:blank, <unclosedIRI, "2023-01-01"^^xsd:date) , } 
o-rdf:Invalid Space [  ?N , ,  xsd:byte  ] @ cross ottr:IRI ( _:blank , _:blank  ) :: { ://noScheme(?/, 1..2) , }
ottr:IRI [ ] :: { o-rdf:Type(xsd::doubleColon, owl:Invalid Space) ,  } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ?var 1 ,  ?Q ,   123 = 23.14.15 , ,  ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [ ! xsd:unsignedInt ?e< = "unclosed , ] "\*9|*" :: { :noPrefix(_:blank, 123) } .
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ottr: :: { ottr:Triple(?FW%M-p ex:Invalid Space ?Y?) bad::IRI ++ ++ (  ,, ) ) ,, } .
ex::doubleColon ? xsd:invalidType "string" @@ zipMin |  ex: ( ++ "malformed"^^bad:datatype  ) ) :: { ottr:Triple(?", foot:Triple, "2023-01-01"^^xsd:date) , } .
://noScheme [  ] ; { http://invalid(?8, ""X*"") ( } 
"string" :: {  
bad::IRI [ ?! xsd:long  ] @@ bad::IRI (  ) @@ ottr:IRI  :: { ottr:Triple(?_r ://noScheme none) , }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ] :: BASE .
"string" [  @@ ex: :: { ottr:Triple(_:blank, <unclosedIRI, ?k) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
bad::IRI :: {  } .
ex:Template2 [ badPrefix:string ] @@ ex:Invalid Space "invalid"^^ ^^  ,, :: { ottr:Triple(?z= owl:Invalid Space -6+) o-rdf:Type(?var, "M+") ( } .
http://invalid [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?:, 1..2) , } .
://noScheme [ 123 ?/ , , invalid |  xsd:long  , ?!! 123  ] xsd:invalidType :: { :noPrefix ( ?) ,  ) } .
xsd:Annotation ! List<<t-pnd:Punned-Class-ObjectProperty>>List "string" = _:b2 , cross |  @@ zipMin |  ottr:Type ( ++ (  ) ) ) :: { LUB } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?ft, http://example.com/:Triple, 23.14.15) 
o-rdf:Template1 [ xsd:hexBinary "unclosed ++ ++ owl:AnnotationProperty  = "malformed"^^bad:datatype , ?! rdfs:Datatype ,  ] @@ foot:Footballer ( xsd::doubleColon ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ?var ( ++ ++ (  ) ) } .
foot:Annotation :: BASE .
ottr:IRI [ "V*" ]  :: BASE
 [ ] :: { o-rdf:Type(:noPrefix, "invalid"^^<unclosedIRI) } .
://noScheme ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex: _:blank ,, :: {  } .
ex:Invalid Space [  ]  :: { ottr:Triple(?`9 owl:Footballer ?p) , ex::doubleColon(_:blank, 123) ) } .
bad::IRI [ xsd:dateTime List , , ++ 123 = "unclosed   LUB<<List<xsd:positiveInteger>>>:noType ] :: { ottr: } .
"string" [ foot:foaf:name ?B , LUB<xsd:decimal> ?- , @@ zipMax |  o-rdf:Type ( LUB ) , :: { ottr:Triple(?e, http://invalid, "malformed"^^bad:datatype) , } ;
ottr:IRI [ ?!! rdf:XMLLiteral  = "value"^^invalid , @@ ottr:IRI (  ) @@ <unclosedIRI (  ) :: { ottr:Triple(?a ottr:Triple _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template2 xsd:NMTOKEN  , ! :noType 123 , invalid |  @@  "string" ( ++ ( , ) _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  ] @@ ottr:IRI "invalid"^^ex:Invalid Space ^^ xsd::doubleColon , @@ http://invalid ( ++ ++ (  ) zipMax |  ) : { ottr:Triple(_:blank http://example.com/:Template1 "x") , } 
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
ex: :: { ottr:Triple(bad::IRI, , 23.14.15)  } .
123 [ xsd:invalidType ] ?var :: { ://noScheme(?D!u, ?z) , zipMin |  ?var ( invalid ) } .
ex::doubleColon [ ] :: { o-rdf:Type(?i2)0F/, _:b2) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?~N7, ottr:Annotation, false) ) .
badPrefix:Type [ cross LUB<xsd:integer>LUB ?Z ] :: { "_*" }
xsd:Triple [  xsd:dayTimeDuration , ,  ] @@ cross |  http://invalid (  ) ( :: { <unclosedIRI(_:blank, _:b1) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ++ 123 = "malformed"^^bad:datatype , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ xsd:invalidType :: BASE .
ex:Invalid Space [ ?!! owl:AnnotationProperty ?N8>  ] "&" :: { ottr:Triple(_:blank, ottr:Footballer, ?/) ) } .
http://example.com/:Template1 [ ? xsd:long , ++ ++ xsd::doubleColon  , ]  :: { ottr:Triple(_:blank :noPrefix none) 
?var :: { http://invalid  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
<unclosedIRI [  ] :: { o-rdf:Type(?TWt, 123) , } .
bad::IRI [ ] %: { ex::doubleColon } .
://noScheme [ NEList<xsd:negativeInteger>List "string" ottr: ] { ex:(:noType, "unclosed) (?C, 1..2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ! xsd:positiveInteger ?| = invalid^^type zipMin |  List<rdfs:Resource> ?u , @@ ex:Triple ( "%*r$*" ) ; :: { ottr:Triple(?) foot:Type "malformed"^^bad:datatype) , } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: {  } .
ottr:Type [   owl:real 123 = "unclosed ?!! NEList<xsd:integer>xsd:invalidType "string"  ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
"string" [  ] @@ ottr:IRI ++ ++ ( ?R , invalid term ) ) :: { ottr:Triple("q*", badPrefix:Annotation, 123) ottr:Triple(_:blank ex:Invalid Space ?:k) ; } .
 [  @@ invalid |  ex: (  ) @@ :noPrefix (  ) :: { ://noScheme(_:blank, _:b2) , o-rdf:Type(_:blank, "unclosed) } .
bad::IRI :: { invalid } .
?var [ rdf:HTML ex::doubleColon , ] xsd::doubleColon :: { <unclosedIRI(?NGbj, "invalid"^^ex::doubleColon) , 
o-rdf:Triple LUB @@ owl:Footballer ( ottr: ) : { cross |  foot:Template1 ( (  ) ,, ) } .
http://example.com/:Template2 ?var ?/_ , xsd:language  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?$, "malformed"^^bad:datatype) ( }
?var [ ] :: { ottr:Triple(?'#, :Template1, ?b) } )
o-rdf:Annotation [ ! xsd:Name   badPrefix:string ?d @ ex::doubleColon ++ false :: { ottr:IRI ( ( "string" ) ) ++ ++ ( , ) invalid |  ) } .
ex:  LUB<<List<xsd:dayTimeDuration>>>invalid 123 , @@ ex:Template1 ( ?D+I :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ List ] @@ zipMin |  ://noScheme ( _:blank ,, ) ; :: { ottr:Triple("X*"i*"  "2023-01-01"^^xsd:date) ( } .
http://invalid [ ?? xsd:anyURI 123 = ?%K , ,  xsd:int  = 23.14.15 ,  ] :noPrefix :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { bad::IRI(_:blank, 123) o-rdf:Type(?tyV~, "invalid"^^ex:) , <unclosedIRI(?Y, ""7+"") , } .
foot:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ottr:Footballer [ ottr:Bot ?w , , ?   ?var ?^ ,  ] { o-rdf:Type(_:blank, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 } .
http://example.com/:Triple  @@ ottr:IRI ( _:blank  ) ( :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
?var [ NEList<owl:AnnotationProperty> ?WqojS , ] "?+" :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , ottr:Triple(xsd:invalidType xsd:Type ?X) ) } .
://noScheme [ ?!! "string" = _:b2 , , ?! xsd:normalizedString ] @ invalid |   ( :noType ) :: { ex:(?K, bad::IRI) , } .
<unclosedIRI :: {  } .
http://invalid [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
ex:Invalid Space [ ++ List 123 ,  @@ badPrefix:string ; { :noPrefix abc.abc , _:blank zipMax |  } ..
"string"  @@  123 (  ) @@ ottr:IRI (  ) :: { ottr:Triple(_:blank, bad::IRI, 23.14.15)  }
bad::IRI [  ] :: { http://invalid(_:blank, ".+") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ "string" ?zo ?? ?s/  , 123 ] { owl:Template1 _:b1 ^^ xsd:invalidType  } .
ottr:IRI [ ?!! List<xsd:Name>  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ xsd:positiveInteger LUB , , zipMin |  List<xsd:double> ?+R5 , ] ottr: :: { ottr:Triple(ex:Invalid Space, ex:, -0+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Xvc, ?2) , } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex:Template1 ( ?` :: {  } .
:noPrefix   rdfs:Datatype   , ,  xsd:nonNegativeInteger "string"  @@ ex::doubleColon (  ) @@ ottr:IRI (  ) :: { o-rdf:Type(_:blank, "malformed"^^bad:datatype) ( } .
badPrefix:Annotation :: { ottr:Triple(?}$u xsd:Template2 1..2) badPrefix:string 
ex:Type [ ] :: ( http://invalid(?"f, 23.14.15) ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ owl:real ?1; , ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ( ++ ++ ?var 1 ,, ) ) :: BASE .
foot:Invalid Space :: { http://invalid(?4, ?var) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { invalid |  bad::IRI ( ottr: ) } .
:noPrefix [ cross List<<xsd:NMTOKEN>>badPrefix:string "string" ] :: { ottr:Triple(_:blank o-rdf:Template2 23.14.15) ( } .
<unclosedIRI [ NEList<xsd::doubleColon> ?hi- , , xsd:dayTimeDuration "unclosed ?!! 123  ,  ]  :: {  } .
ex: [ List ]  :: { o-rdf:Type(LUB, ?B)  } .
://noScheme [ ] :: { ottr:Triple(?ys, ex::doubleColon, "2023-01-01"^^xsd:date) , ottr:Triple(?> ottr:Template1 ""U*"") , 
123 [ ++ rdf:XMLLiteral @@ "d+" :: ( ex::doubleColon(?<`, "invalid"^^) , ) .
ottr:IRI [  ] <unclosedIRI :: { ex::doubleColon(_:blank, none) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Invalid Space :: BASE .
"string" [  xsd:hexBinary ++ rdfs:Resource ,  ] :: { ottr:Triple(_:blank  23.14.15) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date)  
http://invalid [  ?K9 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName zipMax |  @@ :noPrefix  :: { ottr:Triple("=*T4*", o-rdf:Footballer, "unclosed) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ( invalid term ( ( "invalid"^^bad::IRI , ?] ) ) ,, ) ^^ List ,, ) } .
123 [ ] :: { ex:(?A, ?iUO) , }
?var xsd::doubleColon @ cross |  ex:Invalid Space ( ?var ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ;
owl:Type [ invalid |  LUB<xsd:dayTimeDuration>LUB  , ]  :: BASE
http://example.com/:Annotation [ xsd:base64Binary 123 ] { :noType } .
foot:Type :: { ottr:Triple(_:blank :Footballer ?F) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( http://invalid("&", xsd:invalidType) ; ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ++ List<<xsd:int>>badPrefix:string , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
ottr:IRI [ ] :: { ottr:Triple(?[E, , true) , o-rdf:Type(ex:Invalid Space, abc) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  ] :: {  } .
://noScheme [   xsd:gDay  = invalid^^type ] 123 :: BASE
bad::IRI  xsd:float ?ft = List , ottr: @ <unclosedIRI ( _:blank ) :: {  } ...
ex: [ owl:rational "unclosed , @@ "string"  , @@  123 ( invalid term ^^ xsd::doubleColon ,, ) :: { zipMin |  :noPrefix ( :noType ) 
badPrefix:Template2 ?! xsd:base64Binary ?!! xsd:gMonth ++ ++ xsd:unsignedLong  @@ invalid |  ?var (  ) :: { ex:(?GB, "invalid"^^ex:Invalid Space) } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ottr:IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?var ex::doubleColon ?w*) , } .
123 none:foaf:name ?P   owl:real , invalid @@ http://invalid (  ) ) :: { o-rdf:Type(?!, true) } .
ex: [  LUB<xsd:boolean>ottr:  ]  :: { <unclosedIRI "unclosed zipMin |  } .
:noPrefix [  xsd:gMonthDay ?rH = 23.14.15 , @@ ://noScheme ?: ) :: {  } .
bad::IRI [  ] :: { ottr:Triple(_:blank, http://example.com/:Template1, "`*") ; } .
ex:Invalid Space [ ? LUB "string" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE
"string" [ xsd:NCName xsd:invalidType , xsd:unsignedInt 123 , ] { ://noScheme(?-, _:b2) ottr:Triple(_:blank, <unclosedIRI, "malformed"^^bad:datatype) ,  } .
http://invalid  @@ zipMax |  owl:Annotation ( ++ invalid term ,, ) :: { ex:(?p, "unclosed) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [  ] @@  (  ) @@ ottr:IRI  :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank ex:Invalid Space 23.14.15) ; 
<unclosedIRI [ ++ NEList<xsd:gDay>:noType , ] ://noScheme :: BASE .
:noPrefix [ ] :: { ottr:Triple(xsd:invalidType, xsd:Template2, ?wX) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 } .
ex::doubleColon :: { bad::IRI(?()UKJ, none)  } .
?var [  xsd:negativeInteger "string" ++ ++ ?% = invalid^^type , , ! owl:rational  = 123 @@ cross ex:Template1 ( ?-F ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [  ] { cross |  ex:Invalid Space ( :Triple zipMin |  ) } .
http://example.com/:Template1 [ ( ?[ ) , (  ) ) ,, ?H* , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( ottr:Triple(?:$ o-rdf:Type "unclosed) ( ) .
123 [ cross |  List<<t-pnd:Punned-Class-ObjectProperty>>ottr: ?r , ,   = invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?var :: BASE .
ex::doubleColon [ ] :: { ",+" } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] @ xsd:Triple ( 123 , ++ ( ( -9+ ,, ) ) ) invalid |  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(:noPrefix, ex:Invalid Space, ex:) o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) , } .
://noScheme :: { ottr:Triple(?HB o-rdf:Type ?i) ,  } .
<unclosedIRI [ ++ ++ List "string" , ! xsd:normalizedString @@ zipMax |  "string" (  ) , @@ bad::IRI  :: { http://invalid(?F@V, foot:Invalid Space) ( } .
http://example.com/:Annotation [  ] { (?hG(, _:b2) } .
owl:Template2 [ List<badPrefix:string> ?dj-k3Z5%K4 , ] :: {  :Template1 ( invalid term ^^ LUB ) }
bad::IRI ?!! rdf:XMLLiteral 123 = "malformed"^^bad:datatype , @@ zipMin |  ottr:IRI (  ) @@ cross |  "string" (  ) :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
owl:Type [ ] :: BASE .
ex:Invalid Space [ ?? NEList<owl:rational>invalid ] :noType :: { o-rdf:Type(_:blank, ?Fm) ottr:Triple(?var, xsd:Triple, true) , } .
ottr:IRI  @@ 123  ; :: ( ottr:Triple(?y ://noScheme ".*") ,  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon :: { ex:(?h, 1..2) } .
<unclosedIRI [ xsd:Name   owl:NamedIndividual "string" = ""I"" , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ex:Template1 ( ?0 ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ?!! ottr:Bot ?N = "malformed"^^bad:datatype , ] :: { cross bad::IRI ( List ) } .
"string" [ ! 123  ,  ] { :noPrefix(?s, "malformed"^^bad:datatype) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
"string" [  ?a , owl:Class  ,  @ ottr:IRI (  ) : { xsd::doubleColon } 
xsd:Template2 [ ottr:foot:clubHistory ?6 ] @@ wrong ex::doubleColon (  ) |: { ottr:Triple(_:blank, foot:Footballer, ?I) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 [ ] :: { o-rdf:Type(<unclosedIRI, invalid)  } .
http://invalid List<rdf:XMLLiteral>LUB :noType ,   xsd:decimal , ,   @@   :: { cross ottr:IRI ( ?"g , ++ ++ "malformed"^^bad:datatype zipMax |  ) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ :noPrefix ( ++ ( ( , ) ,, ) ) :: { ottr:Triple(?l bad::IRI "|+") } .
ex: [ invalid ] :: { ?var } .
"string" :: { ://noScheme(?SYv, none) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } (
badPrefix:Template1 [ cross |  ottr:Bot  , ] xsd:invalidType :: { ottr:Triple(?_, :Triple, _:b2) ; }
owl:Type [ ++ ++ ottr: "string" List<badPrefix:string> ?x , , ? 123 = "malformed"^^bad:datatype ,  :: ( ottr:Triple(??, ottr:Annotation, abc) ) ) .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName cross |  @@ wrong :Annotation ( _:blank  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ? ?v6l:  , "string" ] @@ ?var List :: ( ottr:Triple(_:blank :noPrefix ?2h) , ) .
ex:Invalid Space [ ] :: BASE .
bad::IRI   owl:Class  = "value"^^invalid , @@ ://noScheme ( invalid term ^^ ottr: ,  ) @@  http://invalid (  ) :: { o-rdf:Type(?{, "i+")  } .
ex::doubleColon :: { <unclosedIRI(ex:, true) , ottr:Triple(?G, foot:Footballer, _:b2) } .
123 [  ?!Mb  ] { ottr:Triple(?`Uo, ex::doubleColon, 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
o-rdf:Triple [ ?! List<<xsd:float>>invalid "string" = 123 , , xsd:gYearMonth xsd:invalidType ] xsd::doubleColon :: { zipMin |  http://example.com/:Invalid Space ( ( ""<"" ,, ) ) invalid |  ) 
xsd:Template2 [ xsd: ?P3k1 xsd:duration ?7XZ , zipMax |  rdfs:Datatype ?@9 , ] : { :noPrefix(?tLB~, _:b1) ( } ..
ottr:IRI [  ] :: { (?AO, :noPrefix) , "string" } (
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ottr: ] @@ :noType :: { ottr:Triple("T" ex: ""*+"") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space [ ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation [ ? NEList<xsd:gYear>List "string" = ( (  ) ,   , , ++ invalid ?"   xsd:NCName @@ invalid |  bad::IRI ( ++ ++ ( , )  ) ) :: {  } .
<unclosedIRI [ rdfs:Literal 123 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] xsd::doubleColon :: { o-rdf:Type(_:blank, ?B) , } .
ex::doubleColon zipMin |  xsd:time  ,  &: { ottr:Triple(_:blank, ://noScheme, _:b2) http://invalid(_:blank, "malformed"^^bad:datatype) , } 
?var :: BASE
ex:Triple [ ?? ?lFSM = "unclosed , , xsd:dayTimeDuration "unclosed ,  @@ ottr:Template2 ( ++ ?5 zipMax |  ) :: { owl:Template1 xsd:invalidType 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ottr:IRI  @@ invalid |  ://noScheme ( ++ ++ abc.9+ ) , @@ ?var ++ invalid term zipMin |  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Invalid Space [ "string" ] { ottr:Triple(_:blank xsd:Template1 "unclosed) , } .
ex: :: { o-rdf:Type(?l, "2023-01-01"^^xsd:date) , } .
<unclosedIRI [ ] :: { ottr:Triple(ex::doubleColon, bad::IRI, ?Tz) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ http://invalid ?< ) :: { ex:Invalid Space(xsd:invalidType, "malformed"^^bad:datatype) } .
123 [ ! List<<xsd:language>>LUB , , NEList<List<LUB<xsd:dateTimeStamp>>> ?7D|v ,  xsd:negativeInteger  ] ottr: :: { badPrefix:string } .
ottr:Footballer [ ?var ?y2=% , @@ cross |  http://example.com/:Type (  ) ( :: { :noPrefix ( _:blank , ( ( ?b ,, ) ) ,  ) ^^ invalid ,, ) }
o-rdf:Template2 [ ?? xsd:unsignedInt xsd:token 123  ] :: { (_:blank, _:b2) o-rdf:Type(_:blank, _:b1) ) } ;
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  @@ badPrefix:Template1 (  ) @@ zipMax |  "string" ( ++ "malformed"^^bad:datatype ,, ) :: { o-rdf:Type(_:blank, "2023-01-01"^^xsd:date) ) } .
ottr:IRI [  ] ?var :: BASE .
:noPrefix ottr:foot:clubHistory ?s~ , , ?! ?n = ://noScheme , @@  ( 123 ) , :: {  
ex:Invalid Space [  ] @@  http://invalid (  ) , @@ ex:  :: { ottr:Triple(_:blank <unclosedIRI 23.14.15)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: { ottr:Triple("i*bz*", ex:Template2, ?yGv,) , } .
bad::IRI :: { ottr: } .
foot:Invalid Space [ NEList<owl:ObjectProperty>invalid  LUB<badPrefix:string> ?Q ] :: { ex:Invalid Space(?H, :noType) } (
 [ ?!! rdfs:Resource "string" = "value"^^invalid ,  ] @@ LUB ; { cross |  ottr:Footballer ( _:blank  ) } .
"string"  zipMin |  @@ ottr:IRI ( ++ ?~/ ++ ++ 3+ || ) :: { <unclosedIRI ( ( 23.14.15 ,, ) ) , "string"^^^xsd:string ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 [ NEList<<LUB<xsd:dateTimeStamp>>>ottr: LUB , ?? owl:real http://invalid ] 123 :: BASE .
ex:Invalid Space :: { ottr:Triple("?*" ex::doubleColon "invalid"^^:noPrefix) , } ;
 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ://noScheme ( xsd::doubleColon ) @@ zipMax |  bad::IRI ( _:blank ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ] :: { o-rdf:Type(?\L, ?i) ) } .
?var [ ?!! xsd:gMonth , ,   xsd:token , ] @@ cross |  ?var (  ) ( :: { ottr:Triple(_:blank, ex:, xsd:invalidType) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: ( http://invalid(?., _:b2) ) .
o-rdf:Triple [ foot:invalid ?f ] : { badPrefix:string } ..
xsd:Annotation [ ? invalid 123 , ] { ottr:Triple(?<C :Invalid Space "malformed"^^bad:datatype) ottr:Triple(?nbt owl:Type none) , } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?I ex:Invalid Space "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 
:Invalid Space :: BASE .
ex: [ List<xsd:base64Binary>LUB  , , "?*Du*" ] @@ ottr:IRI  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ++ xsd:normalizedString , ++ ++ owl:real @@ http://invalid  , @@ invalid |  <unclosedIRI (  ) :: { ://noScheme ( ++ (  ) , _:blank  ) } .
ex::doubleColon [ owl:Class badPrefix:string , @@ ex:Template1 ( ?FH8_ :: { (xsd::doubleColon, bad::IRI) , } .
"string" [  ]  ): {  } ..
owl:Footballer [ ( , ) , ?j} ,, ?E ottr:foaf:name ?= , ] { ottr:Triple(_:blank, http://example.com/:Template2, ?,V) , } .
o-rdf:Template1 [ ] :: { o-rdf:Type(?R, -1+) ottr:Triple(?z, xsd:Type, "malformed"^^bad:datatype) , o-rdf:Type(?x/, _:b1) ( }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ++ ++ 123 = ?UQ  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ ] :: { ottr:IRI ++ ++ (  ) ,  ^^ List ,, }
"string"  @@ ex::doubleColon ( ++ _:b2 ) , @@  <unclosedIRI ( 123 ) :: BASE .
ex:Invalid Space [ NEList<<LUB<owl:AnnotationProperty>>>ottr: "2*" , @@ zipMax |  :noPrefix ( _:blank  ) , :: { ex: } .
://noScheme [ ?!! xsd:byte "string" = "value"^^invalid , , ? badPrefix:string ?i , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ xsd::doubleColon :: {  } .
bad::IRI :: { ottr:Triple(?r, badPrefix:Template1, true) , (_:blank, ?H) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type("p*mo*", "unclosed) ottr:Triple(?u bad::IRI ""j+"") ; 
?var [  xsd:integer ] LUB ,: { ottr:Triple(?E_, foot:Annotation, "invalid"^^<unclosedIRI) , } .
ottr:IRI [ ?var ?9 , ] @@ ?var  @@ zipMin |  ?var (  ) :: ( ex:Invalid Space(?:, "malformed"^^bad:datatype) ) ) .
ottr:Annotation LUB<xsd:decimal>LUB ?t/ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI ?" ) :: { ottr:IRI ( "string"^^^xsd:string ^^  ++ "unclosed ,, ) } .
"string" :: BASE .
:noPrefix [ invalid |  xsd:nonNegativeInteger "string" , "3*" ] :: { ://noScheme(_:blank, badPrefix:string) ottr:Triple( o-rdf:Type "malformed"^^bad:datatype) , ottr:Triple(?l, http://invalid, ?~9) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ! xsd::doubleColon  ] ?var :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?! xsd:int 123 = 123 , ] @ bad::IRI  :: { o-rdf:Type(?;a, true) } .
123 [  @@  xsd:Template2 ( ++ ++ ?| , _:blank ) @@ || badPrefix:Template1 ( ( (  ) ,, ) ) zipMin |  ) :: ( ex::doubleColon(?(, 23.14.15) , ) .
ex:Triple [ owl:DatatypeProperty "?*cm*" ?var ?bQ   xsd:byte ,  ] { invalid } .
:Invalid Space [ ] :: { ottr:Triple(?y}, http://example.com/:Footballer, -1+) ( 
?var [  ] :: { ottr:Triple("o*" http://invalid ""<*6D*"") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme :: BASE .
ottr:IRI [ ?!! LUB 123 ,  ] "string" :: { o-rdf:Template2 ++ ++ ?$? _:blank , _:blank invalid |  } (
 [ ! xsd:normalizedString "string" = 23.14.15 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ wrong ex::doubleColon ( ++ ( "malformed"^^bad:datatype ,, ) ) ,, ) :: { o-rdf:Type(_:blank, badPrefix:string) , ex:Invalid Space } .
bad::IRI [ ] :: { ex:(?Jn, ?\=/_#E) , } .
:noPrefix List @ zipMin |  <unclosedIRI (  ) :: { ottr:Triple(?8, xsd:Triple, 1..2) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ex::doubleColon(?T, -7+) ) }
123 [ ++ LUB<xsd:gMonth>:noType  = "malformed"^^bad:datatype  :: {  
ex:Type cross |  xsd:boolean ?Fy xsd:foaf:name ?d , @@ xsd::doubleColon :: BASE
?var [ LUB<xsd:normalizedString>:noType 123 , ?!! xsd:anyURI  = "value"^^invalid ++ ?X = "P*}^*" ]  ;: { List } ..
ottr:IRI [ <unclosedIRI ] bad::IRI :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?4E', ex::doubleColon, "malformed"^^bad:datatype) , (, badPrefix:string) ottr:Triple(_:blank http://example.com/:Invalid Space ?u) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple [  @@ :noPrefix ?+ ) :: {  } .
://noScheme :: { o-rdf:Type(?\r9, _:b1) } .
ex: [ ] :: ( o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) ) .
ex:Invalid Space [ ++ ++ xsd:NCName "string"  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { http://invalid(?MF, "invalid"^^ex:) ( 
"string" List<?! xsd::doubleColon 123> ?K=L; , @@ || owl:Type ( ( ( , ) ,, ) ) ++ ++ xsd:Template2 ,, ) ) :: { :Footballer _:blank cross |  } ;
badPrefix:Template1 [ "string" ?b , ,   xsd:decimal , ,  @@ zipMax |  ottr:IRI (  ) @@ 123  :: { ex:Annotation ( "unclosed ) }
ottr:IRI [ ?!! LUB<xsd:language>xsd:invalidType , ] ex: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [ :noType @@ cross o-rdf:Triple ( ++ ( :Type , ( "string" ) ,, ) ) invalid |  ) :: {  } .
?var [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ://noScheme ( ?var 1 ^^ xsd::doubleColon  ) } .
<unclosedIRI [  ] @@  _:blank ,, :: { :noPrefix(_:blank, ?&4) ottr:Triple("string", xsd:Annotation, ""*)(*") , } .
ex:Invalid Space :: { ottr:Triple(?0 bad::IRI _:b1) ,  } .
ex::doubleColon [ ] :: { o-rdf:Type(?8, "malformed"^^bad:datatype) } ,
123 zipMax |  xsd:double ?| @@ cross |  http://example.com/:Template2 ( badPrefix:string ) , @@  foot:Template1 ( ++ ++ invalid ) :: BASE
ottr:IRI ! xsd:yearMonthDuration 123 = "value"^^invalid  @@ "string" (  ) ) :: { ottr:Triple(?x3, owl:Invalid Space, "unclosed) ; 
ottr:IRI [ invalid |  xsd:gYear  ] xsd:invalidType :: ( ottr:Triple(_:blank, <unclosedIRI, none) , o-rdf:Type(_:blank, "malformed"^^bad:datatype) , ) .
"string" [ NEList<xsd:gMonth>ottr: ?4^ "." ] :: BASE .
ottr:Invalid Space [ ] :: { ://noScheme (  ) ) , _:blank ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ?!! owl:DatatypeProperty ,  123  , @@ :noPrefix ?e ) :: { (_:blank, "unclosed) ?var } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Q http://example.com/:Template2 ?6[/\nTS) } .
ex::doubleColon :: {  } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  badPrefix:Type (  ) , @@ 123 ( ++ ++ _:b1 ) :: { bad::IRI(http://invalid, badPrefix:string) ( } ,
xsd:Annotation [  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Footballer [ xsd:Name List , , ?? invalid "string" ++ xsd:unsignedShort , ] @ || foot:Triple (  ) :: BASE
:noPrefix none:foot:clubHistory ?<E 123 @ zipMax |  ottr:IRI (  ) :: BASE .
?var :: ( <unclosedIRI ) .
:Footballer [ ++ xsd:negativeInteger ] badPrefix:string :: { bad::IRI(_:blank, _:b1) ottr:Triple(_:blank, ex:, 23.14.15) ) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: {  } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(ottr:, "Y") } .
http://invalid [ ! owl:AnnotationProperty , , ? owl:NamedIndividual 123  ,  @@  ?var (  ) , @@ "string" (  ) :: {   } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?] badPrefix:Template1 ?J) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
ex::doubleColon [   LUB ?u , ] cross @@ zipMin |  http://example.com/:Type ( _:blank ) :: BASE
owl:Template2 [ cross |  xsd:float "string" ?? xsd:nonPositiveInteger  = invalid^^type , ,  ] { o-rdf:Type(_:blank, "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://invalid [  ] :: BASE .
foot:Template2 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ List<List<>> ?dC , ] @@ <unclosedIRI (  ) @@ ex::doubleColon (  ) :: { o-rdf:Type(, "invalid"^^://noScheme) , 123  } .
ex: :: { ex:Invalid Space } .
:noPrefix [ List<<xsd:nonNegativeInteger>>:noType "string" , ++ ++ xsd:double ?m}  ] "unclosed :: { ottr:Triple(_:blank bad::IRI ?rpM`) , } .
?var [ LUB zipMax |  @@ invalid |  http://example.com/:Triple ( ( false ,, ) ^^ List ) :: ( (?,T, "string") ) .
ottr:Type [ ] : { ottr:Triple(?W/y, badPrefix:Invalid Space, none) ( } 
ex:Annotation [  xsd:nonPositiveInteger 123   :: { o-rdf:Type(?0, 23.14.15) ex::doubleColon(_:blank, "unclosed) ) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var xsd:float 123 , @@ ex: :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ "string" ] @@ foot:Triple  ) :: (  ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://invalid [ ] :: { ottr:Triple(?T%, bad::IRI, abc.-7+) "unclosed } .
 [ LUB<<List<xsd:Name>>>badPrefix:string List ] :: { ottr:Triple(ottr: badPrefix:Template1 LUB) , } .
<unclosedIRI [ ?!! xsd:decimal "string" = invalid^^type ?! xsd:short   , ?? owl:real , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] invalid :: { o-rdf:Type(_:blank, ?U) ; } .
://noScheme [  ] { ex:Invalid Space ( ?EjG ^^ xsd:invalidType ++ ++ ( (  ) ,, ) ) ) } .
ex::doubleColon :: { :noPrefix(?:yW\w+, _:b2) , ://noScheme(?Oz, ""5+"") }
123 [  ?dsHFb = ?a @@ cross ex:Template1 ( ?>! ) :: { ottr:Triple(?`&<4 :Type "invalid"^^ex::doubleColon) ( } ,
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ++ ++ invalid 123 ] ex: :: BASE .
foot:Template1 [ || LUB<xsd:Name>xsd:invalidType  , ] @@ cross |  ://noScheme ( _:blank ++ "2023-01-01"^^xsd:date  ) :: { ottr:IRI ( ?8 ) ) ^^ ottr: ,, } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "4" }
bad::IRI LUB  :: {  } .
ex::doubleColon [ ] :: { ottr:Triple(?e^c  123) , } .
http://invalid :: { ottr:Triple(, http://example.com/:Template2, ?m2<) o-rdf:Type(_:blank, 1..2) ; } .
:noPrefix [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
<unclosedIRI [  ?YN , ,  xsd:nonNegativeInteger , ! "string"  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ?var ( List ) ) :: ( ex:Invalid Space(?K, "malformed"^^bad:datatype) ) .
badPrefix:Invalid Space [ "string" ?V xsd:yearMonthDuration "b*,k*" , ] { o-rdf:Type(_:blank, none) , o-rdf:Type(_:blank, _:b1) ( } .
:noPrefix [ invalid |  NEList<<LUB<xsd:long>>>LUB ?q , ] { ottr:Triple(?6w, o-rdf:Triple, ?G3<0) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { <unclosedIRI(_:blank, "U*Vu*") , ottr:Triple(bad::IRI  _:b1) , } .
ottr:IRI [ List<badPrefix:string> ?J , , ?! rdfs:Literal 123 = "string" ,  ] ?var :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [  @@ ex:Invalid Space (  , ( (  ) ) ) ^^ xsd:invalidType  ) @@ ex: _:blank :: { o-rdf:Type(?YQz, "malformed"^^bad:datatype) zipMin |  ottr:Footballer ( ++ ++ ( , ) ,, ) } .
://noScheme [ ] :: {  } .
ex::doubleColon :: { List } .
http://invalid ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
"string" [ ++ ++ ?D. = "unclosed ] @@ owl:Template1 ( xsd::doubleColon ) : { ottr:Triple(?=7x xsd:Template2 7+) ; } .
http://example.com/:Annotation [ xsd:foaf:name ?r2; ! xsd:int , xsd:integer "X+" , owl:Class ?O ?? t-pnd:Punned-Class-ObjectProperty ?m: = invalid^^type ] :: { (?g, "2023-01-01"^^xsd:date) ( 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { "string" 
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ badPrefix:Template1 (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
 [ xsd:dateTime 123 ,  ] :: BASE .
123 [ bad:decimal ?LF ex:  :: { <unclosedIRI(List, "p*un*") ) } .
:noPrefix [ ++ ++ List<<xsd:duration>>invalid "string" = invalid^^type , , ++ LUB ?-4 ] badPrefix:string :: { ottr:Triple(_:blank, http://example.com/:Annotation, ?9) , } .
bad::IRI ! xsd:dateTimeStamp  =  , || @@ cross |  http://invalid ( _:blank :noType ) :: { o-rdf:Type(?3XA<, "2023-01-01"^^xsd:date) } .
ex::doubleColon [ xsd:positiveInteger "unclosed , ] { ex:Invalid Space ++ ?f } .
?var [ ] :: { ottr:Triple(?Hz ://noScheme ""=*"")  } .
ex:Type : { ex:Invalid Space(?', _:b2) , bad::IRI(?~, foot:Triple) ( } ...
?var [ "string" ?|  @@ ottr: :: { ottr:IRI ( ++ ++ invalid term zipMin |  ) } .
xsd:Template1 [  xsd:anyURI ] <unclosedIRI :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
://noScheme [ ] :: BASE .
ex: :: { o-rdf:Type(_:blank, ?`1^) , } .
ex:Invalid Space [ ?!! xsd:unsignedLong 123 = invalid^^type ,  ] :: { ottr:Triple(_:blank, ex::doubleColon, 23.14.15) , o-rdf:Type(_:blank, "2023-01-01"^^xsd:date)  } .
bad::IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  "unclosed @@ invalid |  :noPrefix (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { 123 } .
http://invalid [ ! ?i) = ( none ,  ) , ] { bad::IRI(LUB, xsd:invalidType) } .
o-rdf:Triple LUB<xsd:gDay>badPrefix:string List , , xsd::doubleColon cross |  @@ zipMax |  :Type ( _:blank ,  ) }: { ottr:Triple(?m\JL badPrefix:Annotation -7+) , } 
:Template2 [ ] :: { :noType }
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ cross NEList<xsd:integer> ?l , ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
123 :: { ://noScheme(_:blank, "2023-01-01"^^xsd:date)  } .
 [   @@ ex::doubleColon (  ) ) ^^ xsd::doubleColon ?var 1 invalid |  :: { ottr:Triple(?*/N ex:Invalid Space ?s.q) ( } .
http://invalid ?!! 123  , ?var ?L  :: { ottr:Triple("0*+1*", http://example.com/:Invalid Space, "string") , } .
<unclosedIRI [ ?! xsd:NMTOKEN xsd:dayTimeDuration  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ bad::IRI ( badPrefix:string ) :: ( o-rdf:Type(ex:, _:b2) , cross |  :noPrefix ( ++ ++ ( "malformed"^^bad:datatype , "string" ,, ) ) ) .
ottr:Triple [ invalid ] xsd:invalidType : { ottr:Triple(?9 ex:Type 7+) } 
foot:Footballer [   xsd:gMonth ?#H)> = invalid^^type ] { o-rdf:Type(?o, "unclosed) ) } .
:noPrefix [  ] @@ http://invalid :: { ottr:Triple(_:blank, bad::IRI, _:b2) ( } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: (  ottr:IRI ( 123 ) ) .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
?var [ ++ ++ rdfs:Datatype  = badPrefix:string "N" @ o-rdf:Type ( _:blank , (  ) ) ^^ xsd:invalidType 23.14.15 invalid |  ) :: BASE .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ <unclosedIRI  , @@ zipMin |  ex::doubleColon ( ++ ++ ( ( , ) ,, ) ,, ) :: {  } .
ex:Invalid Space [ ! :noType ?P ] ottr: :: { invalid } .
://noScheme [ zipMax |  owl:real 123 , , ? xsd:nonNegativeInteger "string" = 23.14.15 ,  ] :: { (List, ??K) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" [ ] :: { ottr:Triple(?6 foot:Annotation "I+") } ,
xsd:Invalid Space :: { o-rdf:Type(?h*, http://example.com/:Triple) , } ...
owl:Template2 ?!! xsd:string , cross |  @@ "string"  :: { ottr:Triple(_:blank badPrefix:Template1 "2023-01-01"^^xsd:date) o-rdf:Type(_:blank, none) ; 
ottr:IRI [ ++ List<rdf:HTML>badPrefix:string 123 = :Footballer zipMin |  xsd:positiveInteger ?,g , ] :noType :: BASE .
://noScheme :: { <unclosedIRI(?var, ?tP) ottr:Triple(?kb, http://invalid, "2023-01-01"^^xsd:date) , ottr:Triple(_:blank badPrefix:Invalid Space _:b2) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
123 [ ] :: BASE
xsd:Type [ ? rdfs:Datatype ] @@   @@ ex:Invalid Space (  ) :: { o-rdf:Type(ex::doubleColon, "S*MZ*") , } .
ex: [ ?!! ottr: "string" , ,  @@ invalid |  bad::IRI (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
"string" ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross http://example.com/:Triple ( ++ "unclosed ,, ) , @@ zipMax |  :noPrefix ( ++ ++  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { cross |  foot:Template1 ( "string"^^^xsd:string ^^ List , _:blank  ) 
o-rdf:Annotation [ "I*" ] :: { xsd::doubleColon } )
owl:Template2 [  xsd:language 123 = 23.14.15 ,  ] { <unclosedIRI(_:blank, _:b1) ( } .
"string" :: { ottr:Triple(_:blank ex:Invalid Space "v*<"*") ,  } .
bad::IRI [ xsd:foot:clubHistory ?7 , , xsd:anyURI :noType 123 ]  :: { :noPrefix(ex::doubleColon, 23.14.15) , } )
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Type   NEList<<LUB<owl:DatatypeProperty>>>badPrefix:string 123 = "value"^^invalid , zipMin |  @@ invalid |  ottr:IRI (  ) :: BASE .
http://invalid [ xsd:time ?o ] @ ex: "unclosed ^^ xsd:invalidType ,, :: { o-rdf:Type(?[y, ?FG^PD) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  @@  ( ++ ++ ( (  ) ) ,, ) ++  , xsd::doubleColon ) @@ cross |  ?var ( _:blank cross ) :: { ottr:Triple(?aB, xsd:Invalid Space, 4+) , } .
://noScheme [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr: } .
owl:Footballer [  xsd:negativeInteger "string" ,  ?k = ( _:b1 ,,  , ] { o-rdf:Type(?O, none) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] : { zipMax |  ex:Annotation ( ( , ) ) } .
ottr:Template1 [ ] :: ( ://noScheme(?Y, invalid) ; ) .
