@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix foot: <http://example.org/football#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
ex:Triple none:date ?ay , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?6, foot:Template2, "2023-01-01"^^xsd:date) , 
ex:Invalid Space [ ?! List<List> , ,  ] @@ zipMax |  ottr:IRI (  ) :: { o-rdf:Type(?Y_, ?l`[) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?W, xsd:Template1, -1+.6+) , o-rdf:Type(?bV, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?? LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?m = ?r ] {  } .
ex::doubleColon [  LUB<xsd:decimal> ?F~KGLe{ = "unclosed ! ?} = ""3"" ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? xsd:invalidType ?<  @@  ex:Invalid Space ( ?var 1  ) @@ zipMin |  ex: (  ) :: BASE
ottr:IRI [   NEList<<LUB<ottr:IRI>>>  ]  \: { ottr:Triple(?|, http://example.com/:Footballer, 23.14.15) , o-rdf:Type(?], _:b1) ,  } 
o-rdf:Annotation [ ?!! rdfs:Datatype ,  ] @@ ottr:IRI ?S ) ~: { ottr:Triple(?0, owl:Type, _:b2) , o-rdf:Type(?1, "unclosed)  } ..
<unclosedIRI [  ?w ,   +: { o-rdf:Type(?^, "malformed"^^bad:datatype) o-rdf:Type(?n, none) ottr:Triple(?-, ottr:Triple, none) } ..
ottr:IRI [ ?? ?$  ? LUB ?= , owl:Class ?a` , ,  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ invalid |  ex::doubleColon ( "string"^^^xsd:string ++ ++ ( _:b2 ,  ) ,, ) ): { ottr:Triple(?d, foot:Triple, none) , } 
ex: [ ! List<NEList<<LUB<owl:NamedIndividual>>>>  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex:Invalid Space [ xsd:foaf:name ?l ,  ?K , , ?! List<badPrefix:string> ?Z = "malformed"^^bad:datatype   LUB<<List<owl:AnnotationProperty>>> , ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix ?!! LUB<ottr:IRI> ?X  ,  @ zipMin |  <unclosedIRI (  ) :: { ottr:Triple(?S, http://example.com/:Template1, "unclosed) , o-rdf:Type(?], "2023-01-01"^^xsd:date)  
ottr:IRI [  NEList<<LUB<owl:DatatypeProperty>>> ?^ = "unclosed , ,  NEList<<LUB<xsd:decimal>>> ,  @@ ex:Template1 ( ?o_ :: { o-rdf:Type(?jcN[, ?H) } ..
:noPrefix [ ! NEList<<LUB<ottr:Bot>>> , ,  @@ zipMax |  ex::doubleColon (  ) , @@ cross |  ottr:IRI (  ) -: { o-rdf:Type(?{, _:b1) , o-rdf:Type(?w, 23.14.15) } .
o-rdf:Type [ ?! NEList<<LUB<rdfs:Datatype>>> ?! NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> ] @@  :noPrefix (  ) @@  :noPrefix (  ) +: { o-rdf:Type(?L, "malformed"^^bad:datatype) } 
ex::doubleColon [  ] @  ottr:IRI (  ) :: { o-rdf:Type(?', none) ottr:Triple(?4, ottr:Footballer, _:b1) } .
http://example.com/:Annotation [ ! NEList<LUB<ottr:IRI>> , , List<foot:decimal ?K> ?US5 , ?! ?ZYp = ( ""2*"" ,   ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?? owl:DatatypeProperty ?&  @@ invalid |  ex: (  ) , @@ zipMax |  :noPrefix (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
<unclosedIRI ?!! LUB<<List<xsd:boolean>>> ?1 = "malformed"^^bad:datatype ? NEList<<LUB<xsd:decimal>>> , ,   :: { ottr:Triple(?m, ex:Template2, ?/) ,  
o-rdf:Type [   xsd:invalidType ?PAn , List<LUB> ?vGl  List<LUB<<List<xsd:date>>>> ?I; = "unclosed ] *: { o-rdf:Type(?7, -9+) , } ..
foot:Template1 [ NEList<List<>> ?C  ?* ,  ] @@ cross |  ex:Invalid Space (  ) :: { o-rdf:Type(?e>9f, 23.14.15) } .
owl:Triple [ ?!! ottr: ?x @@ zipMin |  ex::doubleColon (  ) @@ cross |  <unclosedIRI (  ) ~: { ottr:Triple(?h, xsd:Annotation, "unclosed) , o-rdf:Type(?y, _:b2) , } 
ottr:IRI [   .: { ottr:Triple(?g, ottr:Template1, "2023-01-01"^^xsd:date) , o-rdf:Type(?O, "malformed"^^bad:datatype)  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?r, ottr:Template2, true) o-rdf:Type(?0, ?X*) } .
o-rdf:Type [  ] :: BASE .
ex:Invalid Space [ LUB<xsd:date> ?8Y  ?C = ?y2 , ?!! List<badPrefix:string> ?{ = "unclosed , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?O, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   LUB ?u ]  :: BASE
:noPrefix [ NEList<<LUB<xsd:decimal>>> ?V , none:foot:clubHistory ?+ , ! LUB<<List<owl:DatatypeProperty>>> , ?? LUB<ottr:Bot> ,  @  <unclosedIRI ( ?var 1 ,  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex: ?! owl:Class ?P  ,  @@ invalid |  ottr:IRI (  ) @@ zipMin |  ex::doubleColon (  ) :: {  
ex:Invalid Space ? LUB<<List<ottr:IRI>>> @@ cross |  ex:Invalid Space (  ) ^: { ottr:Triple(?g, foot:Triple, "2023-01-01"^^xsd:date) , ottr:Triple(?z, http://example.com/:Annotation, 23.14.15) , } 
xsd:Footballer [ List<! NEList<<LUB<owl:ObjectProperty>>> ?s = "malformed"^^bad:datatype> ?W ] @@ zipMax |  ex:Template1 ( "unclosed ) , @@ zipMax |  owl:Annotation ( ++ ?$c ,, ) +: { o-rdf:Type(?56, none) } .
ottr:IRI ? xsd:boolean , ,  owl:AnnotationProperty ?U  , ? LUB<rdfs:Datatype> ?\ = 23.14.15 @@ ex:Annotation ?t: ) @: { o-rdf:Type(?#p, ""!*"") , } .
ottr:Footballer LUB<xsd:string> ?n ,  LUB ?% @@ cross |  <unclosedIRI (  ) @@ zipMax |  ottr:IRI (  ) :: BASE .
ex:Invalid Space [ ! t-pnd:Punned-Class-ObjectProperty , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex: [ foot:foot:clubHistory ?f_UT*5  ] { ottr:Triple(?{, owl:Template1, ?o) } .
:noPrefix [   LUB<<List<xsd:decimal>>> ?r = "unclosed ,  ]  :: { o-rdf:Type(?`, none)  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  @ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?&, foot:Triple, "malformed"^^bad:datatype) , ottr:Triple(?P, xsd:Annotation, _:b2) , } .
ex:Template2 ?? NEList<<LUB<owl:Class>>>  @@ ex::doubleColon ?<1 ) %: { ottr:Triple(?-6, http://example.com/:Template2, o-rdf:Type) } .
ottr:IRI  ?8 ?! List<List> ,  @@  ottr:IRI (  ) , @@ invalid |  ex:Invalid Space (  ) *: { ottr:Triple(?"b, xsd:Template1, ""l*"") } 
ottr:IRI [ ?!! NEList<<LUB<ottr:IRI>>> , ,  ] @@ cross |  :noPrefix (  ) \: { ottr:Triple(?^, http://example.com/:Template2, "2023-01-01"^^xsd:date) , o-rdf:Type(?], _:b1) } ..
http://example.com/:Type   ?w  ,  @@ cross |  ex::doubleColon ( ++ ++ 8+.-5+ , "string"^^^xsd:string ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE
:noPrefix [ LUB<List<ottr:IRI>> ?l`Q=M ] @ invalid |  <unclosedIRI (  ) :: {  
ex: [ ? NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> ?)E = "unclosed NEList<LUB<<List<xsd:string>>>> ?a , , ?? LUB<owl:ObjectProperty>  xsd:integer ?A  , ?! LUB ?n , , ! List<xsd:invalidType> , ,  ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?Uq, "malformed"^^bad:datatype) , } .
ex:Invalid Space [ none:foot:clubHistory ?Z! List<?!! xsd:boolean ?K > ?C ] { o-rdf:Type(?S, _:b1) o-rdf:Type(?b, 23.14.15) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ?! LUB<<List<rdfs:Datatype>>> , , ?! LUB<<List<owl:Class>>> , ?!! LUB<owl:NamedIndividual> ,  ] @@ cross ex:Template1 ( ?s ) ]: { ottr:Triple(?6, foot:Template1, ?O) } 
:noPrefix [ ?? LUB<ottr:Bot> , , ?? xsd:date  @@  :noPrefix (  ) @@ zipMin |  ottr:IRI (  ) !: { o-rdf:Type(?9, none) , o-rdf:Type(?^, "2023-01-01"^^xsd:date) o-rdf:Type(?g, "unclosed) , } ..
ottr:Template2 [ ? rdfs:Resource ,  ] @@ zipMax |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) %: { o-rdf:Type(?*, _:b2) , o-rdf:Type(?1, 23.14.15) } .
ottr:IRI [ ?Pq ?B @@ cross |  xsd:Annotation ( ++ ++ ( (  ) ) ,, ) ,, ) , @@ invalid |  ex::doubleColon ( ++ 23.14.15 "string"^^^xsd:string ) :: { o-rdf:Type(?}XA, ?y) , } .
ex:Invalid Space [ ? LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>   xsd:decimal ?&h_ = (   , , ?? badPrefix:string ?fr ,  ] :: BASE .
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  <unclosedIRI ( ottr:Type ,  ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?!! List<xsd:invalidType> ?) = "malformed"^^bad:datatype , ! NEList<<LUB<xsd:date>>> ,  ] @@ zipMax |  foot:Triple ( ?var 1 ) @@ zipMin |  ex::doubleColon (  ) :: BASE
ottr:IRI [ xsd:foaf:name ?`  LUB<owl:Class> ,  ] { ottr:Triple(?*, ex:Template1, _:b2) o-rdf:Type(?,, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ": { o-rdf:Type(?d', _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
http://example.com/:Footballer [ NEList<LUB<ottr:Bot>> ?J!8 ?! LUB<ottr:IRI> , ?! owl:NamedIndividual , , ? LUB<<List<xsd:boolean>>> ,   :: { o-rdf:Type(?S, 4+.-3+) } 
owl:Footballer [  @  o-rdf:Template2 (  ) *: { o-rdf:Type(?\, "unclosed) , o-rdf:Type(?E, "2023-01-01"^^xsd:date) o-rdf:Type(?u, none) , } .
ex::doubleColon [  ?c  ] @@ cross ex:Template1 ( ?U ) #: { o-rdf:Type(?^l, _:b1) ottr:Triple(?#, http://example.com/:Footballer, none) ,  } .
ottr:IRI [  ] @@ invalid |  o-rdf:Triple ( ?N ,, ) :: { ottr:Triple(?oMi5, xsd:Footballer, "2023-01-01"^^xsd:date)  
ex::doubleColon [ ? NEList<t-pnd:Punned-Class-ObjectProperty> @@ ex:Template1 ( ?s :: BASE .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?W, ottr:Template2, -1+) , o-rdf:Type(?DyR, ?jh]) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix foot:foaf:name ?_ , ?!! NEList<<LUB<ottr:Bot>>> ?l = 23.14.15 , ,   :: { o-rdf:Type(?m, _:b1) , } ..
ex:Invalid Space [  LUB<<List<owl:Class>>> ?9K  List<badPrefix:string> ?: ! ?(  , ,  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  ?G  @@  :noPrefix (  ) , @@ zipMax |  ex::doubleColon (  ) !: { ottr:Triple(?q, ex:Annotation, "malformed"^^bad:datatype) , o-rdf:Type(?a, 23.14.15) } 
foot:Type [   List ?c ] @ cross |  ex:Invalid Space (  ) +: { o-rdf:Type(?p, _:b2)  } .
http://example.com/:Template1 [  ] @@ zipMax |  :noPrefix (  ) @@ zipMin |  ottr:IRI (  ) ?: { o-rdf:Type(?&, none) o-rdf:Type(?#, "unclosed)  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI List<List<List<? List<badPrefix:string> ?d2 >>> ?HN  @@ cross |  o-rdf:Annotation ( ( , ) , ++ "unclosed ) , @@ zipMin |  ex: ( ++ ++ ( ?&n< ,, ) )  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?k, http://example.com/:Type, ?\T) o-rdf:Type(?z, "malformed"^^bad:datatype) } .
<unclosedIRI [ ?? NEList<<LUB<owl:DatatypeProperty>>> , ,  t-pnd:Punned-Class-ObjectProperty ,  ] @@ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?_, ex:Template2, 23.14.15) , } .
:noPrefix [   ?3{ = ?WIF>X;u4+: ] :: BASE .
foot:Template1 [ ?! LUB<xsd:date> , ! LUB ?q , ,  @@ ottr:Triple ?0w ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
owl:Footballer [ ?!! LUB<<List<rdfs:Datatype>>> ?= = "unclosed  (: { o-rdf:Type(?e, none) , o-rdf:Type(?i, "2023-01-01"^^xsd:date) o-rdf:Type(?8, _:b1) , } ..
xsd:Annotation [  @ zipMax |  foot:Type ( ?var 1 ,, ) *: { o-rdf:Type(?', "malformed"^^bad:datatype) , o-rdf:Type(?P, _:b2) , } 
http://example.com/:Type [  NEList<<LUB<owl:AnnotationProperty>>> ?!! NEList<<LUB<rdfs:Resource>>> ,  @@  ottr:IRI (  ) @@  <unclosedIRI (  ) &: { o-rdf:Type(?$, none) , o-rdf:Type(?/, none) , o-rdf:Type(?^, "unclosed)  } 
foot:Template2 LUB<owl:AnnotationProperty> ?'+ , ,   :: {  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  <unclosedIRI ( 23.14.15 ++ ++ (  ) ,  ) :: BASE .
ex: [ ?? NEList<NEList<<LUB<xsd:boolean>>>> ?f = 2+ ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?;`, "2023-01-01"^^xsd:date) , ottr:Triple(?pA, owl:Annotation, none) ottr:Triple(?}&, ex:Type, ?=) 
ex::doubleColon [  List ?HF ! LUB<<List<rdfs:Resource>>> , ottr:foot:clubHistory ?>!x , ? List<badPrefix:string> , , ?!! xsd:decimal  ] :: { o-rdf:Type(?b_., _:b1) , } 
:noPrefix [ LUB<List<t-pnd:Punned-Class-ObjectProperty>> ?^D @@ ex:Invalid Space ?OCn ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Triple [ ?! NEList<<LUB<xsd:string>>> ,  ]  ]: { o-rdf:Type(?U, "unclosed) ottr:Triple(?", ottr:Template1, _:b2)  } .
http://example.com/:Footballer [   owl:Class @@ invalid |  ex: (  ) , @@ cross |  ottr:IRI (  ) -: { o-rdf:Type(?~, "malformed"^^bad:datatype) , ottr:Triple(?w, o-rdf:Type, ""S*"") , } ..
foot:Template1 [  ] @ zipMin |  ottr:IRI (  ) }: { ottr:Triple(?g, http://example.com/:Template1, 23.14.15)  } .
