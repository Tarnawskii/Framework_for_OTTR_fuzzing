@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix foot: <http://example.org/football#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
ex::doubleColon [  ] :: { o-rdf:Type(?F, ?7H) , } ..
ottr:IRI [ ?? ottr: ?f~ , , ? ?Z  ] @@ cross |  foot:Template1 ( ?var 1 ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  <unclosedIRI (  ) :: {  
ex:Invalid Space ?!! xsd:decimal ?$ = 23.14.15 ,  LUB<rdfs:Resource> ?"  ! NEList<<LUB<owl:ObjectProperty>>> , ,   :: { ottr:Triple(?4, o-rdf:Annotation, -4+.6+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ List<LUB> ?) ] { o-rdf:Type(?JO<z, false) o-rdf:Type(?G`*, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Footballer [   LUB<<List<xsd:integer>>> , ?! owl:AnnotationProperty ,  ] @@ zipMin |  ottr:IRI (  ) @@ zipMax |  :noPrefix (  ) }: { o-rdf:Type(?1, ottr:Triple) } 
ex:Type [ ?? LUB<rdfs:Datatype> @@  ex::doubleColon (  ) , @@  ex::doubleColon (  ) #: { o-rdf:Type(?a, "malformed"^^bad:datatype) , o-rdf:Type(?s, _:b1) ,  } .
xsd:Template2 [  LUB<ottr:IRI> @@ ex:Template1 ( ?l, /: { o-rdf:Type(?V, "unclosed) , o-rdf:Type(?p, "2023-01-01"^^xsd:date) , o-rdf:Type(?q, none) , o-rdf:Type(?9, _:b2)  } ..
ottr:IRI [  ] :: { ottr:Triple(?}1, xsd:Triple, ?)) , o-rdf:Type(?y/@, ""u+"") o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template2 ?!! xsd:string ?M = "unclosed ,  @@ cross |  <unclosedIRI (  ) @@  ex::doubleColon (  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space [ ottr:foaf:name ?c , ,  ?8  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  :noPrefix (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?! LUB<owl:AnnotationProperty> ?7 = (  ) ] { o-rdf:Type(?Y, http://example.com/:Footballer) } .
ex:Annotation [  ?VX ,  ]  :: { ottr:Triple(?', owl:Type, _:b2) , } 
ottr:Template1 NEList<List<LUB>> ?a , ? xsd:invalidType ?k , , ! List<LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>> , ?? NEList<<LUB<xsd:date>>> ?R = 23.14.15 , ,   LUB<<List<rdfs:Resource>>> ?`= = "malformed"^^bad:datatype @@ cross ex:Template1 ( ?I ) :: { ottr:Triple(?C, foot:Footballer, false) , } .
ex::doubleColon List<?? List ?3> ?i ? LUB<<List<xsd:integer>>> , ?!! NEList<<LUB<owl:Class>>>  |: { o-rdf:Type(?#, none) o-rdf:Type(?T, "2023-01-01"^^xsd:date) ,  } ..
:noPrefix [ ! LUB<<List<ottr:Bot>>> ,  ] @ zipMax |  ex: (  ) >: { o-rdf:Type(?l, 23.14.15) , o-rdf:Type(?<, "unclosed) ,  } 
ottr:IRI [ LUB<List<owl:Class>> ?# ] @: { o-rdf:Type(?+x, -8+.1+) , ottr:Triple(?&, owl:Annotation, ??kY:*) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon [ ?!! NEList<LUB<<List<owl:ObjectProperty>>>> ?.o = 23.14.15 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? rdfs:Datatype  @ invalid |  :noPrefix (  ) :: { ottr:Triple(?4, http://example.com/:Template2, none)  } .
ex:Template1 List<ottr:> ?d , ,   ?zy  , none:foaf:name ?$ , , ?! NEList<<LUB<owl:AnnotationProperty>>> ,  LUB<xsd:date> ?6  ,   :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ! badPrefix:string ?) ] @@ zipMax |  <unclosedIRI (  ) , @@  ex: (  ) :: { o-rdf:Type(?L, _:b1) , 
ex:Invalid Space [  @@ cross |  ex:Invalid Space (  ) @@ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?}, ottr:Triple, _:b2) ,  } 
o-rdf:Type [ ?? List ?C @@  xsd:Footballer ( ( ?h" , (  ) ) ,, ) ?var 1 ,, ) ': { o-rdf:Type(?s, false) } ..
o-rdf:Footballer [ NEList<"2023-01-01"^^xsd:date ?9> ?u ] @@ ex:Template1 ( ?i,( \: { ottr:Triple(?BW, foot:Annotation, ""{"") , } ..
:noPrefix   List<LUB<ottr:Bot>> , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?p :: { ottr:Triple(?35;e?, o-rdf:Template1, "unclosed) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ?? owl:AnnotationProperty , ,  ?j   [: { o-rdf:Type(?E, ?[) , ottr:Triple(?G, http://example.com/:Template2, none) , } .
xsd:Annotation [  ] :: {  } .
ex::doubleColon [ ! LUB<<List<owl:NamedIndividual>>> ?~m = "unclosed List<foot:ex:Footballer ?FI>> ?K ?! xsd:invalidType ?@W ] { ottr:Triple(?H, foot:Type, 3+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ List<ottr:> ?NPC ] @@ zipMax |  ex:Invalid Space (  ) :: BASE .
<unclosedIRI ?!! NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> @@  ottr:IRI (  ) , @@ cross |  ex: (  ) :: { o-rdf:Type(?&, ottr:Triple) o-rdf:Type(?/, "malformed"^^bad:datatype) } 
owl:Footballer [ ? xsd:boolean ?8  ,   !: { o-rdf:Type(?z, 23.14.15) , } ..
ex:Invalid Space ! LUB<<List<owl:ObjectProperty>>> , ? LUB<xsd:decimal> , ,  @ invalid |  ottr:IRI (  ) ~: { o-rdf:Type(?cng, "2023-01-01"^^xsd:date) } .
ex::doubleColon [ none:foot:clubHistory ?N=  List<LUB> ?VU~ = "unclosed , ?!! LUB<<List<ottr:IRI>>> ] :: BASE .
ottr:Annotation [  @@ zipMin |  ottr:IRI ( ?var 1 ,, ) , @@ zipMax |  <unclosedIRI (  ) :: { o-rdf:Type(?:tF, "2023-01-01"^^xsd:date)  } .
ex: [ ? NEList<<LUB<rdfs:Datatype>>> , ,  ] @@  ex:Invalid Space ( "string"^^^xsd:string ) :: { ottr:Triple(?h, owl:Type, ?AB) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  :noPrefix ( 23.14.15 , ++ (  ) ++ ++ ?q ) +: { o-rdf:Type(?fI, -4+.9+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
o-rdf:Template2 [ ?? owl:DatatypeProperty ?j = ?,M; , LUB<owl:Class> ?aT ] { o-rdf:Type(?K, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple ?! ?&  , ( _:b1 ,, ) ) ?n ,   badPrefix:string ?r  :: { o-rdf:Type(?ES?, xsd:Footballer) , } 
ex::doubleColon [  @@ cross |  ottr:IRI (  ) @@  ex::doubleColon (  ) =: { ottr:Triple(?m, ex:Template1, _:b2) ,  } ..
http://example.com/:Footballer [ ?! xsd:integer , ! NEList<<LUB<rdfs:Resource>>> , ,  @@ ex:Template1 ( ?- &: { o-rdf:Type(?c, none) o-rdf:Type(?y, true) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?? t-pnd:Punned-Class-ObjectProperty ?6  ? LUB<rdfs:Resource> , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?D, ?[) , o-rdf:Type(?e, "unclosed)  } .
http://example.com/:Template1  @@ ex:Template1 ( ?p{ :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ottr:IRI [ ottr:string ?$I)' , LUB<owl:DatatypeProperty> ?EY ] :: { ottr:Triple(?", xsd:Annotation, false) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [ ?! ?8  , , ! LUB ?j ] @@ cross |  :noPrefix (  ) @@ invalid |  ex:Invalid Space (  ) :: BASE
ex::doubleColon [   NEList<<LUB<owl:NamedIndividual>>> ?= = "unclosed ?!! List<badPrefix:string> , , LUB<<List<xsd:string>>> ?P  LUB<<List<ottr:IRI>>> ,  @@  ex::doubleColon ( "string"^^^xsd:string , ++ ?X ,, ) :: { ottr:Triple(?:, ex:Footballer, 23.14.15) 
foot:Type [  ] @@ zipMax |  ex:Invalid Space (  ) , @@ zipMin |  ottr:IRI (  ) `: { ottr:Triple(?V, o-rdf:Triple, "malformed"^^bad:datatype) , } ..
ottr:Template2  ?/ , , ?!! LUB<ottr:Bot> ,  @ cross |  ottr:IRI (  ) .: { o-rdf:Type(?u, _:b1) , o-rdf:Type(?w, none) , } .
owl:Annotation ? LUB<xsd:integer> , , ?! LUB<owl:AnnotationProperty> , ,   -: { ottr:Triple(?U, ottr:Template1, ""#*4^*"") } ..
ottr:Type [ ?! LUB<<List<owl:ObjectProperty>>> ] { o-rdf:Type(?7xFE, ?q) , ottr:Triple(?Y, owl:Triple, -7+) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMax |  ottr:IRI ( "string"^^^xsd:string ,, ) :: BASE .
ex: ? ?G  , , ?!! NEList<<LUB<xsd:date>>>  @@ invalid |  :noPrefix (  ) @@ cross |  ex:Invalid Space (  ) -: { o-rdf:Type(?J, "unclosed) , } ..
ex::doubleColon [ ?? List ?( , ottr:foot:clubHistory ?W\ ,  LUB<ottr:Bot> ?D    List<ottr:>  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
http://example.com/:Annotation [ ! NEList<xsd:string> ?i = 23.14.15 NEList<List<List<(  ) , none ,,>> ?$1> ?] List<owl:AnnotationProperty> ?s* ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template2 ? xsd:invalidType ?U , , ! NEList<<LUB<rdfs:Datatype>>> ,   :: { o-rdf:Type(?4, "malformed"^^bad:datatype)  } .
ex: [ ?!! LUB ?g , , ? owl:NamedIndividual , ,  ]  :: { o-rdf:Type(?f, _:b1)  } 
ex: [ ? LUB<<List<xsd:integer>>> , , ?!! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , ,  ]  =: { o-rdf:Type(?~, _:b2) ottr:Triple(?t, foot:Template1, "2023-01-01"^^xsd:date) } 
owl:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ NEList<! ?Y = ?9> ?N! @  ex:Invalid Space ( ++ (  ) ) ) :: BASE
ex:   :: { o-rdf:Type(?@, "2023-01-01"^^xsd:date) } .
:noPrefix [ foot:o-rdf:Template2 ?b ,  LUB<ottr:IRI> ?{  , , ?? ottr: ?[  ] @@ ex:Template1 ( ?aZ :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ? xsd:boolean ?7 = 23.14.15 ?!! NEList<<LUB<ottr:Bot>>> ] { ottr:Triple(?g, foot:Annotation, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] /: {  } .
<unclosedIRI ?! LUB<<List<xsd:string>>> ,   :: { ottr:Triple(?M, ex:Footballer, "unclosed) ottr:Triple(?C, http://example.com/:Template1, _:b1) ,  } 
xsd:Triple  @@ zipMax |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) ): { ottr:Triple(?l, ottr:Template1, "malformed"^^bad:datatype) , o-rdf:Type(?,, none) } ..
ex:Invalid Space [   List<xsd:invalidType>  @@ cross |  ottr:IRI (  ) @@ invalid |  :noPrefix (  ) <: { ottr:Triple(?e, http://example.com/:Template2, ?3) , } ..
ottr:IRI xsd:foaf:name ?w , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  ex:Invalid Space (  ) @@ zipMin |  <unclosedIRI (  ) [: { o-rdf:Type(?_, "2023-01-01"^^xsd:date) ,  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Footballer [ ?? LUB<owl:NamedIndividual> @@ ex:Template1 ( ?>U :: BASE .
ex: [ ?!! owl:DatatypeProperty ?X  , , NEList<List<>> ?=d  ] :: BASE
:noPrefix [   ottr: ?y , ? LUB<<List<xsd:boolean>>> ?G = 23.14.15 , , NEList<<LUB<owl:ObjectProperty>>> ?a ,  ] { ottr:Triple(?Lef, ex:Type, ?Y) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ! ?6  , ?! List<badPrefix:string> ,  ]  :: { ottr:Triple(?O, foot:Template2, none) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?u, owl:Triple, _:b2) } .
xsd:Template1  xsd:string  @@ invalid |  :noPrefix (  ) , @@  ottr:IRI (  ) :: { o-rdf:Type(?s:, "unclosed) , } .
ottr:IRI [  LUB<xsd:decimal>  @@ cross |  ex: (  ) ?: { o-rdf:Type(?5, 23.14.15) o-rdf:Type(?9, _:b1) , } 
ex::doubleColon [  LUB<rdfs:Datatype> ?m = "malformed"^^bad:datatype @  http://example.com/:Annotation (  ) ): { ottr:Triple(?C, o-rdf:Type, "malformed"^^bad:datatype) , } ..
ex: [ foot:foaf:name ?+J ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ottr:IRI ( ?var 1 ,  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?8, o-rdf:Template2, ?jZ) 
http://example.com/:Template1 [ ( (  ) , ?%{ ,, ) ) ?;N~2 ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?! NEList<LUB<xsd:decimal>> ?$ = "malformed"^^bad:datatype , ,  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ! ?h  ,  @@ zipMin |  ex::doubleColon (  ) , @@ zipMax |  :noPrefix ( "string"^^^xsd:string ) :: BASE .
ottr:Triple [ NEList<<LUB<ottr:IRI>>> ?s ,  LUB<<List<owl:Class>>> ?B3 = _:b1 ]  =: { o-rdf:Type(?-, owl:Footballer) , } ..
ex:Invalid Space [  @@ cross |  ottr:IRI (  ) @@ invalid |  ottr:IRI (  ) :: { o-rdf:Type(?m, -3+.2+) , o-rdf:Type(?., none) o-rdf:Type(?", "unclosed) } .
ex:Annotation ?!! List<xsd:invalidType> @@ cross ex:Template1 ( ?l ) _: { ottr:Triple(?S, foot:Type, true) } 
xsd:Footballer [ ? LUB<owl:ObjectProperty> ?? rdfs:Resource ,  ] @ zipMin |  http://example.com/:Annotation (  ) #: { o-rdf:Type(?&nuTV=Rx, _:b2) } .
