@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix foot: <http://example.org/football#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
xsd:Annotation [ ?! ottr:Bot , ?? ?BP = ?s , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  <unclosedIRI ( ( ( ?,[ , _:b2 ,, ) ) ) ,, ) :: BASE .
ottr:IRI [ NEList<xsd:ex:Template2 ?~(0> ?F ? LUB<<List<xsd:string>>> ?&3h  @ zipMax |  :noPrefix ( ++ ++ 23.14.15 ++ "unclosed ,  ) :: BASE
ex::doubleColon [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Invalid Space LUB<xsd:date> ?'   :: { ottr:Triple(?/, ottr:Footballer, "malformed"^^bad:datatype) o-rdf:Type(?j, _:b1) ,  } 
ex: [ ! List<NEList<<LUB<xsd:boolean>>>> ?o$S5 = "unclosed , ?!! xsd:invalidType ?+  LUB ?` ?!! List<ottr:> ?] = 23.14.15 ,   owl:AnnotationProperty ?x = "malformed"^^bad:datatype ,  ] { o-rdf:Type(?<, -0+) } .
http://example.com/:Triple [ List<?!! NEList<LUB<<List<xsd:decimal>>>> ?z#p = ""T""> ?@! LUB<List<owl:ObjectProperty>> ?7 List<List<>> ?w ] @@ cross ex:Template1 ( ??)_ ) ~: { o-rdf:Type(?Yvg, none) , } .
o-rdf:Type [ ?? List ?y , , ?? LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?! LUB<owl:Class> , ,  @@ invalid |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) ?: { o-rdf:Type(?A, 9+.-5+) , } ..
foot:Template1 [ ! badPrefix:string ?fn ] @@ cross |  foot:Annotation ( "string"^^^xsd:string ) @@ cross |  ottr:Type ( ( , ) ) .: { ottr:Triple(?*, owl:Triple, "2023-01-01"^^xsd:date) } ..
foot:Type [ ?! NEList<<LUB<ottr:IRI>>> ?- = "malformed"^^bad:datatype , foot:ottr:Template1 ?Sg ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE
:noPrefix [  ?Y , ,  ] @@ ex:Template1 ( ?P :: { o-rdf:Type(?[, ?m) ottr:Triple(?3, ex:Annotation, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ? LUB<xsd:boolean> ] }: { o-rdf:Type(?), none) } .
<unclosedIRI [  ?u = ?B{ , , ottr:Bot ?$ , ?!! List<badPrefix:string> ] { o-rdf:Type(?#yl:, -2+.3+) , } .
ex:   LUB<<List<owl:AnnotationProperty>>> ?D   @@  ex::doubleColon (  ) , @@ zipMax |  ex:Invalid Space (  ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?? LUB<owl:ObjectProperty> ,  ] @ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?\b, http://example.com/:Triple, "2023-01-01"^^xsd:date) } 
o-rdf:Footballer  @@ cross |  ottr:IRI (  ) @@ zipMin |  :noPrefix (  ) ]: { o-rdf:Type(?', _:b2) o-rdf:Type(?!, 23.14.15) } ..
ottr:IRI [ ! NEList<<LUB<owl:DatatypeProperty>>> ,  ] @@ cross |  ottr:IRI (  ) -: { ottr:Triple(?O, owl:Template2, "unclosed) , o-rdf:Type(?W, _:b1) ,  } 
ottr:IRI [ ! ?&/ = ?hUT ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  ] { ottr:Triple(?2, o-rdf:Type, ?GMC'A) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } 
ottr:Annotation [ ? LUB<ottr:IRI> , , xsd:string ?q , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  :noPrefix (  ) @@ zipMax |  ex::doubleColon (  ) :: { o-rdf:Type(?j, "unclosed) o-rdf:Type(?k, -2+.9+) , 
ex: [  NEList<<LUB<xsd:boolean>>> ?? LUB<<List<owl:ObjectProperty>>>  ] @@ <unclosedIRI ?t ) :: { ottr:Triple(?s, foot:Template1, 23.14.15) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2 none:foot:clubHistory ?^b ?!! List ?N  ?(  @  owl:Footballer ( ++ ?l ) :: BASE .
http://example.com/:Triple [   LUB<rdfs:Resource> , ?! List<badPrefix:string> ,  @@ cross |  ex:Invalid Space (  ) , @@ zipMin |  ex:Invalid Space (  ) ): { o-rdf:Type(?E"0, _:b2) , } ..
ottr:IRI [ ?!! owl:Class  @@ cross |  ottr:IRI (  ) :: { o-rdf:Type(?=, none) , o-rdf:Type(?H, "malformed"^^bad:datatype) ,  } .
owl:Footballer ! NEList<List<LUB<<List<xsd:integer>>>>> ?WfZ = _:b1  $: { ottr:Triple(?{, ex:Template2, "2023-01-01"^^xsd:date) } .
ex: [ ?! List<LUB<<List<owl:AnnotationProperty>>>> , , ? owl:Class ?5  ] @@ zipMax |  ottr:IRI (  ) :: BASE .
foot:Footballer  @@ :noPrefix ?Mgr ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?h9T, o-rdf:Triple, "2023-01-01"^^xsd:date) ,  } .
ex:Invalid Space [  LUB<rdfs:Datatype> ?1v = "malformed"^^bad:datatype , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  <unclosedIRI ( "string"^^^xsd:string  ) @@ cross |  ex::doubleColon (  ) :: BASE
xsd:Type [ ! NEList<<LUB<xsd:date>>> NEList<List<badPrefix:string>> ?z ] { ottr:Triple(?K, owl:Template2, _:b2) o-rdf:Type(?j, 23.14.15) , } .
http://example.com/:Template1 [ List<List<>> ?<m , ,   owl:ObjectProperty ottr:foot:clubHistory ?b  ] :: { ottr:Triple(?7AdQ, ex:Annotation, ?>) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?!! NEList<<LUB<rdfs:Resource>>>  @@ zipMin |  ex: (  ) , @@ invalid |  ex: (  ) @: { o-rdf:Type(?|, _:b1) ottr:Triple(?), ottr:Type, none) ,  } 
<unclosedIRI ?? LUB<xsd:integer>  @  ex: ( ( , ) ,  ) >: { ottr:Triple(?X, http://example.com/:Template1, "unclosed) } ..
owl:Footballer [ ? LUB ?- ,  ??  ]  $: { ottr:Triple(?EC, o-rdf:Triple, 0+.-8+) , } ..
ottr:Footballer [ ?!! List<LUB<<List<owl:DatatypeProperty>>>> ?8 = none ] :: BASE
ex: [ List<List<( (  ) ,, ) ) , ?%(|>> ?g  ] @@ ottr:IRI ?$BK ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Invalid Space [ xsd:date ?[Wx , ! List<List> , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?@, owl:Annotation, "malformed"^^bad:datatype) , } .
<unclosedIRI  @@ zipMax |  :noPrefix (  ) :: { o-rdf:Type(?eq, ?R) ottr:Triple(?b, ex:Triple, _:b2) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [   NEList<<LUB<rdfs:Datatype>>> ?k = 23.14.15 , ,  LUB<owl:AnnotationProperty> , ,  @@ cross |  ex:Invalid Space (  ) @@  ottr:IRI (  ) :: { ottr:Triple(?E:G, o-rdf:Type, _:b1) } 
foot:Template2 ? LUB<ottr:IRI>  @ invalid |  :noPrefix (  ) [: { o-rdf:Type(?>, true) o-rdf:Type(?H, 23.14.15) , } .
http://example.com/:Template1 ?! NEList<<LUB<ottr:Bot>>> , ,  @@ zipMin |  <unclosedIRI (  ) , @@ zipMax |  ottr:IRI (  ) (: { o-rdf:Type(?p, "2023-01-01"^^xsd:date) , } ..
xsd:Annotation [ ?? ?F  ?? NEList<<LUB<xsd:decimal>>> ]  ?: { ottr:Triple(?X, owl:Annotation, "unclosed) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?], ex:Template2, ?<37) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?! ?|  , ?? List<badPrefix:string> , ,  ] @@  ottr:IRI (  ) @@ cross |  <unclosedIRI (  ) :: BASE .
o-rdf:Footballer [ NEList<List<List<! NEList<xsd:decimal> ?u = "malformed"^^bad:datatype>>> ?S14*Y LUB<<List<rdfs:Resource>>> ?C2p @ zipMax |  ex: ( ++ ++ (  ) , "string"^^^xsd:string ,, ) :: BASE
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ': { o-rdf:Type(?M, "malformed"^^bad:datatype) ,  } 
ex:Invalid Space ? LUB<xsd:boolean> ?^ = ( none  ?!! ottr: ?= @@ ex:Template1 ( ?E :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Type [ foot:foaf:name ?I ,   NEList<<LUB<ottr:Bot>>> ,  NEList<<LUB<owl:Class>>> ?9 = "unclosed  ] { o-rdf:Type(?A, _:b2) , } .
foot:Template1 [  LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , , ?! LUB ?R  :: { o-rdf:Type(?.w, 1+) o-rdf:Type(?!, 23.14.15) } ..
ex:Invalid Space [  ?t ,  @@ invalid |  ex:Invalid Space (  ) <: { o-rdf:Type(?d, "unclosed) ,  } .
http://example.com/:Triple [  ] @@ zipMin |  <unclosedIRI (  ) , @@ invalid |  ex:Invalid Space (  ) (: { ottr:Triple(?l, ottr:Annotation, "2023-01-01"^^xsd:date) , } ..
owl:Annotation [ ?! LUB<xsd:integer> ?P = "unclosed ] @@ zipMin |  ex: (  ) , @@  ottr:IRI (  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?R`, _:b2) , 
:noPrefix [ ? List<NEList<<LUB<owl:AnnotationProperty>>>> , , ! LUB ?| ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?e :: BASE .
<unclosedIRI List<ottr:> ?L&C ,  @ zipMax |  ex:Invalid Space ( "string"^^^xsd:string ++ xsd:Template2 ,, ) :: BASE
ex::doubleColon [  ?: ?!! xsd:decimal ?M  , , xsd:foaf:name ?i  LUB<<List<xsd:date>>> , ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Template1 [ ?? ?#   ] { o-rdf:Type(?b, "unclosed) , ottr:Triple(?d, o-rdf:Triple, none) } .
ex:Type   LUB<ottr:IRI> ?2 = 23.14.15 ,   ': { o-rdf:Type(?G, 23.14.15) ottr:Triple(?Q, http://example.com/:Footballer, _:b1) } ..
ottr:Triple  @@ cross |  http://example.com/:Template2 ( ( , ) ,  ) @@ invalid |  :noPrefix (  ) }: { o-rdf:Type(?/jm, ?z) , } .
ex::doubleColon [ List<?? xsd:invalidType ?uN~> ?T LUB<ottr:Bot> ?r*< ] @@ invalid |  ottr:IRI ( ++ ++ ( ?l ) ) ) `: { o-rdf:Type(?4, true) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [  ] { o-rdf:Type(?W, -8+.6+) ottr:Triple(?w@, owl:Template1, ?u) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ! ?g  @@ ottr:IRI ?c ) :: { ottr:Triple(?^-, ottr:Annotation, ""a*"") , 
ex: ?!! rdfs:Resource , ,  @@ invalid |  ex:Invalid Space ( ( , ) ,  ) ;: { o-rdf:Type(?5, none) } ..
ex:Triple [ ? NEList<<LUB<xsd:string>>> ?+eh,>{ = ?TX| , NEList<List<LUB>> ?\_L ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex::doubleColon [   LUB<t-pnd:Punned-Class-ObjectProperty> ?t = "malformed"^^bad:datatype  LUB<<List<owl:Class>>> ?? LUB<owl:AnnotationProperty> ,  ] @@ cross |  <unclosedIRI (  ) @@ zipMax |  <unclosedIRI (  ) :: {  } .
http://example.com/:Footballer [   :: { o-rdf:Type(?3, 23.14.15) ottr:Triple(?7, xsd:Template2, "2023-01-01"^^xsd:date) , o-rdf:Type(?o, _:b2) o-rdf:Type(?A, "unclosed)  } .
o-rdf:Footballer ?! LUB<ottr:Bot> , , ?!! LUB<ottr:IRI> ,  @@  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) <: { o-rdf:Type(?=, foot:Type) , } 
:noPrefix [ ottr:http://example.com/:Template1 ?i , ,  xsd:invalidType ?4  ?lE ] @ cross |  ottr:IRI ( ++ ++ -1+  ) ^: { o-rdf:Type(?H, "malformed"^^bad:datatype) } 
ex: [  LUB<<List<ottr:Bot>>> ?6 = 23.14.15 , , LUB<owl:Class> ?[a| ?! LUB<xsd:date> ,  ] {  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ zipMax |  o-rdf:Template1 (  ) :: BASE
<unclosedIRI ! badPrefix:string ?/  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(??Y, ex:Footballer, "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [   List<xsd:invalidType> , ,  @@ cross |  ex::doubleColon (  ) @@ zipMin |  :noPrefix (  ) :: { o-rdf:Type(?P, ?=) , ottr:Triple(?q, owl:Template2, 23.14.15) o-rdf:Type(?L, _:b1) , } .
xsd:Triple [ xsd:foot:clubHistory ?p , ?!! xsd:boolean ?c  ? ?f  , ,  ] :: BASE .
foot:Annotation [  @  ottr:IRI (  ) .: { o-rdf:Type(?O, _:b2) o-rdf:Type(?1, "malformed"^^bad:datatype) , } ..
http://example.com/:Type [ ?? NEList<<LUB<owl:NamedIndividual>>>  ] @@ ex:Template1 ( ?T |: { ottr:Triple(?U', ottr:Annotation, "unclosed) , o-rdf:Type(?g, none) } 
:noPrefix [ ! LUB<owl:AnnotationProperty>  ] @@ zipMax |  :noPrefix (  ) , @@ invalid |  ottr:IRI (  ) <: { ottr:Triple(?s, ex:Template1, _:b2)  } .
ottr:IRI [ foot:foaf:name ?+l ] @@ zipMin |  <unclosedIRI ( "string"^^^xsd:string ,  ) @@ zipMax |  o-rdf:Template1 (  ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: [ ?!! ?# = (   ? List<xsd:invalidType> ?@61y) = "unclosed , ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [   NEList<<LUB<xsd:boolean>>> , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ex:Invalid Space (  ) , @@ invalid |  :noPrefix (  ) :: { o-rdf:Type(?-/I, ?^) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template2 [ ?? xsd:integer ?c  ] :: BASE
ottr:IRI  LUB<<List<owl:NamedIndividual>>>   :: { ottr:Triple(?<, ottr:Annotation, "malformed"^^bad:datatype) ottr:Triple(?s, ex:Triple, _:b1) ,  
owl:Type LUB<rdfs:Resource> ?G ,  @@ cross |  ex:Invalid Space (  ) &: { ottr:Triple(?u, foot:Footballer, 7+) , } 
ex:Invalid Space ! LUB<<List<ottr:Bot>>> , , ?! NEList<<LUB<xsd:string>>> ,  @ cross |  :noPrefix (  ) !: { o-rdf:Type(?*, "2023-01-01"^^xsd:date) , o-rdf:Type(?P, 23.14.15) ,  } ..
owl:Footballer ? badPrefix:string ?& , , (  ) ,, ?\ , , ?!! LUB<<List<owl:DatatypeProperty>>> ?0 = 23.14.15 , , ? LUB<rdfs:Datatype> ?7 = "malformed"^^bad:datatype @@ o-rdf:Triple ?' ) ?: { ottr:Triple(?R~, xsd:Type, "unclosed) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?f, http://example.com/:Footballer, false) , o-rdf:Type(?ZQ, ?IC) , } .
ex:Triple   NEList<<LUB<xsd:decimal>>> ?P  ,  @@ zipMax |  ex:Invalid Space (  ) @@ invalid |  ottr:IRI ( ( , ) ) :: BASE
ex::doubleColon [ ! ?R:H = ?`81 ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix [ LUB<ottr:Bot> ?Bi , , ?!! LUB<<List<owl:AnnotationProperty>>>  ]  .: { ottr:Triple(?y, owl:Template2, "malformed"^^bad:datatype) o-rdf:Type(?D\, 23.14.15) } ..
<unclosedIRI [ ? xsd:invalidType ?z*V , , ?? owl:DatatypeProperty ?" = "malformed"^^bad:datatype ?! List<badPrefix:string> ,  @@ :noPrefix ?T ) :: {  
ottr:Type [ NEList<LUB<xsd:boolean>> ?@ , , ottr:decimal ?dFn2+ @@ cross |  foot:Annotation ( ++ ++ (  ) ,, ) :: { o-rdf:Type(?J,3, ""s"") } .
ottr:IRI  LUB<<List<xsd:date>>>  @@  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) {: { ottr:Triple(?^, xsd:Template1, none) o-rdf:Type(?m, "unclosed)  } 
ex::doubleColon [   LUB<xsd:integer> , ? LUB<ottr:IRI> ] @ invalid |  ottr:IRI (  ) <: { o-rdf:Type(?), "2023-01-01"^^xsd:date) o-rdf:Type(?a, _:b1) , o-rdf:Type(?|, _:b2)  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?^3uX, ?`) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Template1 [ xsd:string ?*w , , ?? ?Q  LUB<t-pnd:Punned-Class-ObjectProperty> ?8 @ cross |  ottr:IRI ( (  ) ) ,, ) :: { ottr:Triple(?om, ottr:Template2, "malformed"^^bad:datatype) } .
ex: [  ] @@ zipMax |  ex:Invalid Space (  ) , @@ invalid |  <unclosedIRI ( ++ ++ none ) :: BASE .
:noPrefix [   List<List> ?= = "unclosed , ?! owl:ObjectProperty , , ?!! NEList<<LUB<xsd:date>>> ,  ] :: { o-rdf:Type(?(, _:b2)  } .
http://example.com/:Footballer List<List<( ?0 ,, )>> ?rl  badPrefix:string ?Z , , ! LUB<<List<xsd:integer>>> ?_   @@ ex:Type ?24 ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
owl:Annotation ? LUB<ottr:Bot> @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?k, 23.14.15) , o-rdf:Type(?p, "2023-01-01"^^xsd:date) , } 
o-rdf:Triple ?! LUB<rdfs:Resource> ?z  ,   ottr:IRI ,   @: { o-rdf:Type(?HD, false) } ..
xsd:Template1 [ ?!! LUB<xsd:decimal> ?9 = 23.14.15  ] @@ invalid |  ottr:IRI ( "string"^^^xsd:string  ) @@  ex::doubleColon (  ) ": { o-rdf:Type(?YLC, ""n"") } .
ex: ?!! xsd:invalidType ?o=z> , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  ottr:IRI (  ) :: { ottr:Triple(?"d, o-rdf:Type, "malformed"^^bad:datatype) } .
foot:Triple [ ?X*i , -4+.9+ ,, ?rPO]R(  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ! LUB<<List<owl:NamedIndividual>>> ?vV6 = (  ) , , List<NEList<<LUB<ottr:IRI>>>> ?Bl ] :: BASE .
:noPrefix [ ?? ?\  , , ?! LUB<xsd:integer> , ,   t-pnd:Punned-Class-ObjectProperty , ,  @@ cross |  ex:Invalid Space (  ) :: BASE
ex::doubleColon [ ? List<LUB> ] @@ zipMax |  ottr:IRI (  ) @@ zipMin |  ex:Invalid Space (  ) ': { o-rdf:Type(?jJ, "unclosed) ,  } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Annotation [  LUB<xsd:date> ,  ] @@ cross ex:Template1 ( ?9 ) :: { o-rdf:Type(?/, _:b1) ottr:Triple(?^, ottr:Footballer, "2023-01-01"^^xsd:date) , } .
ex:Template2 foot:foaf:name ?+ @@ invalid |  :noPrefix (  ) , @@  ex:Invalid Space (  ) |: { o-rdf:Type(?y, ?;) o-rdf:Type(?', 23.14.15) o-rdf:Type(?W, none) } ..
owl:Template1 [   LUB<xsd:boolean> ?M = "malformed"^^bad:datatype , ,  ]  +: { o-rdf:Type(?C, true) o-rdf:Type(?wU, _:b2) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ?( , ?!! LUB<owl:AnnotationProperty> ] { ottr:Triple(?b, xsd:Template1, none) , o-rdf:Type(?Q, "malformed"^^bad:datatype)  } .
ex:Type  @@ invalid |  ex::doubleColon ( ++ ++ ( ( false , ?6 ,, ) ) )  ) :: { o-rdf:Type(?0P, ?q) , } .
:noPrefix [ ! List<badPrefix:string> ?| = 23.14.15 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Invalid Space ?* ) :: BASE .
<unclosedIRI [ LUB<<List<xsd:decimal>>> ?' ?? ottr: ?FB ] :: { o-rdf:Type(?4f, 1+.-7+) 
ex: [ ?! ?[ = (   , xsd:foaf:name ?#`{ ] @ zipMin |  ottr:Annotation ( "string"^^^xsd:string , ( , ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
owl:Template2   NEList<<LUB<xsd:date>>> ?D    \: { ottr:Triple(?_, foot:Footballer, "2023-01-01"^^xsd:date) o-rdf:Type(?=, _:b2) } .
o-rdf:Triple [  ] @@ cross |  <unclosedIRI (  ) , @@  ex: (  ) }: { o-rdf:Type(?&, _:b1) , ottr:Triple(?+, http://example.com/:Footballer, "unclosed) } ..
ottr:IRI [  ottr:Bot , ? LUB<<List<owl:ObjectProperty>>> @@  ottr:IRI (  ) @@ zipMax |  ottr:IRI (  ) ': { ottr:Triple(?\~EJ, foot:Triple, 23.14.15) } .
ex:Invalid Space [ ?!! List ?H , ,   NEList<LUB<xsd:date>> @@ cross |  o-rdf:Template1 ( ++ ++ none ,  ) :: BASE .
ottr:IRI [ LUB<owl:ObjectProperty> ?T30  ] :: { ottr:Triple(?<r, ottr:Triple, ?9i) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?)'RkqVF, "unclosed) } .
:noPrefix ! owl:Class ?p  , ?? NEList<<LUB<xsd:decimal>>> @@ invalid |  <unclosedIRI (  ) @@ zipMin |  ex: (  ) :: { ottr:Triple(?K, owl:Annotation, _:b2)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
xsd:Template2 [ ?! List<ottr:> ?a = 23.14.15 ] @@ ex:Footballer ?1yL ) :: { ottr:Triple(?v, http://example.com/:Type, "malformed"^^bad:datatype) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ? LUB<<List<ottr:IRI>>> ?! NEList<<LUB<owl:DatatypeProperty>>>  LUB<ottr:Bot> ,  ]  ;: { o-rdf:Type(?j, ""w*".*"") , } .
foot:Template1 [ NEList<<LUB<xsd:integer>>> ?} ,  LUB<<List<owl:NamedIndividual>>> , ,  @@ zipMax |  ottr:IRI (  ) , @@  ottr:IRI (  ) \: { o-rdf:Type(?J, 23.14.15) , } 
ottr:IRI [ ?!! LUB<xsd:boolean> ,  @  ottr:IRI (  ) :: { o-rdf:Type(?N, _:b1) , o-rdf:Type(?/, "2023-01-01"^^xsd:date) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?[, ex:Type, ?aL) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
<unclosedIRI [ ?? xsd:invalidType ?B]?= ,   LUB<<List<ottr:Bot>>> ?"  , , ! ?& = ?6 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Template1 [  ] @ invalid |  ottr:IRI ( ( ( ?Z( ,, ) ) ) ( , ) ,, ) :: { o-rdf:Type(?c, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space [ ?!! List<ottr:> ] { ottr:Triple(?WQ, http://example.com/:Triple, ""K*}#*"")  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ NEList<List<owl:NamedIndividual>> ?\/g.V{ ottr:foaf:name ?0 ,  ?u , , ? LUB<rdfs:Resource> ?2 = "malformed"^^bad:datatype  NEList<<LUB<xsd:decimal>>> , ?! LUB<owl:Class> @@ zipMin |  ex::doubleColon (  ) :: BASE
ex: ! LUB<xsd:boolean> , ,  @@ cross |  ottr:IRI (  ) , @@ zipMax |  ex: (  ) :: { ottr:Triple(?r, o-rdf:Footballer, "unclosed) } 
xsd:Annotation [ List<List<List<LUB<List<t-pnd:Punned-Class-ObjectProperty>>>> ?p> ?mO @@ zipMin |  http://example.com/:Type ( ++ ++ _:b1 , ?var 1 ) @@  foot:Template2 ( ++ ottr:Annotation ) %: { ottr:Triple(?t, owl:Template2, _:b2) , } .
ottr:IRI [  ] @@ :noPrefix ?Ev ) {: { ottr:Triple(?T, foot:Triple, none) o-rdf:Type(?X, "malformed"^^bad:datatype) } ..
ottr:Template1 [ ?! LUB ?d ]  ): { ottr:Triple(?ly, o-rdf:Annotation, false) } ..
o-rdf:Template1   List<LUB>  @@ ex:Template1 ( ?KE &: { ottr:Triple(?{, ottr:Type, ?7[z) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?y, _:b1) , } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?u, xsd:Annotation, "malformed"^^bad:datatype) } .
ex::doubleColon [ none:integer ?B ]  :: BASE .
ex: [  xsd:integer ?^  , NEList<<LUB<rdfs:Resource>>> ?. , , ?? ottr: ?U ,  ] :: { o-rdf:Type(?A|, none)  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ LUB<owl:AnnotationProperty> ?* ? ?X = ?n @@ zipMax |  ex:Invalid Space ( ++ ++ ( ( ?2 , "2023-01-01"^^xsd:date ) ) ,, ) ,, ) :: BASE
:noPrefix [  @@ invalid |  ottr:IRI (  ) @@  ex:Invalid Space (  ) :: { o-rdf:Type(?w, -8+.1+) ottr:Triple(?o, ex:Footballer, 23.14.15)  } .
ottr:IRI [ ! LUB<owl:NamedIndividual>  @@ cross |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) ': { o-rdf:Type(?e, _:b2) o-rdf:Type(?6f, "unclosed) } ..
http://example.com/:Triple [ ?! xsd:boolean , , ?!! LUB<<List<owl:ObjectProperty>>> ,   %: { o-rdf:Type(?8, 23.14.15) ottr:Triple(?0, foot:Template2, "malformed"^^bad:datatype) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: [ none:foot:clubHistory ?U , ! xsd:date ?%  ]  :: { o-rdf:Type(?V, 23.14.15) ottr:Triple(?9, ex:Annotation, "malformed"^^bad:datatype) 
ottr:IRI  @@ zipMin |  <unclosedIRI (  ) @@ zipMax |  ex::doubleColon (  ) :: { ottr:Triple(?6, o-rdf:Footballer, none) , } .
foot:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ex:Invalid Space ( ++ ++ 7+.-8+ ) :: BASE
:noPrefix [ NEList<<LUB<xsd:boolean>>> ?F , , ?!! List<xsd:invalidType> ?! LUB<<List<xsd:string>>>  ] ?: { ottr:Triple(?X, xsd:Template2, ?k[,) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Type [   badPrefix:string ?w.Q ] {  } .
ottr:Template1 ?? LUB<ottr:Bot> ?h = "malformed"^^bad:datatype @ cross |  <unclosedIRI (  ) :: { o-rdf:Type(?W, _:b1) o-rdf:Type(?u, _:b2)  } ..
http://example.com/:Annotation  ?e @@ ex:Template1 ( ?H \: { ottr:Triple(?b, o-rdf:Template2, "2023-01-01"^^xsd:date) ottr:Triple(?i, foot:Triple, "unclosed)  } 
ex:Invalid Space ? LUB<<List<owl:AnnotationProperty>>>  @@ zipMin |  ex: (  ) , @@  ottr:IRI (  ) :: { ottr:Triple(?v, ottr:Annotation, 23.14.15)  } 
ex::doubleColon ?! ottr: ?= , ? NEList<<LUB<xsd:decimal>>> , ,  @@  ottr:IRI (  ) @@ zipMin |  ex: ( "string"^^^xsd:string  ) :: {  } ..
foot:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?:!, o-rdf:Type, ?^) , o-rdf:Type(?#, _:b2) } .
ex:Invalid Space [ List<List<NEList<foot:foot:clubHistory ?f'>>> ?.ts1 ?!! ?uj,)   :: BASE
<unclosedIRI [ LUB<<List<ottr:Bot>>> ?%> ! owl:AnnotationProperty ?e = "unclosed   List<xsd:invalidType> ?A  ] @@ cross ex:Template1 ( ?S ) :: BASE .
:noPrefix [ ?? LUB<xsd:string> ?-  , ,  LUB<xsd:integer> ,  LUB<<List<xsd:boolean>>> , ,  ] :: { o-rdf:Type(?k, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [  LUB<owl:ObjectProperty> , ! LUB<<List<ottr:IRI>>>  ]  }: { o-rdf:Type(??, 23.14.15) ottr:Triple(?i, ex:Annotation, none) , } 
ottr:Template1 [ ! NEList<<LUB<xsd:date>>> ?x  ] @ zipMax |  ottr:IRI (  ) |: { ottr:Triple(?0, http://example.com/:Template2, 2+.-8+) } .
xsd:Type ?? LUB<rdfs:Datatype> ?r = "malformed"^^bad:datatype @@ invalid |  ottr:IRI (  ) ): { ottr:Triple(?R, xsd:Template1, "unclosed) } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?">, http://example.com/:Triple, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:Template2 ?!! List<List<xsd:invalidType>> ?r = (  )  :: { o-rdf:Type(?D1uF, ?Wy56#En^) ,  } 
<unclosedIRI [  ] @@ zipMax |  ex::doubleColon ( ++ ?bQ ) , @@ invalid |  ex: (  ) :: { ottr:Triple(?_h, foot:Annotation, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ List<List<( none ,  ) ,,>> ?-T , ! ?k  , , NEList<<LUB<owl:DatatypeProperty>>> ?` ?! LUB<<List<xsd:decimal>>> ,  badPrefix:string ?< @@ :noPrefix ?o ) :: BASE
ex:Template1 [ ottr:foot:clubHistory ?s0 ? owl:ObjectProperty ?& = "unclosed ,  ] :: { ottr:Triple(?w*, o-rdf:Footballer, ""i*"") } .
xsd:Type [   LUB<owl:NamedIndividual> , ,  ]  ?: { ottr:Triple(?Y, owl:Annotation, "unclosed) ,  } ..
xsd:Annotation ?? ottr: ?l @ zipMin |  ottr:IRI ( ( _:b2 ) ) ++ ++ owl:Annotation ,, ) \: { ottr:Triple(?:, ottr:Template2, _:b1) , } .
ex:Triple [  ?. , ,  ] @@ cross |  ottr:IRI (  ) |: { o-rdf:Type(?/S, "2023-01-01"^^xsd:date) } 
ottr:IRI [ ! ottr: ?G ] @@ zipMin |  ex::doubleColon (  ) @@ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?DF, xsd:Type, ?8) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [ ?! List<List> ?`r    :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ none:decimal ?_>2 , , ? ?+ = (   , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix ?? ottr:IRI , , LUB<<List<ottr:Bot>>> ?'  @ zipMax |  ex: (  ) :: { o-rdf:Type(?co, _:b1) , 
http://example.com/:Template1 [  ?m ,  LUB<owl:ObjectProperty> ?7 = "unclosed , ?!! NEList<<LUB<xsd:date>>>  ] { ottr:Triple(?<, ottr:Annotation, _:b2) } .
ottr:IRI [   LUB<owl:DatatypeProperty> ?p = "malformed"^^bad:datatype ,  ] @@ ottr:IRI ?^ ) :: { o-rdf:Type(?Y, "malformed"^^bad:datatype) o-rdf:Type(?w, "unclosed) , } 
o-rdf:Template2  @@ cross |  ottr:IRI (  ) /: { ottr:Triple(?#, ex:Triple, none) ottr:Triple(?K, foot:Triple, "2023-01-01"^^xsd:date) , } ..
ex:Invalid Space [ ! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , , ! LUB<<List<xsd:integer>>> ,  ]  ?: { o-rdf:Type(?B, 23.14.15) o-rdf:Type(?-, "unclosed) o-rdf:Type(?1, "malformed"^^bad:datatype) ,  } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  foot:Template1 ( ++ ++ ?$f , ++ ( ""~+"" ) ) ( none ,  ) ) @@ invalid |  :noPrefix (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ List<! ?k = ( -6+.7+ ,, > ?C , NEList<ottr:Bot> ?D ? List ?.ltg9( ] @  ex:Invalid Space ( "string"^^^xsd:string ,, ) :: { o-rdf:Type(?y>, true) , } .
ex::doubleColon [ ?! LUB<<List<owl:Class>>> ?H  , ,  ] { ottr:Triple(?U, ottr:Footballer, ?od]vN) } .
ex: ?? LUB<xsd:string> ?A = "malformed"^^bad:datatype , ,   :: { o-rdf:Type(?6, 23.14.15) ottr:Triple(?h, ex:Type, "2023-01-01"^^xsd:date) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
xsd:Triple [ none:foot:clubHistory ?^ ,   List<LUB> , ?!! owl:AnnotationProperty ?X = 23.14.15 ,  NEList<<LUB<ottr:IRI>>> , ,  ] :: {  
o-rdf:Annotation [  ?S , ,  ] @@ zipMin |  ottr:IRI ( ?var 1 ) `: { ottr:Triple(?|, http://example.com/:Template2, _:b1) } 
<unclosedIRI [  LUB<<List<xsd:date>>> @@ zipMax |  ottr:IRI (  ) , @@ invalid |  ex: (  ) -: { ottr:Triple(?Jpj, owl:Template1, o-rdf:Footballer) } .
ottr:IRI [  xsd:invalidType ?O# , , NEList<List<LUB<List<rdfs:Resource>>>> ?5*) @@ ottr:IRI ?z+ ) _: { o-rdf:Type(?r`, "unclosed) , } ..
ottr:IRI [ NEList<List<>> ?Tt ? LUB<<List<rdfs:Resource>>> @@ zipMin |  ex::doubleColon ( ?var 1  ) @@ zipMax |  ex:Invalid Space (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Template1 [ ?!! ?? = ( ""M*"5*"" ) , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
:noPrefix [  ] { o-rdf:Type(?|, ?&L) ottr:Triple(?p;, owl:Type, "unclosed) } .
<unclosedIRI [ ?! NEList<<LUB<rdfs:Datatype>>> , ,  ] @@ cross ex:Template1 ( ?I ) :: { ottr:Triple(?h, o-rdf:Footballer, _:b2) , ottr:Triple(?\, http://example.com/:Triple, none) , } .
ex: ! xsd:integer ?[~4D = "malformed"^^bad:datatype , List<List<List>> ?d   LUB<t-pnd:Punned-Class-ObjectProperty> ?%   :: BASE .
ottr:IRI ?? LUB<ottr:Bot>  NEList<<LUB<xsd:decimal>>>  @ invalid |  ex: (  ) ): { ottr:Triple(?i, foot:Template2, _:b1) , } 
ottr:Annotation ?? LUB<owl:AnnotationProperty> , , ?!! owl:DatatypeProperty  @@  <unclosedIRI (  ) *: { o-rdf:Type(?eoH, false) } ..
ottr:IRI [  @@ zipMin |  ex:Invalid Space (  ) , @@ cross |  ex: (  ) ': { ottr:Triple(?$, ex:Triple, "malformed"^^bad:datatype) , } ..
http://example.com/:Triple [ ?!! owl:ObjectProperty ?! LUB<<List<owl:Class>>> , ,  ] @@ zipMax |  ottr:IRI (  ) @@ invalid |  ex: ( ( , )  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon   ?_Zni   :: { ottr:Triple(?b, ottr:Annotation, ?H{) ,  
ex:Invalid Space [ foot:foaf:name ?=;3 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?o, owl:Template1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?<V"Iy, ""c+"") } ..
<unclosedIRI [ ! NEList<<LUB<ottr:Bot>>> , ,  ?/ ,  @@ cross ex:Template1 ( ?C ) :: { ottr:Triple(?Y, o-rdf:Type, none) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ? List<List> ?z = -4+ ] :: BASE .
ex:Template2 List<LUB<rdfs:Datatype>> ?S , ,  @  ottr:IRI (  ) >: { ottr:Triple(?O0, xsd:Footballer, _:b2) } 
ottr:IRI [  LUB ?L , ,  ]  !: { ottr:Triple(?4, foot:Annotation, "unclosed) , o-rdf:Type(?@, 23.14.15) , } .
<unclosedIRI [ ?? NEList<<LUB<xsd:decimal>>> ?9 = "unclosed , ,  ] @@ cross |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) {: { o-rdf:Type(?G:, "2023-01-01"^^xsd:date) } 
ottr:IRI [ ? xsd:invalidType ?V , , ?! LUB<owl:ObjectProperty> ?X9 = "malformed"^^bad:datatype ] @@ o-rdf:Annotation ?6 ) :: BASE
:noPrefix ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  ]: { ottr:Triple(?Zl, ottr:Template2, ?1) } ..
ex:Invalid Space [  @ zipMax |  ex::doubleColon ( "string"^^^xsd:string , ++ ?W%ikT8G true ) :: BASE .
ex: [   List<ottr:> , ! ?=  List<rdfs:Resource> ?_ , , List<?!! NEList<<LUB<owl:Class>>> ?Q > ?I none:foaf:name ?( , , ?? LUB<<List<ottr:IRI>>> , ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
<unclosedIRI [  ?F ,  LUB<<List<owl:DatatypeProperty>>> ?[  ] { o-rdf:Type(?~#, _:b2) o-rdf:Type(?,, 23.14.15) , } .
owl:Triple [ ?? NEList<<LUB<xsd:date>>> , ?! LUB<xsd:boolean> ,  ] @@ invalid |  http://example.com/:Template1 ( ( , ) ,, ) :: { o-rdf:Type(?M, "2023-01-01"^^xsd:date) , o-rdf:Type(?R, _:b1) } .
xsd:Type   NEList<<LUB<xsd:integer>>> ?g  @@ zipMin |  ex::doubleColon (  ) , @@ cross |  :noPrefix (  ) _: { ottr:Triple(?q, foot:Footballer, "unclosed) } 
ex:Template1 ?! LUB<<List<xsd:string>>> , ?? badPrefix:string ?} @@ invalid |  :noPrefix (  ) @@  <unclosedIRI (  ) ,: { o-rdf:Type(?o<, none) , } ..
ottr:Annotation [ xsd:o-rdf:Type ?!t , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ] :: { ottr:Triple(?-, http://example.com/:Triple, ?x) , } .
ottr:IRI [ List<List<LUB>> ?L1ShWJ ] @@ zipMax |  :noPrefix ( ?w ) @@ zipMin |  ex::doubleColon ( ++ ++ ( _:b2 ,, ) , ++ (  ) ) ,, ) :: BASE
<unclosedIRI [ ?!! owl:NamedIndividual ?2 = 23.14.15 , ?! LUB<rdfs:Resource>  @@ cross ex:Template1 ( ?V0 ) :: { o-rdf:Type(?*, "unclosed) o-rdf:Type(?_, "malformed"^^bad:datatype) } .
ex:Invalid Space ?? xsd:invalidType ?I , ,  ?Z  ,  @ invalid |  ottr:IRI ( ( , )  ) :: {  
<unclosedIRI ? NEList<<LUB<ottr:IRI>>> ,  @@  ottr:IRI (  ) ]: { ottr:Triple(?C, owl:Template1, none) ,  } ..
ex:Footballer [ NEList<! LUB<<List<owl:DatatypeProperty>>> ?N > ?E ] @@ invalid |  ottr:IRI (  ) , @@ cross |  :noPrefix (  ) |: { o-rdf:Type(?FYD, true) , } 
xsd:Template2   NEList<<LUB<rdfs:Datatype>>> ?7  , ,   {: { ottr:Triple(?B, foot:Annotation, _:b1) o-rdf:Type(?K, 23.14.15)  } ..
ottr:IRI [  ] @@ cross |  xsd:Template1 ( ?~ ,, ) , @@ zipMin |  ex: ( ++ ++ -9+.2+ ) :: { ottr:Triple(?(O+', http://example.com/:Footballer, _:b2) 
ex:Invalid Space [ ottr:foot:clubHistory ?@ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon ? LUB<<List<xsd:string>>> ?*} = 23.14.15 , ?! List<badPrefix:string> ?U = ( ( "unclosed ,,  ) List<NEList<<LUB<owl:Class>>>> ?,I  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix [  LUB<owl:NamedIndividual> @@  <unclosedIRI (  ) @@ invalid |  :noPrefix ( ++ ( ( _:b1 ,, ) , 7+ ) ) "string"^^^xsd:string , ?var 1 ) :: { o-rdf:Type(?_, ?D) , } .
foot:Template2 [ ?!! ?p  LUB<ottr:Bot> ?BY ,   ottr: ?9 ] ?: { o-rdf:Type(?K, false) , o-rdf:Type(?/-, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
o-rdf:Annotation ! owl:ObjectProperty , ,  @@ zipMax |  ottr:IRI (  ) :: { o-rdf:Type(?R, ex:Triple) , o-rdf:Type(?G, "2023-01-01"^^xsd:date) } .
ottr:Template1 [  LUB<<List<xsd:decimal>>> ?; = "malformed"^^bad:datatype ?? LUB ?= ,  ] @@ cross ex:Template1 ( ?tsf ) ^: { ottr:Triple(?M8, owl:Type, ""c*"") , } ..
ottr:IRI [ List<?? owl:DatatypeProperty> ?l ] @ zipMax |  ex::doubleColon ( ( , ) ,  ) .: { ottr:Triple(?6, o-rdf:Template2, none) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @: { o-rdf:Type(?]k, "2023-01-01"^^xsd:date) , } .
owl:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?), ottr:Template2, ?P2) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?! NEList<<LUB<xsd:integer>>> ?W   ] :: { ottr:Triple(?D, http://example.com/:Template1, "unclosed) } .
ex: [ ottr:foaf:name ?s ,  ?{ ] @@ zipMax |  ex::doubleColon (  ) @@ invalid |  <unclosedIRI (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
:noPrefix  LUB<xsd:decimal> , ,   xsd:string ?.`c = 23.14.15 @@ cross |  ex:Invalid Space ( ( , ) ,, ) :: BASE .
foot:Triple [ List<List<LUB>> ?b , , ?!! xsd:invalidType ?<  @@ zipMin |  ex:Type ( ++ ++ ?5 ) , @@  ottr:IRI (  ) :: BASE
xsd:Footballer ?? LUB<<List<ottr:Bot>>> ,  @@ cross ex:Template1 ( ?* ) :: { ottr:Triple(?I, o-rdf:Template1, -9+.5+) ottr:Triple(?x, o-rdf:Triple, "malformed"^^bad:datatype) } 
ex: ! ?E = ?i @ cross |  ex:Invalid Space ( ( none ,, ) , ++ ""%*Q[*"" ( false , 23.14.15 ) ) ,, ) *: { o-rdf:Type(?A, _:b2) , } ..
ex:Footballer [  ?o , , ? LUB<<List<owl:AnnotationProperty>>> ,   =: { ottr:Triple(?Z, foot:Template2, ex:Template2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
owl:Footballer [  List<List> ?dC = ?} ] @@  ottr:IRI ( ++ ++ ( ?g ,  ) ) ,  ) @@ invalid |  ex::doubleColon ( ?var 1 ++ ( ""r+"" ) ,, ) :: {  } .
ex: [ ?! List<LUB<<List<t-pnd:Punned-Class-ObjectProperty>>>>  ] { ottr:Triple(?H, ottr:Template1, 0+) } .
ex:Invalid Space [   LUB<xsd:decimal> ?z = "unclosed , ,   :: { o-rdf:Type(?:, 23.14.15) o-rdf:Type(?O, "2023-01-01"^^xsd:date) ,  } .
<unclosedIRI ?!! ?2R  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?0/ :: { ottr:Triple(?#, foot:Triple, ?AfVG) , 
:noPrefix [ NEList<<LUB<xsd:integer>>> ?K , , xsd:foot:clubHistory ?t ?? xsd:string  ?5 ! badPrefix:string ?B , ? LUB<owl:Class>  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation LUB<List<xsd:boolean>> ?`m^  ?" ,  @@ zipMax |  xsd:Type (  ) , @@ zipMin |  o-rdf:Template2 ( none ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ex:Invalid Space   -: { ottr:Triple(?EX*, http://example.com/:Template2, "malformed"^^bad:datatype) o-rdf:Type(?P, _:b1)  } ..
foot:Triple [   LUB<owl:DatatypeProperty> ?] = "malformed"^^bad:datatype , , ?! NEList<<LUB<ottr:IRI>>>  @ cross |  xsd:Template1 (  ) ?: { ottr:Triple(?7, http://example.com/:Footballer, true) , } ..
http://example.com/:Annotation [ ?! xsd:invalidType ?q , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex: [ ?!! NEList<<LUB<owl:AnnotationProperty>>> ] { o-rdf:Type(?@g, ?#QI) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Zm, o-rdf:Type, 23.14.15) ottr:Triple(?4y, owl:Triple, none) } .
ottr:IRI [ ? LUB<<List<owl:DatatypeProperty>>> , ,   LUB<owl:NamedIndividual>  ] @@ zipMax |  <unclosedIRI (  ) , @@ cross |  ex::doubleColon (  ) :: {  
ex:Invalid Space [  List<List> , ?? ottr:IRI , ,  @@ zipMin |  :noPrefix (  ) ,: { ottr:Triple(?59, foot:Footballer, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2 NEList<List<LUB<<List<rdfs:Resource>>>>> ?0 , , ! LUB<<List<xsd:date>>> ?J` = "malformed"^^bad:datatype , , ( ?P< ,, ) ) ?1H , , ottr:boolean ?EaG @@ ex:Template1 ( ?bY :: BASE .
ex:Invalid Space [  @@ invalid |  xsd:Template1 ( "string"^^^xsd:string  ) @@  <unclosedIRI (  ) :: { o-rdf:Type(?'~f, "unclosed) } .
ottr:Type [  ?B = ?!:K. ]  >: { o-rdf:Type(?iec, 4+) } 
http://example.com/:Triple [   LUB<<List<xsd:decimal>>> ,  @ zipMin |  ottr:IRI (  ) *: { ottr:Triple(?(, xsd:Triple, "2023-01-01"^^xsd:date) o-rdf:Type(?_, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } 
ottr:IRI [  ] @@ cross ex:Template1 ( ?qp ) :: { ottr:Triple(?f, owl:Footballer, false) o-rdf:Type(?OE, ?() 
foot:Triple [ List<NEList<List<List>>> ?j , ?! LUB<owl:NamedIndividual> ?-DP@tK   :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ?? ?Z = ?= ? LUB<<List<xsd:decimal>>> , , ?!! NEList<<LUB<owl:Class>>>  ] { o-rdf:Type(?h, _:b1) , ottr:Triple(?2, ottr:Template1, "2023-01-01"^^xsd:date) , } .
ex: foot:integer ?Q  xsd:boolean ,   xsd:integer  ?. @@ invalid |  <unclosedIRI (  ) , @@ zipMin |  :noPrefix (  ) :: BASE .
:noPrefix [ ! LUB<rdfs:Resource> ! LUB<<List<ottr:IRI>>>  ] @  ex:Invalid Space (  ) {: { o-rdf:Type(?4, "malformed"^^bad:datatype) , o-rdf:Type(?9, none) , o-rdf:Type(?g, _:b2) ,  } .
http://example.com/:Type [ ? LUB<t-pnd:Punned-Class-ObjectProperty> , ,   xsd:date ,  ] @@ cross |  :noPrefix (  ) ?: { o-rdf:Type(?Y, o-rdf:Template2) o-rdf:Type(?B, "unclosed) , } ..
xsd:Annotation [ ?? xsd:string  ] @@ zipMin |  :noPrefix (  ) @@ zipMax |  ottr:IRI (  ) =: { o-rdf:Type(?;, 23.14.15) } 
<unclosedIRI  @@ zipMax |  ex:Invalid Space (  ) , @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?Q, none) , ottr:Triple(?*, ottr:Template1, _:b2)  
o-rdf:Triple [ ?! NEList<<LUB<xsd:integer>>> , ,  @@  ex::doubleColon (  ) ]: { ottr:Triple(?g, owl:Template2, ?D) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ xsd:foot:clubHistory ?Z#F ]  :: { o-rdf:Type(?sfyUw`, -3+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix [ ?? LUB ?z ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Type [ ? NEList<List<ottr:>> ?R = 23.14.15 , ! ?M  NEList<  xsd:string ?3 = "malformed"^^bad:datatype> ?2 , LUB<<List<ottr:Bot>>> ?{ , ,  LUB<owl:AnnotationProperty> ?+ = "malformed"^^bad:datatype , , List< List ?[> ?; , , ?!! xsd:date ?1 = "unclosed ,  ] :: BASE .
xsd:Footballer ? owl:DatatypeProperty , , ?!! t-pnd:Punned-Class-ObjectProperty @@ ex:Template1 ( ?- :: { ottr:Triple(?x,, http://example.com/:Annotation, true) ottr:Triple(?|, ex:Triple, 23.14.15) , } ..
ex::doubleColon [ LUB<List<owl:Class>> ?= @ cross |  ottr:IRI ( ++ ++ ?p ) !: { ottr:Triple(?S, ex:Template1, "unclosed) , } .
ex::doubleColon ?!! NEList<<LUB<xsd:decimal>>>  =: { ottr:Triple(?6, http://example.com/:Template1, "2023-01-01"^^xsd:date) , o-rdf:Type(?a, _:b1)  } ..
ottr:IRI [  @ invalid |  ex:Invalid Space ( ( , ) ,  ) :: { ottr:Triple(?6, owl:Template2, none) , o-rdf:Type(?v, _:b2)  
o-rdf:Annotation [ NEList<NEList<<LUB<owl:DatatypeProperty>>>> ?)ln ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon ?!! ?5 = 23.14.15 ? ottr: ?W7 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross |  <unclosedIRI ( ++ ?9 ,, ) _: { o-rdf:Type(?c, ?r) } ..
ex: [ ?? List<LUB<owl:Class>> ?] = ?, , , ?! List<badPrefix:string> ?e = 23.14.15 , , ! ottr:Bot  LUB<<List<owl:ObjectProperty>>>  ] { o-rdf:Type(?Z, ""R+"") , } .
:noPrefix [ ottr:foaf:name ?F , ,  ?L , ,   LUB<<List<xsd:decimal>>> , ,  ] @@ zipMax |  ottr:IRI (  ) , @@  ex::doubleColon ( "string"^^^xsd:string ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple NEList<List<List<List<List<! xsd:invalidType ?">>>>> ?* , LUB<xsd:date> ?Ng  :: { o-rdf:Type(?D, 9+.-8+) o-rdf:Type(?w, http://example.com/:Type) , } 
foot:Footballer ?! LUB<<List<xsd:string>>> , ,  @@ zipMin |  :noPrefix (  ) @@ zipMax |  ottr:IRI (  ) /: { o-rdf:Type(?\, "2023-01-01"^^xsd:date) ottr:Triple(?M, ottr:Template1, "unclosed) } .
ex:Template1 [ ?? LUB ?o ] @@ ex:Template1 ( ?; `: { ottr:Triple(?E|y=, xsd:Annotation, false) , } .
ex:Footballer [ List<List<LUB<List<ottr:Bot>>>> ?G , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix [  ] @@ zipMin |  ottr:IRI ( ?var 1 ,, ) @@ invalid |  ex::doubleColon ( ++ ?~Pj ( (  ) ) ) ,  ) :: {  
<unclosedIRI ?! List<LUB<<List<rdfs:Datatype>>>> ?giW = "malformed"^^bad:datatype @  ex: ( ++ ++ _:b2 ) :: BASE .
ex:Invalid Space [ ?? owl:Class ?3  , ! LUB<owl:DatatypeProperty>  ] { o-rdf:Type(?%, "malformed"^^bad:datatype) ottr:Triple(?,, owl:Type, 23.14.15) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Triple [  ?N = ?9D6o ? ottr: ?:  :: { o-rdf:Type(?(2|E, ?l) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?b, ottr:Annotation, 6+.-8+) } 
http://example.com/:Template2 [   _: { ottr:Triple(?4v, o-rdf:Template1, false) , o-rdf:Type(?uB*, _:b1) } .
ottr:IRI List<badPrefix:string> ?a   ): { ottr:Triple(?0, foot:Type, none) ,  } ..
ottr:IRI [ xsd:foot:clubHistory ?8 ,   NEList<<LUB<ottr:IRI>>> ,  ]  (: { o-rdf:Type(?>, "2023-01-01"^^xsd:date) o-rdf:Type(?Z, "unclosed)  } 
ex::doubleColon LUB<List<xsd:integer>> ?o( , ,  @ zipMin |  ottr:Template2 (  ) :: BASE .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?q,K, owl:Type, ?)jIBe:^) , o-rdf:Type(?[Jtn{}, "2023-01-01"^^xsd:date) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ LUB<<List<ottr:Bot>>> ?Xf , ?? NEList<<LUB<rdfs:Datatype>>> ?~5= = "unclosed ] @@ invalid |  ex: ( ( , ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?C, ex:Footballer, false) ottr:Triple(?7, http://example.com/:Template1, 8+.-3+) , } ..
ex:Invalid Space [  List ?Y   List<badPrefix:string> , , ?!! NEList<owl:Class> , , ? LUB<xsd:decimal> ?& = (  ) , , ?! ?m  ] :: {  
:noPrefix [ xsd:foot:clubHistory ?l , , ! LUB<owl:AnnotationProperty> ?s = "malformed"^^bad:datatype , ,   LUB<<List<xsd:string>>>  @@  ex: (  ) , @@ zipMax |  ottr:IRI (  ) :: BASE
foot:Annotation [  ] @@ cross |  ex: (  ) @@ invalid |  xsd:Template2 (  ) {: { ottr:Triple(?', o-rdf:Triple, "malformed"^^bad:datatype) } 
ottr:IRI [ ?? LUB<<List<rdfs:Resource>>>  ] @@ ex:Template1 ( ?46 `: { ottr:Triple(?U, o-rdf:Triple, "unclosed) , o-rdf:Type(?a, none) } .
ex:Invalid Space List<List<>> ?;  ?2   ^: { ottr:Triple(?b9, xsd:Annotation, ""/*"") , } 
ottr:IRI [   NEList<LUB<ottr:IRI>> ] { o-rdf:Type(?E4L^, ?;) } .
foot:Template2 [ ?! List<LUB>  @@ invalid |  :noPrefix (  ) :: { ottr:Triple(?), owl:Annotation, "2023-01-01"^^xsd:date) o-rdf:Type(?#, "unclosed) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMax |  ex:Invalid Space ( ++ ++ ( ""/*"" ) ) ) ~: { o-rdf:Type(?,, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?!! NEList<<LUB<owl:NamedIndividual>>> , ,  LUB<<List<xsd:boolean>>> , xsd:foot:clubHistory ?F , ,  ] @@  ottr:IRI (  ) , @@ zipMin |  ex::doubleColon (  ) :: BASE
xsd:Footballer [ ?? xsd:date ?S0: = ?rA , ! badPrefix:string ?' , LUB<rdfs:Resource> ?e , ? ?m+i = ( 23.14.15 , ( none ,,  ) , , ! List<NEList<<LUB<rdfs:Datatype>>>> ?o = "malformed"^^bad:datatype ] :: {  } .
ottr:Template1 [  ] @@ cross |  :noPrefix (  ) @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?|, _:b2) , ottr:Triple(?}, o-rdf:Type, _:b1) , } ..
http://example.com/:Template2 [ ?? LUB<owl:Class>  @@ cross ex:Template1 ( ?! ) #: { ottr:Triple(?Y, ottr:Type, "2023-01-01"^^xsd:date) , ottr:Triple(?g, ex:Triple, "malformed"^^bad:datatype) , } 
owl:Footballer List< ?DfyWUv> ?a , NEList<<LUB<owl:DatatypeProperty>>> ?V  |: { o-rdf:Type(?zt, 4+) , } .
ex: [  ?N  , , ?!! NEList<<LUB<xsd:decimal>>> ,  ] @@  ottr:IRI ( ?var 1 ) , @@ invalid |  ex::doubleColon (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 [ ! LUB<<List<xsd:boolean>>> ?k = ( ( none ,, ) , "malformed"^^bad:datatype  List<LUB> ?%m ] {  } .
<unclosedIRI [  @@ :noPrefix ?@& ) :: { ottr:Triple(?*, foot:Type, 23.14.15) , o-rdf:Type(??C, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
:noPrefix   LUB<ottr:Bot> , ,  @ zipMax |  ex: (  ) :: { o-rdf:Type(?#, "unclosed) ottr:Triple(?u, http://example.com/:Triple, ?7) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Footballer [ ? List ?, ,   ): { o-rdf:Type(?[, _:b1) o-rdf:Type(?3, _:b2) ,  } ..
ottr:IRI ?! xsd:string  @@ cross |  ottr:IRI (  ) @@ zipMin |  ex:Invalid Space (  ) :: { o-rdf:Type(?J, 23.14.15)  } .
ottr:IRI [ ?? LUB<xsd:integer> ?r = "malformed"^^bad:datatype   ;: { o-rdf:Type(?;, _:b1) } 
ottr:IRI [   LUB<owl:AnnotationProperty> ?? List<xsd:invalidType> ?? = 23.14.15 , ?!! LUB<<List<owl:ObjectProperty>>> ?>k = ?=w , ,  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?:v1', _:b2) , } .
ottr:Triple ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  :noPrefix (  ) :: { ottr:Triple(?4, ex:Template1, ?)l) ottr:Triple(?u(, owl:Footballer, _:b1) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  LUB ?$JM  :: BASE .
ex::doubleColon [ ! ?!bX  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ NEList<List<>> ?D" , ?! NEList<<LUB<rdfs:Resource>>>  ] @@  <unclosedIRI (  ) ': { o-rdf:Type(?zLp, xsd:Annotation) ,  } 
http://example.com/:Type [ ottr:Bot ?/  ]  :: { o-rdf:Type(?N, none) , ottr:Triple(?[, foot:Template2, "malformed"^^bad:datatype)  } ..
o-rdf:Annotation [ ? LUB<<List<ottr:IRI>>> ,  @@ zipMin |  ottr:IRI (  ) @@ cross |  ottr:IRI (  ) !: { o-rdf:Type(?#, -3+.1+) , } .
ottr:IRI ?!! LUB<xsd:date> , ?! LUB<rdfs:Datatype> @@ xsd:Template2 ?|W ) &: { o-rdf:Type(?;, -0+) , o-rdf:Type(?_, 23.14.15) o-rdf:Type(?{, "2023-01-01"^^xsd:date) } ..
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ex: ( "string"^^^xsd:string ) :: {  
http://example.com/:Triple [ ! List<NEList<<LUB<xsd:decimal>>>> ?jo = ( "malformed"^^bad:datatype , (   ) , , ottr:foot:clubHistory ?N ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  ] { ottr:Triple(?E, owl:Type, ?l) , } .
<unclosedIRI [ ? List<List>  rdfs:Datatype , ?! LUB<<List<ottr:Bot>>> , ,  @@ zipMax |  ex::doubleColon (  ) , @@ zipMin |  :noPrefix (  ) :: { o-rdf:Type(?w, none)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2 [ LUB<t-pnd:Punned-Class-ObjectProperty> ?;[(A@ , , ?? NEList<LUB<xsd:boolean>> ?# = "malformed"^^bad:datatype ]  :: BASE .
foot:Footballer ?!! ?:    NEList<<LUB<ottr:IRI>>> @ cross |  ex::doubleColon (  ) ;: { ottr:Triple(?c, xsd:Template1, "unclosed) } 
ex::doubleColon [  ] @@ zipMax |  ottr:IRI (  ) @@  ex::doubleColon (  ) <: { ottr:Triple(?5, o-rdf:Annotation, 23.14.15) , o-rdf:Type(?F, _:b2) , } ..
http://example.com/:Triple NEList<<LUB<owl:AnnotationProperty>>> ?h , , List<List<( ( ?p ) ) ,, ) , >> ?< , , ! xsd:invalidType ?M @@ cross ex:Template1 ( ?s ) (: { o-rdf:Type(?z1b, ottr:Annotation) , } .
ottr:Template1 [ List<NEList<ottr:IRI>> ?T6\ , NEList<none:o-rdf:Footballer ?C> ?2 , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI  @ invalid |  ottr:IRI ( "2023-01-01"^^xsd:date , ++ ( ( ?Q ) ,, ) ) ,, ) :: { o-rdf:Type(?<, -5+) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ? ?U  ! ottr: ?Z ] { ottr:Triple(?>, http://example.com/:Template2, "unclosed)  } .
ex::doubleColon [ ?!! NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> ?$k@ = 23.14.15 , ?! LUB<owl:ObjectProperty> ] @@ cross ex:Template1 ( ?Fh ) :: BASE
:noPrefix [  List<List> ?j  @@  ex: (  ) @@ cross |  ex::doubleColon (  ) :: { o-rdf:Type(?f, ?J) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?:, xsd:Type, _:b2) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   LUB<<List<ottr:Bot>>> ?q  , , ?? LUB<<List<xsd:integer>>> ]  ,: { ottr:Triple(?y, ex:Annotation, _:b1)  } ..
foot:Template2  @@ zipMax |  ottr:IRI (  ) , @@ zipMin |  <unclosedIRI (  ) ): { ottr:Triple(?e, owl:Triple, none) , } .
xsd:Template1  LUB<<List<owl:NamedIndividual>>> ,  @@ zipMax |  ottr:IRI (  ) &: { o-rdf:Type(?x, 23.14.15) , o-rdf:Type(?S, "malformed"^^bad:datatype) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: { o-rdf:Type(?|, false) , ottr:Triple(?(qcX, http://example.com/:Annotation, ?G) } .
<unclosedIRI  @@ cross |  ottr:IRI ( "string"^^^xsd:string ) , @@  ex::doubleColon ( ++ ++ ( 6+ ) ,, ) :: { ottr:Triple(?t., ex:Footballer, "2023-01-01"^^xsd:date) , } .
ex: [  LUB<owl:DatatypeProperty> ] {  } .
:noPrefix [  ?Q: , , ? LUB<<List<rdfs:Resource>>>  @ invalid |  ex:Invalid Space (  ) :: { o-rdf:Type(?j, _:b1) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Template1 [ xsd:date ?8 ,   xsd:string ?~  ] :: BASE .
ex:Invalid Space [ ! List<LUB>  ] @@ zipMax |  ottr:IRI (  ) @@ zipMin |  ottr:IRI (  ) |: { o-rdf:Type(?E, _:b2) , ottr:Triple(?S, foot:Type, "unclosed) , } ..
xsd:Triple ?? ?]  ,   $: {  } 
owl:Type List<NEList<<LUB<xsd:integer>>>> ?> ?! List ?I , ?!! LUB<<List<rdfs:Datatype>>> ?T = "unclosed ! owl:ObjectProperty ?5 = 23.14.15 , ,  @@ ex:Template1 ( ?r `: { o-rdf:Type(?p, "","") , o-rdf:Type(?akP_, -2+.-8+) , } ..
ottr:Template2 [  ] { ottr:Triple(?4, o-rdf:Type, ?kv) , } .
ottr:IRI [ ?! ?t  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?? NEList<<LUB<xsd:integer>>> ?`  , ,  ] @@  ex:Invalid Space (  ) *: { o-rdf:Type(?d, "unclosed) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: ! List ?Go^Q none:foot:Triple ?L'$@*H0 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ cross |  ex::doubleColon ( ?var 1 ) :: BASE
ex:Invalid Space [  ?f ,   rdfs:Resource  @@ zipMax |  ex:Annotation ( ( , )  ) , @@ invalid |  <unclosedIRI ( 2+.-4+ ,, ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer   :: { ottr:Triple(?\, http://example.com/:Template1, _:b1) , ottr:Triple(?], xsd:Footballer, "malformed"^^bad:datatype) o-rdf:Type(?(, "2023-01-01"^^xsd:date) } 
ottr:IRI [  ] @@ zipMax |  ex:Invalid Space (  ) @@ zipMin |  ottr:IRI ( "string"^^^xsd:string ,  ) {: { o-rdf:Type(?n, _:b2) o-rdf:Type(?;, 23.14.15) } .
ottr:IRI [ LUB<<List<xsd:boolean>>> ?-<eE ] @@ cross ex:Template1 ( ?MN ) ,: { ottr:Triple(?., owl:Type, ex:Template2) } 
<unclosedIRI ! ottr: ?M , ,  @@ zipMax |  ottr:IRI (  ) , @@ invalid |  ex::doubleColon (  ) :: {  } ..
foot:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ?!! ?t~  , ?? List<LUB<<List<xsd:date>>>> ] @@ zipMin |  ex:Invalid Space ( ++ ++ -5+ ) @@  ex: ( "string"^^^xsd:string , ++ ( ?S ) ,, ) :: BASE
xsd:Template2 [  @@ cross |  ex::doubleColon (  ) :: { o-rdf:Type(?T+, _:b1) ottr:Triple(?%, o-rdf:Footballer, 23.14.15) ,  
ottr:Annotation [ ?! NEList<<LUB<owl:Class>>> ?P = 23.14.15 ottr:http://example.com/:Triple ?!*b , ,  NEList<LUB<xsd:decimal>> ?@ = ?gcr , owl:ObjectProperty ?a , LUB<List<t-pnd:Punned-Class-ObjectProperty>> ?C ? xsd:invalidType ?m4 ,   List ?L ] { o-rdf:Type(?yI\, ?i) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Template2 List< List<LUB> ?? = "malformed"^^bad:datatype> ?q List<List<>> ?{ ,  rdfs:Resource ?" = "unclosed , ?! LUB<rdfs:Datatype> , ,  @@ owl:Type ?B ) -: { o-rdf:Type(?Ov, "malformed"^^bad:datatype) } 
foot:Annotation [ ?? NEList<<LUB<ottr:IRI>>>  ]  &: { o-rdf:Type(?:, -0+.2+) , o-rdf:Type(?(, "2023-01-01"^^xsd:date) , ottr:Triple(?W, xsd:Footballer, _:b2) , } .
ottr:IRI [   LUB<<List<owl:NamedIndividual>>> ?A  @ zipMin |  ottr:IRI ( ( , )  ) ;: { o-rdf:Type(?N, none) o-rdf:Type(?}, "unclosed) ,  } ..
ottr:IRI [ foot:foot:clubHistory ?B8  ] @@ ex:Template1 ( ?X :: BASE
xsd:Template1 [ ?!! ?6 = ( ( "unclosed ,   ,, ) , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
ex: [ ?? List ?q ] :: { ottr:Triple(?PM, http://example.com/:Footballer, false) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?n, ?NI) , } .
ex:Invalid Space [   xsd:date ,  @@ invalid |  <unclosedIRI (  ) {: { o-rdf:Type(?i, "2023-01-01"^^xsd:date) , ottr:Triple(?H, ex:Type, 23.14.15)  } .
:noPrefix List<LUB<owl:NamedIndividual>> ?j ! List<xsd:invalidType> ?,  , NEList<List<>> ?' , ,  NEList<<LUB<rdfs:Datatype>>> , , ?! LUB<<List<owl:ObjectProperty>>> ?v = "unclosed , ,  @ zipMax |  ex::doubleColon ( ?var 1 ,, ) :: BASE .
foot:Annotation [ ? NEList<xsd:string> ?;wLF_ = 23.14.15 ?! LUB<<List<ottr:Bot>>> ?x*c%< = "malformed"^^bad:datatype  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ex: ?! LUB<<List<owl:AnnotationProperty>>> @@ cross |  ex: (  ) @@  ottr:IRI ( ( , ) ) .: { o-rdf:Type(?y, _:b1) , o-rdf:Type(?@, none)  } ..
o-rdf:Template2  @@ zipMin |  ottr:IRI (  ) , @@ cross |  <unclosedIRI (  ) ': { ottr:Triple(?`, owl:Triple, "malformed"^^bad:datatype) , } .
http://example.com/:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?5, foot:Template2, false) , 
ottr:IRI [ ? List<NEList<owl:Class>> ?/kz|qJnd  ] @  ex:Invalid Space ( ++ ?"tO ,, ) :: BASE .
ex: [ NEList<List<>> ?v ,  @@ invalid |  :noPrefix (  ) @@ zipMax |  <unclosedIRI (  ) :: { o-rdf:Type(?@, 23.14.15) o-rdf:Type(?y, ?p) } .
ex::doubleColon  ?K  List<ottr:> ?P , ,  @@ cross |  ex:Invalid Space (  ) , @@ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?V, owl:Type, _:b1) ,  } ..
o-rdf:Triple [ xsd:date ?u   NEList<<LUB<ottr:IRI>>> ?! badPrefix:string ?1 ! LUB<xsd:integer> ?9 = "malformed"^^bad:datatype , , ?!! LUB<<List<xsd:string>>> , ,   LUB<owl:NamedIndividual> ?$ = "unclosed , ?? LUB<owl:ObjectProperty> ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Footballer List<?! LUB<<List<owl:AnnotationProperty>>> ?! = ?7A%> ?Zc#S , ,  xsd:invalidType ?\F @@ ottr:Annotation ?h ) ;: { ottr:Triple(?lI, ex:Annotation, "malformed"^^bad:datatype) , } 
ex:Footballer ? List ?j @@ zipMin |  :noPrefix (  ) {: { o-rdf:Type(?w., _:b2) , o-rdf:Type(?], none)  } .
xsd:Footballer List<List<LUB<List<xsd:boolean>>>> ?42  /: { o-rdf:Type(?{[, 7+) o-rdf:Type(?(, "unclosed) , } ..
owl:Footballer  owl:AnnotationProperty , ?? NEList<<LUB<ottr:IRI>>>  @@ zipMax |  :noPrefix (  ) , @@ cross |  ottr:IRI (  ) :: { ottr:Triple(?l, ottr:Triple, ?K) ,  
ex::doubleColon [ ! NEList<List<LUB<<List<owl:NamedIndividual>>>>> ?8 = "malformed"^^bad:datatype @@ zipMin |  <unclosedIRI ( ++ ++ (  ) ) ,, ) :: { o-rdf:Type(?Z7_, _:b1) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:date ?[ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @ invalid |  ex:Invalid Space ( "string"^^^xsd:string ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ?! LUB<rdfs:Datatype> , ,  ] :: { ottr:Triple(?~3, foot:Type, "malformed"^^bad:datatype) ottr:Triple(?q, xsd:Template2, "2023-01-01"^^xsd:date) } .
o-rdf:Annotation [ List<xsd:invalidType> ?O , , ?!! ottr:Bot ?F  ,   LUB ?s  ?^ ? ?x  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Template1 [ NEList<List<?? ottr: ?v> ?/> ?jV"  badPrefix:string ?H , ? List ?Q ] @@ cross ex:Template1 ( ?*h ) .: { o-rdf:Type(?+G, "unclosed) , } 
ex:Footballer   NEList<<LUB<owl:Class>>> ?T  ,   NEList<<LUB<rdfs:Resource>>> ,  @@ invalid |  ottr:IRI (  ) @@  ex: (  ) ': { o-rdf:Type(?B, -7+) } ..
ottr:IRI LUB<xsd:date> ?m , , ?! ?U  , ?! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?D = "unclosed , ,   ": { o-rdf:Type(?1@o, 4+.-0+) } .
http://example.com/:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?,, ?X7) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ? NEList<<LUB<owl:Class>>> ?Z  , ?!! LUB<<List<owl:ObjectProperty>>>  ] @@ zipMax |  ottr:IRI (  ) @@ cross |  :noPrefix (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex::doubleColon none:foot:clubHistory ?a @@  ex: (  ) :: { ottr:Triple(?*4, xsd:Template2, "malformed"^^bad:datatype) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
<unclosedIRI [   List ?k , , ?! List<ottr:> , ,  @ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?=, o-rdf:Template1, _:b2)  } .
ex:Footballer [ NEList<ottr:Bot> ?-gP% ,  ?uN ?? ?1 = 23.14.15  LUB<xsd:integer> ] :: BASE
owl:Type ! List<LUB<owl:AnnotationProperty>> ?n = 23.14.15  :: { ottr:Triple(?fE, foot:Annotation, none) , o-rdf:Type(?;)dj, ""5*"") } 
ottr:Template2 [  ?b , ,  ]  %: { o-rdf:Type(?F, "2023-01-01"^^xsd:date) , ottr:Triple(?#, owl:Template2, "unclosed) } ..
ottr:IRI [ LUB<List<xsd:boolean>> ?c , , ?? badPrefix:string ?< ] @@ ex:Template1 ( ?R {: { ottr:Triple(?y, o-rdf:Template1, ottr:Triple) , } .
ex::doubleColon [ ?!! LUB ?' , , ? ?d  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?x, owl:Annotation, ?_)) , o-rdf:Type(?!., "2023-01-01"^^xsd:date) } .
http://example.com/:Type [   List<badPrefix:string> ?t = "unclosed ,  ] :: BASE .
ottr:IRI xsd:foaf:name ?^( @  ex: ( ?s , ++ ( ""&*il*"" ,  ) ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Invalid Space [  ottr:Bot ]  :: {  } .
:noPrefix [ LUB<owl:Class> ?* @@ cross |  ex:Invalid Space (  ) @@ zipMin |  <unclosedIRI (  ) /: { ottr:Triple(?j, foot:Footballer, "malformed"^^bad:datatype) ottr:Triple(?AK, o-rdf:Template1, none) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2  ?X @@ zipMax |  ex: (  ) , @@ invalid |  <unclosedIRI (  ) :: { ottr:Triple(?S}, ottr:Triple, "unclosed) , } .
ottr:IRI [ ?? NEList<<LUB<xsd:decimal>>> ,  @@ zipMin |  ottr:IRI (  ) {: { o-rdf:Type(?>, 23.14.15) , o-rdf:Type(?5, _:b1) ,  } 
ex:Triple ?! LUB<<List<xsd:string>>> ?#  @@ ottr:IRI ?7 ) +: { o-rdf:Type(?M, _:b2) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ ? LUB<<List<owl:AnnotationProperty>>> , ,  @@ cross |  ex::doubleColon (  ) @@  :noPrefix (  ) :: { ottr:Triple(?g, ex:Template1, "malformed"^^bad:datatype) 
o-rdf:Triple [  LUB<xsd:date> ?n1 = ?Y ] @@ zipMin |  <unclosedIRI ( 23.14.15 , ( , ) ++ ( ( ?V7 ,, ) ) ) ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?!! ?5?L = 6+ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
ex:Invalid Space List<LUB> ?H , ?? NEList<<LUB<ottr:Bot>>> ?E = "unclosed , , xsd:foaf:name ?T   xsd:invalidType ?O , , ! owl:NamedIndividual @ invalid |  foot:Template2 ( ++ ++ false ) :: BASE .
xsd:Annotation [  ?. , ?! owl:Class , ,  ] :: { ottr:Triple(?s, owl:Footballer, _:b1) , o-rdf:Type(?C, ?0) , } .
ottr:IRI [  ?e ! LUB<xsd:string> ,  ] @@ ex:Template1 ( ?[ }: { o-rdf:Type(?a, none) ottr:Triple(?r, http://example.com/:Type, _:b2) , } ..
ottr:Footballer [ ?! LUB<t-pnd:Punned-Class-ObjectProperty>   ~: { o-rdf:Type(?q, ottr:Template1) , o-rdf:Type(?J, "unclosed) , o-rdf:Type(?j, "2023-01-01"^^xsd:date)  } .
ex:Type ?? NEList<<LUB<rdfs:Resource>>>  @@ zipMax |  ottr:IRI (  ) , @@ invalid |  ex::doubleColon (  ) @: { ottr:Triple(?=, xsd:Annotation, _:b2) , o-rdf:Type(?k, "2023-01-01"^^xsd:date)  } 
xsd:Template2 [ List<LUB> ?@ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?4L, ?+Rx) ottr:Triple(?T, ottr:Footballer, none) , ottr:Triple(?Y, http://example.com/:Template1, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex:Invalid Space ! ?mV,CFfd  @@ ex:Template1 ( ?=& :: {  } .
ottr:IRI [   LUB<rdfs:Resource> ,  ] @@ zipMin |  ex::doubleColon ( ?: , ++ ++ (  ) ) &: { ottr:Triple(?\, owl:Type, 23.14.15) } .
<unclosedIRI [  xsd:invalidType ?k! , , none:o-rdf:Annotation ?a ?!! LUB<<List<xsd:decimal>>> ?% = "malformed"^^bad:datatype , ?! NEList<<LUB<ottr:Bot>>> , , NEList<List<>> ?5 , ? t-pnd:Punned-Class-ObjectProperty ?<  , ?? NEList<<LUB<xsd:boolean>>> ,  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ! owl:Class ?D  @@ cross |  :noPrefix (  ) , @@  <unclosedIRI ( ?var 1 ,, ) :: BASE
ex:Triple [ ? NEList<<LUB<xsd:date>>> , ,  ] @ zipMax |  :noPrefix (  ) :: { o-rdf:Type(?#6, _:b1) , o-rdf:Type(?y, "2023-01-01"^^xsd:date) } ..
ex:Footballer [ ?! NEList<<LUB<owl:ObjectProperty>>> ?A  ,   ": { ottr:Triple(?9, foot:Template1, "malformed"^^bad:datatype) , o-rdf:Type(?N, _:b2) ,  } 
owl:Triple [ ? LUB<<List<xsd:string>>> ,  ] @@ invalid |  ottr:IRI (  ) @@ zipMin |  ottr:IRI (  ) ': { o-rdf:Type(?[, none) , o-rdf:Type(?r, "2023-01-01"^^xsd:date)  } 
ottr:IRI [ NEList<? NEList<owl:Class> ?D* = 23.14.15> ?=3 ,   :: BASE .
ex::doubleColon [ ! NEList<<LUB<rdfs:Resource>>>  ] @@ invalid |  <unclosedIRI (  ) @@  ex:Invalid Space (  ) :: { ottr:Triple(?2, foot:Template1, "2023-01-01"^^xsd:date) , } .
xsd:Template2 [ LUB<<List<xsd:integer>>> ?] , ,  List ?x ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] `: { o-rdf:Type(?;, ?o) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex: ?? LUB<ottr:Bot> ,  @@ zipMax |  ottr:IRI (  ) , @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?h, -4+.3+) 
ottr:Footballer [   List<LUB> , ,  ] @@ :noPrefix ?! ) :: { o-rdf:Type(?j, _:b2) o-rdf:Type(?F, "malformed"^^bad:datatype) } .
ottr:IRI [ ?! NEList<<LUB<owl:DatatypeProperty>>> ?#  ] @ cross |  ottr:IRI (  ) ': { o-rdf:Type(?S, 23.14.15) , o-rdf:Type(?U, none) } ..
http://example.com/:Annotation ?!! ?_V = ( 9+ ,, ) , , foot:foot:clubHistory ?y , , List<LUB<owl:NamedIndividual> ?m> ?Q ,  ?| ?? ottr: ?p`E? @@ invalid |  ex:Type ( "string"^^^xsd:string ,, ) @: { o-rdf:Type(?'^, ""9"") } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon [ ?!! ottr: ?n @@ foot:Type ?X ) :: { ottr:Triple(?=, http://example.com/:Annotation, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [   ?> = (  ) ottr:foot:clubHistory ?^ , ,  ] { o-rdf:Type(?%], _:b2) , ottr:Triple(?K, ex:Template1, "2023-01-01"^^xsd:date) , } .
ex:Invalid Space [ List<LUB<xsd:integer>> ??85 , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  <unclosedIRI (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix List<List<LUB<ottr:Bot>>> ?t  NEList<List<LUB>> @ cross |  ex: ( ( (  ) ) ) ) :: BASE .
o-rdf:Footballer [ ! LUB<<List<xsd:string>>> ?e = "malformed"^^bad:datatype , ?? owl:DatatypeProperty , ,  ] &: { o-rdf:Type(?i, ?W) } ..
xsd:Template2 [ ?! NEList<<LUB<owl:Class>>> ?D = ?k , , ? xsd:date ? NEList<<LUB<xsd:boolean>>> , ?! xsd:decimal  :: { o-rdf:Type(?0R, none) } 
owl:Triple [ ? LUB<<List<owl:ObjectProperty>>> ] @@ invalid |  ottr:IRI (  ) @@ zipMin |  ottr:IRI (  ) !: { ottr:Triple(?p, ottr:Triple, "unclosed) , o-rdf:Type(?6, _:b1) , o-rdf:Type(?4, 23.14.15) } .
xsd:Template2 [ ? NEList<<LUB<owl:AnnotationProperty>>>  ] @@ zipMax |  ottr:IRI (  ) , @@  ex::doubleColon (  ) ]: { o-rdf:Type(?y, "unclosed) } ..
ottr:Type [ ottr:foaf:name ?X @@ cross ex:Template1 ( ?cJ ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?jR, ex:Triple, "malformed"^^bad:datatype) ,  
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [  ] :: { o-rdf:Type(?m, ?$V%wZ) } .
:noPrefix [  NEList<<LUB<owl:DatatypeProperty>>> , , ? LUB<xsd:date> ?F  ,  ] @ invalid |  ex:Invalid Space ( "string"^^^xsd:string ,  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ! ottr:Bot  @@  <unclosedIRI (  ) @@ cross |  :noPrefix (  ) :: { ottr:Triple(?4, foot:Footballer, "unclosed) o-rdf:Type(?|, 6+) , } .
o-rdf:Annotation [ ?!! LUB<<List<xsd:integer>>> ?^ = "malformed"^^bad:datatype ?? badPrefix:string ?? ]  \: { ottr:Triple(?l{, http://example.com/:Template1, _:b2) , } 
xsd:Template2 [ ?! List<ottr:>  ] @@ zipMax |  ottr:IRI (  ) ': { o-rdf:Type(?U, "2023-01-01"^^xsd:date) , ottr:Triple(?s, owl:Annotation, none) } ..
<unclosedIRI   ?9 = ?u@ @@ zipMin |  ex::doubleColon ( _:b1 ++ ++ (  ) ) ) , @@ cross |  ottr:IRI ( ++ ( ?S+I , true ,, ) ,, ) ~: { ottr:Triple(?8, o-rdf:Type, ""/*_e*"") , } .
ex:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?e, xsd:Type, ?2%) 
:noPrefix [ ?? List<xsd:invalidType> ?& = ( foot:Footballer ,, ) @ zipMin |  ottr:IRI ( ( "unclosed , ?*tM6- ,, ) ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?!! List ?K , ,  ?x  ] { o-rdf:Type(?(, 23.14.15) o-rdf:Type(?j, _:b1) , } .
ex::doubleColon [   xsd:date ?, = "unclosed ,  ] @@ zipMax |  ex: (  ) , @@ invalid |  ex:Invalid Space (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Template2 ottr:foaf:name ?7)r|9wU , ! ?b  , NEList<<LUB<owl:Class>>> ?; ? LUB<xsd:string> , ?! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?o = "malformed"^^bad:datatype , ,  LUB<owl:ObjectProperty> ?[ = 23.14.15 ,   :: {  } .
http://example.com/:Annotation [ LUB<rdfs:Datatype> ?5 ] @@ cross |  ottr:IRI (  ) <: { ottr:Triple(?y, ottr:Triple, none) , o-rdf:Type(?n, "2023-01-01"^^xsd:date) ,  } ..
o-rdf:Template1 [ ? LUB<<List<ottr:Bot>>> @@ cross |  ottr:IRI (  ) @@  ottr:IRI (  ) (: { ottr:Triple(?], foot:Template1, _:b2) , } 
ex::doubleColon ?! NEList<List<LUB<<List<owl:DatatypeProperty>>>>> ?C = ?:H. , ! ottr: ?Y' @@ ex:Template1 ( ?0 ]: { o-rdf:Type(?k, -8+.5+) } .
http://example.com/:Triple [ ?! LUB<<List<owl:AnnotationProperty>>> ?' = ?_2\ ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] !: { o-rdf:Type(?[s, ?:) ottr:Triple(?&, o-rdf:Type, "unclosed) } 
ex::doubleColon [   NEList<<LUB<xsd:decimal>>> ( true ,  ) ,, ?( ,  ] @@  ottr:IRI ( ( , ) ++ ++ ( ?V1 ) ) ) :: BASE
<unclosedIRI  List<LUB> , ,  @@ cross |  :noPrefix (  ) , @@ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?g, foot:Template2, 23.14.15) , 
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMax |  xsd:Footballer ( 0+ , ++ ""<*!d*"" ,, ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ foot:foot:clubHistory ?? LUB<owl:DatatypeProperty> ?ykC , , ?!! ?/Ki = (  ) ?? owl:ObjectProperty ?{ = "malformed"^^bad:datatype ] {  } .
owl:Annotation ? NEList<<LUB<rdfs:Resource>>> , ! badPrefix:string ?D   :: { ottr:Triple(?J, ex:Type, "2023-01-01"^^xsd:date) , o-rdf:Type(?f, _:b2) , o-rdf:Type(?-, _:b1) o-rdf:Type(?9, none) ,  } .
ex:Triple [  ?G , ,  ] @@  ex::doubleColon (  ) @@ zipMin |  :noPrefix (  ) /: { o-rdf:Type(?], _:b1) o-rdf:Type(?H, "malformed"^^bad:datatype)  } ..
ottr:IRI  NEList<<LUB<owl:NamedIndividual>>> ?l = "unclosed , , ?! rdfs:Datatype , ,   ^: { o-rdf:Type(?B, 23.14.15) , } ..
ottr:IRI [  LUB ?9 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE
<unclosedIRI [ none:foot:clubHistory ?Qc ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Footballer [  ?)K , ?!! ?z = (   , ,  ] :: { o-rdf:Type(?aP, ""G*US*"") , 
ex: ? LUB<owl:Class> @@ cross |  :noPrefix (  ) :: { ottr:Triple(?m, http://example.com/:Template1, ?`) o-rdf:Type(?-, "malformed"^^bad:datatype) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ?? owl:AnnotationProperty , , ! NEList<<LUB<xsd:date>>> ?v  ,  @@ invalid |  ex::doubleColon (  ) @@ zipMax |  <unclosedIRI (  ) \: { ottr:Triple(?u, xsd:Type, ottr:Annotation) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
o-rdf:Template2 [ ?! List<badPrefix:string> ,  ] @@ ex: ?1 ) :: { o-rdf:Type(?[/, "unclosed) , o-rdf:Type(?Y, _:b2) o-rdf:Type(?R, none) } .
foot:Triple LUB<<List<owl:ObjectProperty>>> ?X @@ zipMin |  ottr:IRI (  ) , @@  ottr:IRI (  ) {: { o-rdf:Type(?;, _:b1)  } ..
ex:Footballer [   LUB<<List<ottr:Bot>>> ]  -: { o-rdf:Type(?t, "2023-01-01"^^xsd:date) ottr:Triple(?j, xsd:Template2, 23.14.15)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?V, none) , 
<unclosedIRI [ foot:foot:clubHistory ?K  ] $: { ottr:Triple(?"', owl:Template2, ?(U) ottr:Triple(?<, ottr:Template1, "2023-01-01"^^xsd:date) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation [ List<LUB<ottr:IRI>> ?{ ] @@ invalid |  ottr:IRI (  ) @@ zipMax |  :noPrefix (  ) :: BASE
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
ex:  @@  ottr:IRI (  ) , @@ zipMin |  ex::doubleColon (  ) :: { ottr:Triple(?g, http://example.com/:Footballer, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Triple [ ?!! LUB ?! , , ?! LUB<<List<owl:NamedIndividual>>> ?zuiTANa = "unclosed , ? owl:ObjectProperty ! NEList<NEList<<LUB<rdfs:Resource>>>> ?7v   :: BASE .
xsd:Type [ LUB<List<t-pnd:Punned-Class-ObjectProperty>> ?4 ?? ?W = ?P @ cross |  ex:Triple ( ++ 3+ ,, ) :: { o-rdf:Type(?XY, true) } .
owl:Template1 [   badPrefix:string ?d#_ @@ ottr:IRI ?qJ ) _: { o-rdf:Type(?F, _:b2) } 
o-rdf:Type [ List< xsd:invalidType ?M> ?} ? LUB<<List<xsd:string>>> , ,  List<ottr:> ] @@ zipMin |  ottr:Annotation ( "string"^^^xsd:string  ) <: { ottr:Triple(?^, ex:Annotation, 23.14.15) } 
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  foot:Type ( "unclosed , ++ ++ ( ?MY9 ) ) ) :: { o-rdf:Type(?+, ??}) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ? rdfs:Datatype ?a  , , ?? List ?e ] { ottr:Triple(?c, owl:Annotation, _:b1)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Invalid Space [   :: { o-rdf:Type(?L, "malformed"^^bad:datatype) 
:noPrefix [ ! LUB<xsd:string> ,   NEList<<LUB<owl:AnnotationProperty>>> ?y = "unclosed  List<xsd:invalidType> ,  ] @@ cross |  <unclosedIRI ( "string"^^^xsd:string  ) :: BASE .
ex::doubleColon [ foot:o-rdf:Triple ?. ] :: { o-rdf:Type(?I, _:b2) , } .
xsd:Template2 [  ?VA ] @@ invalid |  <unclosedIRI (  ) , @@ zipMin |  ottr:IRI (  ) #: { o-rdf:Type(?XFH,<, ""Z+"") , } 
ottr:Template1 [ NEList<LUB<<List<owl:ObjectProperty>>>> ?z , , ?! ?U  @@ invalid |  ottr:IRI (  ) @@ zipMax |  ex::doubleColon (  ) *: { o-rdf:Type(?G, 23.14.15) } ..
ex: ?!! LUB<<List<xsd:date>>> ?o  ,  @@ cross ex:Template1 ( ?1 ) @: { o-rdf:Type(?W, "2023-01-01"^^xsd:date) o-rdf:Type(?n, none) , } 
ottr:IRI [   ?m = "malformed"^^bad:datatype , NEList<List<>> ?% , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  ex:Invalid Space (  ) , @@ zipMin |  :noPrefix (  ) :: BASE .
ottr:Template2 [ ottr:foot:clubHistory ?&  List<List> ?M]  ] :: BASE
ex::doubleColon [  ] { o-rdf:Type(?G)CP@Y, ?:) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ~: { ottr:Triple(?7, ex:Template1, _:b2) } .
ex: [  @ zipMax |  <unclosedIRI ( ?var 1  ) :: { o-rdf:Type(?`, none) , ottr:Triple(?{, http://example.com/:Triple, true)  } .
xsd:Annotation ?! LUB ?d ?!! owl:DatatypeProperty ?? LUB<<List<owl:Class>>> @@ cross |  :noPrefix (  ) @@ invalid |  ex::doubleColon (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
o-rdf:Footballer [ ? NEList<<LUB<ottr:IRI>>> ?q = "unclosed  :: { ottr:Triple(?2, owl:Type, "2023-01-01"^^xsd:date) , o-rdf:Type(?F, 23.14.15) o-rdf:Type(?T, _:b1)  } 
foot:Annotation [ List<NEList<LUB<xsd:date>>> ?a ] @@ foot:Triple ?, ) |: { ottr:Triple(?/, owl:Annotation, foot:Footballer) , } ..
ottr:IRI [ ! ottr: ?D @@ zipMax |  ex:Invalid Space (  ) ;: { ottr:Triple(?B9, owl:Type, "unclosed) } ..
<unclosedIRI [ ?? LUB<<List<owl:NamedIndividual>>> ?T  , ,   :: { ottr:Triple(?D, owl:Type, ?c)  } .
o-rdf:Template1 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?-d, "unclosed) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?ht, 5+.-9+) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI NEList<List<>> ?' ,   NEList<<LUB<xsd:string>>>  @@ cross |  ex: (  ) , @@ invalid |  :noPrefix ( ?var 1 ,  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ! ?@ = ?m( ] @@  foot:Triple ( ( ?e5 ) ) ,, ) @@ zipMin |  ex:Invalid Space ( ++ _:b1 ) :: BASE .
ottr:Template2 [ ? badPrefix:string ?[ , ?!! List<ottr:> ,  ] :: { ottr:Triple(?s^!, http://example.com/:Footballer, ""P+"") } 
xsd:Template2 foot:foaf:name ?& , , ?! xsd:integer ?u = 23.14.15 , LUB<xsd:date> ?9 @ zipMax |  ex:Footballer ( ( , ) ++ ++ (  ) ,, ) :: { ottr:Triple(?0, ex:Annotation, false) } .
<unclosedIRI [  NEList<<LUB<ottr:Bot>>> ?* = "unclosed ]  {: { o-rdf:Type(?~, "malformed"^^bad:datatype) o-rdf:Type(?M, _:b2)  } ..
ottr:IRI [ ?! LUB<xsd:decimal> ? LUB<<List<owl:ObjectProperty>>> @@ zipMax |  ottr:IRI (  ) ): { ottr:Triple(?., xsd:Footballer, "2023-01-01"^^xsd:date) ottr:Triple(?=, owl:Type, ottr:Triple) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ottr:IRI [ ! ?>5;  ,  ] @@ invalid |  ex:Invalid Space ( ( , ) ?*? ) &: { o-rdf:Type(?c, 23.14.15) , } ..
ottr:Footballer [ List<xsd:invalidType> ?S , , LUB<List<owl:AnnotationProperty>> ?3   badPrefix:string ?u ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?M, foot:Template2, ?z) , ottr:Triple(?(, ex:Template1, "malformed"^^bad:datatype) } .
:noPrefix [  LUB<t-pnd:Punned-Class-ObjectProperty> ?nix = "malformed"^^bad:datatype none:foot:clubHistory ?) @@ ex:Template1 ( ?pY<W, :: BASE .
ex: ?! NEList<<LUB<owl:Class>>> ?`' = ?%  :: BASE
ex::doubleColon ?!! rdfs:Resource @@ cross |  ex: (  ) , @@  ex::doubleColon (  ) :: { ottr:Triple(?8, xsd:Type, "2023-01-01"^^xsd:date) o-rdf:Type(?0, "unclosed) ,  } 
o-rdf:Triple [ ? LUB<<List<owl:ObjectProperty>>> @@ zipMin |  :noPrefix (  ) @@ zipMax |  ottr:IRI (  ) ): { o-rdf:Type(?e, _:b1) } .
owl:Template2  @ cross |  ottr:IRI (  ) ~: { ottr:Triple(?+, http://example.com/:Annotation, -8+.9+)  } 
ex:Invalid Space [ ! badPrefix:string ?B  :: BASE
ottr:IRI [  ] @@ zipMin |  :noPrefix (  ) :: { o-rdf:Type(?-, none) , ottr:Triple(?o, o-rdf:Template2, "unclosed) } ..
ex:Triple [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?px(, owl:Footballer, ?/G) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex::doubleColon ? owl:NamedIndividual ?>.  , , xsd:foaf:name ?2W ,  NEList<<LUB<rdfs:Resource>>> ?! ?K  @ cross |  ex: ( ( ( ?h , _:b1 ) ,, ) ) ) :: BASE .
<unclosedIRI [ LUB<<List<xsd:string>>> ?Q ?? LUB<owl:DatatypeProperty> ?3 = "unclosed  ?P  ] { o-rdf:Type(?m, _:b2)  } .
http://example.com/:Type [ ?!! List<List> ?e   ] @@  ex: (  ) @@ invalid |  ottr:IRI (  ) %: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
:noPrefix   t-pnd:Punned-Class-ObjectProperty ?M = 23.14.15  @@ invalid |  ottr:IRI (  ) , @@ zipMax |  ex::doubleColon (  ) $: { o-rdf:Type(?', "malformed"^^bad:datatype) ,  } .
ottr:Template1 [ ! LUB<<List<ottr:IRI>>>  ] @@ ex:Template1 ( ?U ?: { o-rdf:Type(?Va, 23.14.15) ottr:Triple(?5, foot:Annotation, "2023-01-01"^^xsd:date) } .
ottr:IRI [ List<?! List<badPrefix:string> ?k\ = "unclosed> ?Z , , LUB<<List<rdfs:Datatype>>> ?qj ]  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple [ ? NEList<<LUB<xsd:decimal>>>  @@ ex:Template1 ( ?+ :: { o-rdf:Type(?v, "unclosed) ottr:Triple(?V, owl:Type, _:b2) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?|, ?p6Wt9) ,  
ex: ?? ?; = ?,U ,  List ?R , xsd:foaf:name ?X@ ,   ottr:IRI ?`  , ,  @@ zipMin |  ex:Invalid Space ( ?var 1 ,, ) :: BASE
ex::doubleColon [ ?!! LUB<owl:AnnotationProperty> ?0 = 23.14.15 ] { o-rdf:Type(?T, -5+) } .
:noPrefix [ ! LUB ?E ] @@ cross |  ex:Template2 ( ++ ++ ?) , ( ( "2023-01-01"^^xsd:date ,, ) ) ) ++ false ) @@ zipMax |  foot:Footballer (  ) #: { o-rdf:Type(?/, 23.14.15) } 
http://example.com/:Template1  @@ invalid |  <unclosedIRI (  ) , @@  ex:Invalid Space (  ) >: { ottr:Triple(?c, xsd:Template1, _:b1) , ottr:Triple(?F, o-rdf:Annotation, none) } ..
ex::doubleColon [ LUB<xsd:integer> ?!4 , NEList<List<>> ?z @ zipMax |  ottr:IRI ( ( , ) , "string"^^^xsd:string ) !: { o-rdf:Type(?s, o-rdf:Footballer) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
xsd:Triple ?!! owl:Class ? List<List> ,   :: { ottr:Triple(?x, foot:Template1, "malformed"^^bad:datatype) } .
ottr:IRI [ ! LUB ?!T , , List< LUB<owl:ObjectProperty> ?: = 23.14.15> ?e ] {  } .
ex:Invalid Space [ NEList<List<NEList<<LUB<xsd:string>>>>> ?6 , xsd:foaf:name ?~z, @@ ex:Template1 ( ?/ :: { o-rdf:Type(?J, ?-P) , 
<unclosedIRI [ ?? ?u  , , ?! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , ,  ] @@  ex::doubleColon (  ) , @@ cross |  :noPrefix (  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Annotation [   NEList<<LUB<xsd:integer>>> ?p = ?_ , ,  ]  *: { o-rdf:Type(?j, _:b2) o-rdf:Type(?F, 23.14.15) ,  } ..
o-rdf:Type [  ?s , ,  @@ zipMax |  <unclosedIRI (  ) }: { ottr:Triple(?G[, owl:Template2, true) } 
ex:Footballer [ ?!! LUB<ottr:IRI>  ] @ zipMin |  ottr:IRI (  ) ;: { o-rdf:Type(?@d, none) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI  @@ zipMin |  ex:Invalid Space (  ) @@ cross |  ex::doubleColon (  ) :: { ottr:Triple(?w, o-rdf:Template1, 23.14.15) , o-rdf:Type(?h, "malformed"^^bad:datatype) } ..
ottr:Triple [ _:b2 ,  ?bG List<LUB<<List<owl:DatatypeProperty>>>> ?7[! , xsd:foot:clubHistory ?Ky^ , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [  List<badPrefix:string> ?U  ] @@  ex: ( "string"^^^xsd:string ++ ++ ( ( true ) ,, ) ) ) , @@ invalid |  <unclosedIRI ( ++ ?_ ,, ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
http://example.com/:Footballer [ ?!! List ?a*S ] { o-rdf:Type(?r}'`/, ?3) , } .
ex:Type [ ?! LUB<owl:Class> ?] = 23.14.15 , , ! NEList<<LUB<owl:ObjectProperty>>> ] :: BASE .
foot:Annotation [   ottr:Bot ,  @ zipMax |  ottr:IRI (  ) :: { o-rdf:Type(?j, none) ottr:Triple(?D, owl:Triple, "unclosed) ottr:Triple(?J, xsd:Template2, "2023-01-01"^^xsd:date) } .
ottr:IRI [ ?? LUB<<List<rdfs:Resource>>> , ,  @@  ottr:IRI (  ) %: { o-rdf:Type(?u, _:b1) , o-rdf:Type(?k, "malformed"^^bad:datatype) , o-rdf:Type(?C, "unclosed)  } 
:noPrefix [ ? ?6W = ?n) ?!! LUB<<List<xsd:string>>> ?z = "malformed"^^bad:datatype , , NEList<List<>> ?% ,  LUB<xsd:boolean> , ,  @@ :noPrefix ?P ) @: { ottr:Triple(?1, http://example.com/:Footballer, -8+) , } 
ottr:IRI [ ?!! List<NEList<<LUB<owl:NamedIndividual>>>> , ,  ] !: { o-rdf:Type(?=B, ?q[) , } ..
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?o, http://example.com/:Template2, "malformed"^^bad:datatype) , o-rdf:Type(?A9, "unclosed) o-rdf:Type(?l, xsd:Footballer) } .
owl:Type  ?- LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?/ @@ zipMin |  ex: (  ) @@ cross |  <unclosedIRI (  ) :: {  } .
ex::doubleColon [ ?? LUB<rdfs:Datatype> ?>  , ?! owl:ObjectProperty , ,  @  ex:Invalid Space (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Triple [ ? LUB<owl:Class> ,  List<xsd:invalidType> ,  ] @@ zipMax |  ottr:IRI (  ) , @@ invalid |  ottr:Template1 (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Invalid Space ! ?d  , ,   LUB<<List<rdfs:Resource>>> , ,  @@ ex:Template1 ( ?g :: { o-rdf:Type(?], 23.14.15) ,  } 
ex:Template1 ? LUB<<List<xsd:date>>> ?Z = 23.14.15  \: { ottr:Triple(?sD, foot:Annotation, false) } .
foot:Template2 [ none:foot:clubHistory ?p @@  ex: ( "string"^^^xsd:string  ) ?: { ottr:Triple(?mJ, owl:Annotation, none) o-rdf:Type(?0, _:b1) } 
ottr:IRI [ xsd:string ?2  ?D @@ invalid |  <unclosedIRI (  ) , @@ zipMin |  ex:Invalid Space (  ) :: BASE .
owl:Template1 [ ?!! NEList<<LUB<xsd:date>>> , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [   badPrefix:string ?>#9 ,  ] @@ zipMax |  ex: ( ++ ?a50+ , ++ ++ ( none ,, ) ) ) @@  :noPrefix ( ( 1+ ) ,, ) :: BASE
o-rdf:Template2 [ ?! LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?e = (  )  ] { ottr:Triple(?Q, http://example.com/:Annotation, _:b1) } .
foot:Footballer ?? List<LUB> ?~ = "unclosed , ,  @@ ottr:IRI ?[ ) :: { o-rdf:Type(?3, "malformed"^^bad:datatype) , o-rdf:Type(?/, _:b2)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?Y], xsd:Triple, ?<k) , 
ex:Type none:foaf:name ?r ,  ?I  , ? LUB<rdfs:Datatype> , , ! NEList<<LUB<owl:AnnotationProperty>>> ,  @@ cross |  ottr:IRI ( ?var 1 ( , ) , "string"^^^xsd:string ,, ) -: { ottr:Triple(?\, ottr:Footballer, false) , } .
ex::doubleColon [ NEList<List<List<?! LUB<xsd:integer>>>> ?lP ,   NEList<<LUB<ottr:IRI>>> , , ? NEList<<LUB<xsd:decimal>>> ?7 = "malformed"^^bad:datatype , ! LUB<<List<owl:ObjectProperty>>> ] @ zipMin |  ex:Invalid Space ( 0+.-4+ "string"^^^xsd:string ++ "2023-01-01"^^xsd:date ) [: { ottr:Triple(?E, xsd:Footballer, 23.14.15) } ..
ottr:IRI [ ?! List<NEList<LUB<owl:DatatypeProperty>>> ?^ = 23.14.15  ?: { o-rdf:Type(?d, ""g"") , } .
xsd:Footballer [ ! List<NEList<LUB<<List<ottr:IRI>>>>> ?~Y  , , owl:ObjectProperty ?r @ invalid |  ottr:IRI ( (  ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?<, o-rdf:Triple, ?*) 
ex::doubleColon  @@ zipMax |  ex: (  ) @@  ex:Invalid Space ( ++ ++ "malformed"^^bad:datatype ) :: BASE
:noPrefix [  List<badPrefix:string> ?! NEList<<LUB<owl:AnnotationProperty>>> ?v{` = "unclosed , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?o=\, ""j"") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? ottr: ?! ] :: {  } .
ottr:Template2 [ ?? ?pn = ?_ ] @@ zipMin |  http://example.com/:Type ( ( , ) ++ ?} , "string"^^^xsd:string , ?var 1 ) :: { o-rdf:Type(?MR, "2023-01-01"^^xsd:date) , } .
foot:Annotation ?!! LUB<rdfs:Resource>  ?F ,   :: { o-rdf:Type(?b, 23.14.15)  } 
ex:Template1 [   NEList<<LUB<xsd:string>>>  @@ cross |  ex::doubleColon (  ) , @@  ex:Invalid Space (  ) !: { o-rdf:Type(?%, "unclosed) ottr:Triple(?P, owl:Footballer, _:b2) , } ..
ottr:IRI foot:foot:clubHistory ?J LUB<t-pnd:Punned-Class-ObjectProperty> ?s , NEList<List<List<>> ?,Xy> ?; , , ?? xsd:invalidType ?9 List<?? LUB ?7> ?L ,  NEList<<LUB<xsd:integer>>> , , ? List ?8 @@ ex:Template1 ( ?60?( >: { ottr:Triple(?g, xsd:Annotation, owl:Footballer) , } 
o-rdf:Triple [ ?!! ??U = ?< , ,  ] @@ cross ex:Template1 ( ?$N ) :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:IRI [ ! LUB<<List<xsd:date>>> ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?ji(, http://example.com/:Template2, "unclosed) } .
ex: LUB<List<ottr:Bot>> ?p , ?? List<NEList<<LUB<owl:ObjectProperty>>>> ?M = "unclosed @ invalid |  <unclosedIRI ( ?2*_ ,, ) :: BASE
ex::doubleColon [   List<List> ?V   LUB<t-pnd:Punned-Class-ObjectProperty> @@  ex:Invalid Space (  ) @@ zipMin |  :noPrefix (  ) :: BASE .
ex:Annotation [ owl:DatatypeProperty ?s , ?! owl:NamedIndividual , ,  ] :: { o-rdf:Type(?6, ?au) , ottr:Triple(?R, xsd:Template1, _:b2) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [   :: { ottr:Triple(?., owl:Type, "2023-01-01"^^xsd:date) o-rdf:Type(?', 23.14.15) ,  } .
foot:Footballer [ ? ottr: ?#k ] @@ cross |  ottr:Footballer ( ?var 1 , ++ ""g+"" ) :: { o-rdf:Type(?>B4, "malformed"^^bad:datatype) } ..
foot:Footballer ottr:foaf:name ?Fe @@ invalid |  ex: (  ) , @@ zipMax |  ottr:IRI (  ) =: { ottr:Triple(?X, xsd:Template2, false) } ..
ex:Invalid Space [ LUB<List<owl:ObjectProperty>> ?|"*T , , List<NEList<LUB<owl:NamedIndividual>>> ?{  ] { ottr:Triple(?N, http://example.com/:Annotation, ?3) ,  } .
ottr:IRI [ ?? ottr:IRI ?S = "unclosed ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Triple [ ? ?H  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  :: BASE .
:noPrefix  List ?Y @@  ex::doubleColon (  ) @@ cross |  <unclosedIRI (  ) :: { o-rdf:Type(?)!o, ""v*"") 
ex: [ ?! LUB<<List<owl:Class>>> , ! NEList<<LUB<rdfs:Resource>>> , ,  @ zipMax |  ottr:IRI (  ) \: { ottr:Triple(?[, owl:Type, "unclosed) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Template1 [ none:foot:clubHistory ?qU , ?!! List<badPrefix:string> ?J  ]  :: { o-rdf:Type(?j, _:b1)  } .
o-rdf:Template2 [   LUB<<List<xsd:date>>>  ] @@ invalid |  ex::doubleColon (  ) , @@ zipMin |  <unclosedIRI (  ) `: { o-rdf:Type(?_, "malformed"^^bad:datatype) o-rdf:Type(?V, 23.14.15)  } ..
xsd:Template1 [  ?t  ] @@  ottr:IRI (  ) ': { ottr:Triple(?E, foot:Footballer, none) } .
ottr:Template1 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: { ottr:Triple(?>3, foot:Footballer, ?~6) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
ottr:IRI [  ] :: { o-rdf:Type(?NFm, false) 
<unclosedIRI [ rdfs:Resource ?SY ? List<List> , ?!! badPrefix:string ?(@ , , ( -2+.6+ ,, ) ) ?&* ] @@ zipMin |  ex: ( ++ ( ?I ,  ) ,, ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?/, ""R*"")  } .
:noPrefix [ ! LUB<<List<owl:ObjectProperty>>> ?.  ] { ottr:Triple(?j<Bv, http://example.com/:Type, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [  List<NEList<<LUB<owl:Class>>>> ?l = "unclosed ,   ?-$ = ?w @  ex:Invalid Space ( ?var 1 "malformed"^^bad:datatype ) :: BASE
owl:Annotation [ ?? LUB<xsd:integer> ] @@ invalid |  ex:Invalid Space (  ) @@ cross |  ottr:IRI (  ) \: { o-rdf:Type(?%, _:b2) , o-rdf:Type(?f, 23.14.15) } .
o-rdf:Template2 [ List<?! ottr: ?V> ?GUH ottr:foot:clubHistory ?E ?!! NEList<<LUB<owl:DatatypeProperty>>> ?X = 23.14.15  @@ ex:Template1 ( ?p ]: { ottr:Triple(?W, ex:Triple, "unclosed) } ..
xsd:Template1 [  @@ invalid |  ex::doubleColon (  ) , @@ zipMax |  ex: (  ) _: { o-rdf:Type(?O, _:b1) } ..
xsd:Template2 [  ] :: BASE .
ottr:IRI [ ottr:foaf:name ?y , , List<List<ottr:>> ?iS< , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ ex:Template1 ( ?TW :: BASE
ex::doubleColon [   xsd:invalidType ?" NEList<List<LUB<List<xsd:boolean>>>> ?\! ] @ cross |  <unclosedIRI ( (  ) ) ) :: { o-rdf:Type(?0, ?N) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space ?!! LUB<xsd:integer> ?` = 23.14.15 ?! ottr:IRI ?1 = (  ) , , ? LUB<<List<rdfs:Resource>>> ,   :: { ottr:Triple(?k, o-rdf:Triple, true) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
:noPrefix [  ?ldLK3AsUB  ] { o-rdf:Type(?r, -2+.0+) , o-rdf:Type(?PE/6, _:b2) , } .
ex: [ ! NEList<<LUB<ottr:Bot>>> ?q = "unclosed , ,  ] @@  <unclosedIRI (  ) , @@ invalid |  <unclosedIRI (  ) >: { ottr:Triple(?2, ottr:Annotation, "2023-01-01"^^xsd:date) } 
<unclosedIRI ! LUB<owl:NamedIndividual> , , ?? List ?b @@ zipMin |  ottr:IRI (  ) {: { o-rdf:Type(?Q, "unclosed) o-rdf:Type(?5, 23.14.15) } .
ex:Type [  ] @@ zipMax |  <unclosedIRI (  ) @@  ex::doubleColon (  ) %: { ottr:Triple(?C, http://example.com/:Template1, none) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Annotation [ ?? List<LUB> ?Q  ] @@ invalid |  <unclosedIRI (  ) , @@ cross |  ottr:IRI (  ) }: { ottr:Triple(?>, o-rdf:Type, _:b1) , } .
ex:  List ?Lu   owl:NamedIndividual ?dMes@ = 23.14.15 , , LUB<rdfs:Resource> ?k , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  :noPrefix ( (  ) ) ) :: BASE
ex:Invalid Space [  @@ zipMax |  ex:Invalid Space ( ++ ++ ""V*F8*"" ,, ) @@ zipMin |  ex::doubleColon ( ( , ) , ++ ( ?i+/ ) ?var 1 ,, ) :: {  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
http://example.com/:Template1 [  ?? , ! NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> , ,  ] :: { o-rdf:Type(?`, ?_) , ottr:Triple(?c, ex:Template2, _:b2)  } .
ottr:Footballer [ ?!! ?zH = ?% , , ?! LUB<<List<owl:ObjectProperty>>> , ? LUB<rdfs:Datatype> ?9 = "malformed"^^bad:datatype foot:foot:clubHistory ?: ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Triple [   NEList<<LUB<ottr:Bot>>> ,  ] @@ cross |  http://example.com/:Template2 (  ) :: { ottr:Triple(?6, owl:Annotation, "malformed"^^bad:datatype) } ..
ex: [ NEList<LUB<List<xsd:date>> ?#> ?!v @@ cross ex:Template1 ( ?U( ) $: { ottr:Triple(?T, http://example.com/:Type, none) , } 
ottr:IRI [ ? owl:DatatypeProperty ?5 = "unclosed ]  #: { o-rdf:Type(?y, "2023-01-01"^^xsd:date) , ottr:Triple(?t, ottr:Triple, "unclosed) } ..
ottr:IRI [  NEList<<LUB<xsd:integer>>> ?UW = 23.14.15 ?! List<LUB<<List<owl:Class>>>> , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] {  } .
ex:Invalid Space [ none:foaf:name ?K , , xsd:boolean ?% ] :: { o-rdf:Type(?p, none) ottr:Triple(?m, owl:Footballer, "2023-01-01"^^xsd:date) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ottr:Template1 [  ] @@ cross |  :noPrefix (  ) , @@ invalid |  ex: (  ) :: { o-rdf:Type(?j, ?$n) , } .
ex::doubleColon ! ?`  ,   badPrefix:string ?~B,) ?? List<List> ?QJ = (   , , ?!! xsd:invalidType ?V ,  ?" , ,   :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ? LUB<owl:NamedIndividual> ?9 = "unclosed @@ zipMin |  ottr:IRI (  ) >: { o-rdf:Type(?Z+, -7+.9+) } 
xsd:Template2 [ ?? rdfs:Resource ,  ]  :: { o-rdf:Type(?g, _:b2) , ottr:Triple(?-, http://example.com/:Triple, "malformed"^^bad:datatype) , } ..
foot:Annotation [  ?F , ,  @@ zipMax |  :noPrefix (  ) @@  ottr:IRI (  ) -: { o-rdf:Type(?:, 23.14.15) ,  } .
ex:Type [ List< ?L> ?x , ,  ?0 , ! LUB<owl:ObjectProperty> , ,  LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , ,  ] @ zipMax |  ex: ( ++ (  ) ) ,, ) ]: { o-rdf:Type(?o, "unclosed) } ..
ex:Invalid Space [  @@ cross |  ottr:IRI (  ) , @@ invalid |  <unclosedIRI (  ) |: { o-rdf:Type(?No, "unclosed) , ottr:Triple(?Q, foot:Triple, "2023-01-01"^^xsd:date) , } .
http://example.com/:Template1 [ none:o-rdf:Annotation ?0>'. , , ?? NEList<<LUB<ottr:IRI>>> ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex: [ List<List<List<?! xsd:integer ?G = "unclosed>>> ?E ] {  } .
ex::doubleColon   ottr: ?B , ? ?" = _:b1 , , ! List<LUB> ?Z  , ,  LUB<<List<owl:Class>>>  @@ zipMax |  :noPrefix ( ++ ++ ( ?A ) ) , ++ ( _:b2 ,  ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?~Rut, ?T|) 
ottr:Type [ NEList<LUB<xsd:decimal>> ?+ ] @@ zipMin |  ottr:IRI (  ) @@  <unclosedIRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?!! NEList<<LUB<rdfs:Datatype>>> ?P = 23.14.15  ]  :: { ottr:Triple(?-, ex:Template2, 23.14.15)  } ..
owl:Footballer [  List ?m , , NEList< List<owl:NamedIndividual> ??!#s: = ?&X> ?} , xsd:Template2 ,, ?( , , ! xsd:invalidType ?_aL ] @@ ex:Template1 ( ?Db @: { o-rdf:Type(?Y3y, 0+) } 
xsd:Footballer [ ! LUB<<List<ottr:Bot>>> ] @ invalid |  ottr:IRI (  ) +: { ottr:Triple(?O, xsd:Annotation, -9+.6+) , } ..
ottr:IRI [  LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?( = 23.14.15 ?? xsd:date ?Z  , ,  ] { ottr:Triple(?g, o-rdf:Annotation, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] _: { o-rdf:Type(?"!, ?kT) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross ex:Template1 ( ?[$ ) :: {  
owl:Template2 [ NEList<LUB<rdfs:Datatype>> ?Mbi , ottr:foaf:name ?% ] :: BASE
ex:Invalid Space [ ?!! ?)Q = ( _:b1 ) , , LUB<ottr:Bot> ?,P?fuw @@ cross |  :noPrefix ( ++ ++ ( "malformed"^^bad:datatype , (  ) ,, ) ) , ++ ?t "string"^^^xsd:string ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI ?! ottr: ?9 ? NEList<<LUB<owl:AnnotationProperty>>> , ! List<xsd:invalidType>  @@ invalid |  ex::doubleColon (  ) , @@  ex:Invalid Space ( ?var 1 ,, ) :: BASE .
xsd:Template1 [ ? NEList<<LUB<owl:ObjectProperty>>> ,   LUB<<List<rdfs:Resource>>> ,  @@ zipMax |  ex:Invalid Space (  ) @@ zipMin |  ottr:IRI (  ) :: { ottr:Triple(?~, ex:Footballer, "unclosed) o-rdf:Type(?p, 23.14.15) ,  } .
http://example.com/:Type [ ottr:Triple ?5xd  !: { o-rdf:Type(?o]c, false) , } 
foot:Footballer [  ?q , ,  ] @  ex::doubleColon (  ) >: { o-rdf:Type(?K, 0+.-3+) } 
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMin |  <unclosedIRI ( ( , ) ,, ) :: BASE .
ex:Type [  ] .: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [   LUB<owl:ObjectProperty> ?1cgt  , , List<NEList<List<xsd:invalidType>>> ?p ] { ottr:Triple(?,, ottr:Footballer, false) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?8`, ?.) ,  
ex:Invalid Space [ ! LUB<<List<owl:Class>>> none:foaf:name ?~>L , ?!! ottr: ?0 , ?? ?\   rdfs:Datatype ?V = 23.14.15 ? NEList<<LUB<owl:DatatypeProperty>>> , ,   :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  ?Y , ,  ?- ,  ?^G ] @@ cross ex:Template1 ( ?TvJ? ) :: { o-rdf:Type(?9, -1+.9+) , } .
ex::doubleColon [ ?! LUB<xsd:date>  ] @@  ottr:IRI (  ) @@ cross |  ottr:IRI (  ) :: { o-rdf:Type(?a, none) o-rdf:Type(?2, 23.14.15) ,  } ..
<unclosedIRI  ?y @@ zipMax |  ottr:IRI (  ) \: { ottr:Triple(?S, o-rdf:Template2, _:b2) ,  } 
foot:Template1 [  ?" , ,  @@ cross |  ex: (  ) , @@ invalid |  xsd:Annotation (  ) ]: { o-rdf:Type(?#n, _:b1) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?+j, "2023-01-01"^^xsd:date) 
owl:Type [   ottr:Bot ?z  ]  :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI List<List> ??%i , ?! LUB<<List<owl:Class>>> ?P = 23.14.15 ! LUB<xsd:integer> , ,  @@ cross |  ex:Invalid Space (  ) , @@ zipMax |  :noPrefix (  ) :: BASE
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?!! ?Q( = ?2 , , xsd:foot:clubHistory ?p , , ? ottr: ?; , ,  NEList<<LUB<owl:DatatypeProperty>>>  ] $: { ottr:Triple(?T, xsd:Footballer, ?9I) , } .
<unclosedIRI [ NEList<List<>> ?,t , , ! owl:AnnotationProperty ?? LUB<owl:NamedIndividual> , ,  @@ invalid |  ottr:Template1 (  ) @@  <unclosedIRI (  ) :: BASE .
http://example.com/:Triple ?! ottr:IRI ?Z = "unclosed @@ zipMin |  ottr:IRI (  ) :: { o-rdf:Type(?r, "malformed"^^bad:datatype) , o-rdf:Type(?y, _:b1)  } ..
ottr:IRI [ ! LUB<<List<xsd:decimal>>> ?o = "malformed"^^bad:datatype ] @ zipMin |  ottr:IRI (  ) =: { o-rdf:Type(?h, none) , o-rdf:Type(?O, 23.14.15) , o-rdf:Type(?6, "unclosed) ,  } 
foot:Template2 [ ?? xsd:invalidType ?{  @@ cross ex:Template1 ( ?$ ) .: { ottr:Triple(?W, ex:Annotation, _:b2) } 
xsd:Type [ LUB<<List<rdfs:Resource>>> ?v @@ zipMax |  :noPrefix (  ) @@  ottr:IRI (  ) :: { o-rdf:Type(?), ?"b) ,  
ex: [ LUB<xsd:decimal> ?E  LUB<ottr:IRI> , , ? xsd:invalidType ?|c! , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?R[&f*, foot:Footballer, "unclosed) ottr:Triple(?a, o-rdf:Triple, 7+.-1+) } .
ex::doubleColon  @@ cross ex:Template1 ( ?: ) :: BASE .
ex:Invalid Space [ ! NEList<owl:DatatypeProperty> ?m = "unclosed , ottr:foot:clubHistory ?V , , ?!! ?> = ( (   ,, ) , , ?! List<NEList<<LUB<ottr:Bot>>>> ?Nis  , , ?? List<badPrefix:string> ?2H7O = "malformed"^^bad:datatype , NEList<List<List<List<?9 , -5+>>>> ?x ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ?? List ?t , ,   LUB ?G , ? LUB<<List<owl:Class>>> ] { ottr:Triple(?/, http://example.com/:Template1, "2023-01-01"^^xsd:date) , } .
ottr:Template2 [ ?? owl:ObjectProperty ,  ] @@ cross |  ex::doubleColon (  ) _: { ottr:Triple(?g, ex:Annotation, _:b2) , } ..
owl:Footballer  @ invalid |  ottr:IRI (  ) <: { ottr:Triple(?q, ottr:Triple, 23.14.15) ottr:Triple(?=, o-rdf:Triple, "malformed"^^bad:datatype) , } 
ottr:IRI [ List<? NEList<<LUB<owl:AnnotationProperty>>> ?0 > ?$4 ] @@ zipMin |  ex: (  ) , @@ zipMax |  ex:Invalid Space ( ?var 1 ) -: { ottr:Triple(?K, http://example.com/:Type, none) } ..
ottr:IRI [  ] @@ invalid |  ex:Invalid Space (  ) @@ cross |  <unclosedIRI (  ) %: { ottr:Triple(?k, foot:Annotation, true) } .
o-rdf:Footballer [ ? ?); = ( owl:Template1  , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:foot:clubHistory ?T ?? List<ottr:> , , ?!! NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> ?A  @  :noPrefix ( ++ ++ (  )  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?IG, ?ZL) ,  } .
:noPrefix  ?B ,  @@ ex: ?du ) :: { ottr:Triple(?l, ex:Type, "2023-01-01"^^xsd:date) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Template2 [   xsd:invalidType ?_Xj , NEList<LUB<<List<rdfs:Datatype>>>> ?[ ] :: BASE
ottr:IRI ?! ottr:Bot  :: { o-rdf:Type(?%, none) ottr:Triple(?\, http://example.com/:Triple, _:b1) , o-rdf:Type(?p, _:b2)  } 
ottr:Footballer [  LUB<owl:DatatypeProperty> ,  ] @@ zipMax |  ex:Invalid Space (  ) , @@ zipMin |  ex:Invalid Space (  ) (: { o-rdf:Type(?|@, ""i*"") , } ..
ottr:IRI ! xsd:string ?1 = "malformed"^^bad:datatype ,  @@ zipMax |  ex: (  ) `: { o-rdf:Type(?g, "malformed"^^bad:datatype) , o-rdf:Type(?s, 23.14.15)  } 
ex::doubleColon [ ?! LUB<xsd:string> ,  List<List> ?W = "malformed"^^bad:datatype ] @@ zipMin |  ottr:IRI (  ) , @@ invalid |  <unclosedIRI (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
owl:Triple [ ottr:date ?Q= ottr:IRI ?C , ,  ] :: BASE
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMax |  :noPrefix ( ++ ( "unclosed ,, ) ) ,, ) :: { o-rdf:Type(?M, ?t,) } .
ex: LUB<List<owl:ObjectProperty>> ?EN ?? ottr: ?| ! ?j = 23.14.15 , ?!! owl:NamedIndividual ?i  ? NEList<<LUB<xsd:boolean>>> ?(    LUB<<List<xsd:date>>> ,   :: {  } .
foot:Footballer [ NEList<List<>> ?u1 ,  ?8 , ,  ] { ottr:Triple(?z, ex:Annotation, "2023-01-01"^^xsd:date) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?D, o-rdf:Type, "malformed"^^bad:datatype) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
xsd:Template2   LUB<owl:DatatypeProperty> ?U = 23.14.15  @@ cross ex:Template1 ( ?` ) &: { ottr:Triple(?O, http://example.com/:Template1, _:b1) o-rdf:Type(?[, _:b2) , } 
ottr:Annotation ! LUB<<List<owl:AnnotationProperty>>> @@  ex::doubleColon (  ) @@ cross |  ottr:IRI (  ) #: { o-rdf:Type(?5, none) o-rdf:Type(?<, _:b1) , o-rdf:Type(?G, "2023-01-01"^^xsd:date) , o-rdf:Type(?V, _:b1) , } ..
ex:  rdfs:Datatype ?% = "unclosed , ,   NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>>  @ invalid |  ottr:Template1 (  ) _: { o-rdf:Type(?;, ottr:Template1) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple [   LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?G| = "malformed"^^bad:datatype ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] [: { o-rdf:Type(?#, ?CM) } ..
ottr:IRI [ ?!! List<List<List>> ,  ] @  ex: ( "unclosed ) :: BASE .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?Q, owl:Template1, "malformed"^^bad:datatype) , ottr:Triple(?^, ex:Annotation, ""l*y%*"") o-rdf:Type(?S9, -3+.9+) , } .
ex:Invalid Space [ ottr:foaf:name ?bB , ,  @@ invalid |  :noPrefix (  ) , @@ zipMax |  ex::doubleColon (  ) :: BASE
xsd:Template2 ! LUB<owl:Class> ?1:  ? ottr: ?- @@ ex:Template1 ( ??E :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex::doubleColon ?! NEList<<LUB<xsd:decimal>>>  @@ cross |  ottr:IRI (  ) @@ zipMin |  :noPrefix (  ) :: { ottr:Triple(?6, foot:Type, _:b2) } 
o-rdf:Footballer [ NEList<owl:AnnotationProperty> ?'H  ~: { o-rdf:Type(?p, "2023-01-01"^^xsd:date) , o-rdf:Type(?U, 23.14.15) o-rdf:Type(?z+, http://example.com/:Triple) , } .
owl:Footballer  ?m  LUB<owl:ObjectProperty>  @@ zipMax |  ottr:IRI (  ) .: { o-rdf:Type(?>, -0+) , } .
http://example.com/:Footballer [  LUB<xsd:date> ?[0K = "malformed"^^bad:datatype ] { o-rdf:Type(?m, 23.14.15) , } .
ottr:IRI  @@  <unclosedIRI (  ) @@ zipMax |  :noPrefix ( ++ ?! , -9+.3+ ++ ++ ( ( "malformed"^^bad:datatype ,, ) ) ) ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex::doubleColon [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ ex: ?@O ) :: { ottr:Triple(?z, o-rdf:Template2, ?${) ottr:Triple(?v, ottr:Type, none) ,  
ex:Invalid Space [ NEList<List<LUB<List<owl:DatatypeProperty>>>> ?I ?? List<List> , , ! ?2 = ?Z , List<NEList<NEList<<LUB<rdfs:Datatype>>>>> ?CDJP ,   ottr:IRI ?V`- = _:b2 , ? badPrefix:string ?|1 ] :: BASE
foot:Template1 [ foot:foaf:name ?sp , , ?!! LUB<<List<ottr:Bot>>>   :: { ottr:Triple(?4., owl:Triple, true) } .
foot:Triple [ ?! xsd:invalidType ?= , ? LUB<<List<owl:ObjectProperty>>> ,  ] @ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?l, ex:Template1, xsd:Annotation) } ..
ottr:IRI [ ! LUB<rdfs:Resource> , , ?? LUB<<List<xsd:integer>>>  ] @@ zipMin |  o-rdf:Footballer ( ?var 1 ,, ) /: { ottr:Triple(?6, ex:Annotation, "unclosed) } 
ottr:IRI [ List<? NEList<<LUB<xsd:boolean>>> ?> = 23.14.15> ?h8 @@ cross |  foot:Type ( "string"^^^xsd:string  ) , @@ zipMin |  ottr:IRI ( ( , ) ,  ) @: { o-rdf:Type(?^, ""o"") } ..
ex::doubleColon [   List ?J , , ? List<ottr:> ?r  ,  @@ ex:Template1 ( ?c :: { ottr:Triple(?W, o-rdf:Type, "2023-01-01"^^xsd:date) } .
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ zipMax |  xsd:Template2 ( ++ ( 23.14.15 ,, ) ( ?X} ) ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ LUB<owl:ObjectProperty> ?H)>e ]  :: { o-rdf:Type(?#, ""E*?M*"") ottr:Triple(?V, ex:Footballer, ?|) , 
:noPrefix [ ?? xsd:date none:foaf:name ?%_ , ,  LUB<<List<xsd:decimal>>> ?p = 23.14.15 , ! NEList<<LUB<owl:NamedIndividual>>> , ,  ?/ ?! NEList<<LUB<owl:Class>>> ] :: { o-rdf:Type(?[,B, "unclosed) ,  } .
ex:Invalid Space [ ?!! List<NEList<NEList<<LUB<xsd:integer>>>>> ?t^`K = true ?! ?-n@w!i = ?= , List<List<List<NEList< LUB ?'>>> ?{> ?s ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ex: ? LUB<<List<owl:AnnotationProperty>>> , ,  @@ cross |  ottr:IRI (  ) @@ invalid |  ottr:IRI (  ) ,: { o-rdf:Type(?9, none)  } ..
foot:Annotation ? LUB<<List<xsd:string>>> ?P = "malformed"^^bad:datatype  @@  http://example.com/:Template1 (  ) , @@ zipMin |  owl:Triple (  ) _: { o-rdf:Type(?4, _:b1) } 
o-rdf:Footballer [  @@ cross |  ex: (  ) {: { o-rdf:Type(?0, ottr:Type) , o-rdf:Type(?1, _:b2)  } ..
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?V, o-rdf:Triple, "unclosed)  } .
ex:Invalid Space [  ?T ?!! LUB<<List<owl:NamedIndividual>>> , ,  ] @@ zipMax |  ex::doubleColon ( ?var 1 ) , @@ zipMin |  ex: (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
<unclosedIRI ! NEList<List<List<badPrefix:string>>> ?~- = ?2A=.f @@ cross |  ottr:Template2 ( ( 23.14.15 ,, ) ++ ?) , ++ ++ (  ) ) ,, ) :: BASE
:noPrefix [ NEList<<LUB<ottr:IRI>>> ?xC , ?? xsd:invalidType ?sN6v@L$;J+ ] ]: { o-rdf:Type(?!?z, ?,) } ..
ex::doubleColon [   owl:Class ?G = "malformed"^^bad:datatype  :: { ottr:Triple(?d, xsd:Footballer, none) ,  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
ottr:IRI  @@  ex::doubleColon (  ) @@ invalid |  ottr:IRI (  ) :: { o-rdf:Type(?[, 7+) , } .
foot:Type [ ? ?}a  xsd:integer ?` ,  List ?(| , ,   LUB<xsd:boolean> ?W = "unclosed , ?! LUB<ottr:Bot> , ,  ] @@ ex:Template1 ( ?t *: { o-rdf:Type(?j, http://example.com/:Template1) } 
ex:Invalid Space [  ?R ? LUB<rdfs:Resource> ]  &: { ottr:Triple(?_, ex:Annotation, _:b1) o-rdf:Type(?o, "2023-01-01"^^xsd:date) , o-rdf:Type(?B, _:b2) } ..
ex:Invalid Space foot:foaf:name ?e , , ?!! LUB<<List<xsd:date>>> ?) = ( "malformed"^^bad:datatype ) , List<xsd:invalidType> ?6T @ invalid |  ottr:IRI (  ) :: BASE
ex:Template2 [  @@ cross |  <unclosedIRI ( ++ ( ?i ) ( , ) , ++ ++ -3+ ) :: {  } .
ex::doubleColon [ ? List<NEList<NEList<<LUB<ottr:Bot>>>>> ?/: = "unclosed ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ]  ]: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
:noPrefix [   ?2H   LUB<owl:ObjectProperty> ?! rdfs:Resource ?? LUB<<List<owl:AnnotationProperty>>>  ] { ottr:Triple(?], http://example.com/:Triple, ?@P) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?W, -4+.7+) , 
ex: [ ! LUB ?X ] :: BASE .
o-rdf:Annotation [   :: { o-rdf:Type(?[q, none) o-rdf:Type(?J, 23.14.15) , o-rdf:Type(?7, "unclosed) } 
xsd:Footballer [  ?U  @@ zipMax |  ottr:IRI (  ) , @@  ottr:IRI (  ) =: { o-rdf:Type(?{, _:b2) , } .
owl:Template1 [  ?>  ?. ] @@ zipMin |  ex::doubleColon (  ) @@ zipMax |  ottr:Template2 (  ) _: { ottr:Triple(?Y, foot:Type, _:b1) } ..
xsd:Footballer [ ?!! ?,`  ] { ottr:Triple(?(l, o-rdf:Annotation, -2+.3+) , } .
ottr:IRI [ NEList<List<List<List<List<  LUB<owl:DatatypeProperty> ?Tz = ?1>>>>> ?B&p , , ! rdfs:Resource ?F = "unclosed ,  ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  <unclosedIRI ( ( ( ?8 ,, ) ) ) ++ 8+ ) :: BASE .
ex:Invalid Space [ ottr:foaf:name ?t ? NEList<<LUB<rdfs:Datatype>>> , ,  ] @@ cross |  :noPrefix (  ) @@ zipMax |  ex::doubleColon (  ) :: { o-rdf:Type(?}, ?U) } .
foot:Template1 [ ?? List<ottr:> ?D = "malformed"^^bad:datatype LUB<<List<xsd:date>>> ?I , , ?! List ?j  :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?mg7, _:b1) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Type [  xsd:decimal  ] @@ zipMin |  ottr:IRI (  ) {: { o-rdf:Type(?W, "unclosed) ottr:Triple(?o, owl:Template2, "malformed"^^bad:datatype) ,  } ..
ottr:IRI [  LUB<owl:NamedIndividual> ?n  , ,   -: { ottr:Triple(?b, http://example.com/:Triple, none) , } 
<unclosedIRI ?? LUB<<List<xsd:integer>>> , ,   LUB<ottr:IRI> @@ zipMax |  :noPrefix (  ) , @@ invalid |  ex:Invalid Space (  ) @: { ottr:Triple(?X, ottr:Type, ""="") , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] !: { ottr:Triple(?+, ex:Annotation, -4+.7+) ,  } 
owl:Footballer [ xsd:date ?;& , ,  ] :: { o-rdf:Type(?$, ?jW) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI ? List<rdfs:Datatype> ?b4 = (   @@ zipMax |  ex::doubleColon ( "string"^^^xsd:string ++ (  ) , ( "malformed"^^bad:datatype ,, ) ) ,, ) @@ invalid |  <unclosedIRI ( ++ ++ ?`Y ) :: BASE .
:noPrefix [ ?! ?c  ,  NEList<<LUB<xsd:integer>>> ?S = 23.14.15 ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?d, foot:Template2, _:b1) } .
ex:Invalid Space [   LUB<owl:NamedIndividual> NEList<List<>> ?.P , , ! ottr: ?*v , LUB<<List<xsd:boolean>>> ?zZ[ @ cross |  ex: (  ) :: BASE
ottr:Triple [ ?!! badPrefix:string ?G , ?? List<List> ] @@ zipMin |  ottr:IRI (  ) , @@  :noPrefix (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [  LUB<xsd:date> , ,  ]  :: { ottr:Triple(?Q, o-rdf:Type, _:b2) ottr:Triple(?e, http://example.com/:Template1, 23.14.15) } .
http://example.com/:Type [ ?!! NEList<owl:DatatypeProperty> ?h = "unclosed ] @@ cross ex:Template1 ( ?}O ) ": { ottr:Triple(?X, xsd:Annotation, true) } ..
ottr:IRI ! NEList<<LUB<ottr:Bot>>> ! LUB<<List<rdfs:Resource>>> , ,  @@ zipMin |  ottr:IRI (  ) #: { o-rdf:Type(?x, ""D*C2*"") , } ..
ex: ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@  ottr:IRI ( ++ ++ ( ( -1+ ,  ) ) ) , "string"^^^xsd:string -6+.3+ ) @@ zipMin |  o-rdf:Triple ( ++ ?qh ,, ) :: BASE .
<unclosedIRI [ ?!! NEList<<LUB<xsd:decimal>>> ?> = 23.14.15  ] @ invalid |  ex::doubleColon (  ) :: { o-rdf:Type(?m, ?J6n) } .
:noPrefix [ List<List> ?p , ?! owl:DatatypeProperty ?;  , , ! LUB<<List<ottr:IRI>>>  :: { ottr:Triple(?&, http://example.com/:Template2, "2023-01-01"^^xsd:date) , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ xsd:foot:clubHistory ?ER9e ] -: { ottr:Triple(?{b:, foot:Type, "unclosed) ,  } 
xsd:Annotation [ NEList<  LUB<owl:AnnotationProperty>> ?]0 , , ? xsd:invalidType ?%  ?k  ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Template1 [ ?? LUB<t-pnd:Punned-Class-ObjectProperty> @@ cross |  ottr:IRI (  ) , @@ zipMax |  ex: (  ) :: { o-rdf:Type(?G, _:b1) o-rdf:Type(?c, "malformed"^^bad:datatype) , } .
ottr:Footballer _:b2 ,, ?u @@ owl:Annotation ?g ) ': { ottr:Triple(?(, xsd:Triple, none) } ..
ottr:IRI  owl:ObjectProperty ,  @@  ex:Invalid Space (  ) #: { o-rdf:Type(?=, owl:Type) } 
ottr:IRI [  ] {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?], owl:Triple, ?%wDB) } 
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
foot:Type foot:foaf:name ?* , ,   owl:ObjectProperty ,  @ cross |  ex::doubleColon (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ NEList<LUB<<List<xsd:string>>>> ?m/ ?! NEList<<LUB<owl:DatatypeProperty>>> ?Fn,+ = "malformed"^^bad:datatype ] @@ zipMin |  :noPrefix ( ++ ++ ( ( _:b2 ,, ) ) ) , ?var 1 ++ ?zb'"[^L ,, ) :: BASE
<unclosedIRI [ ! LUB<t-pnd:Punned-Class-ObjectProperty> ?0 = (  ) @@ ex:Template1 ( ?lg :: { o-rdf:Type(?}, o-rdf:Annotation) , } .
ex:Template1 ? ?N  , ,   *: { o-rdf:Type(?e, none) , o-rdf:Type(?Z, "unclosed)  } .
ottr:Footballer ?!! List<badPrefix:string> , ,  @@ invalid |  ottr:IRI (  ) @@ zipMax |  ex: (  ) :: { o-rdf:Type(?j, 23.14.15) ottr:Triple(?S, http://example.com/:Template2, _:b1) } ..
ottr:IRI  LUB ?G  @@ invalid |  ex::doubleColon (  ) , @@  ottr:IRI (  ) !: { ottr:Triple(?6, xsd:Annotation, "2023-01-01"^^xsd:date) , } ..
ottr:IRI [  ] :: { ottr:Triple(?!e, http://example.com/:Template1, ?I) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Annotation [   List<ottr:>  @@  ex::doubleColon (  ) @@ zipMax |  :noPrefix (  ) :: { o-rdf:Type(?K, "2023-01-01"^^xsd:date) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } 
<unclosedIRI ?? NEList<NEList<<LUB<owl:NamedIndividual>>>> ?PDBn` = "malformed"^^bad:datatype , xsd:foot:clubHistory ?lX @@ invalid |  ex: ( "unclosed ,, ) :: BASE .
ex:Invalid Space [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?>7, owl:Triple, -9+) , o-rdf:Type(?zaqLu, ""r*"") } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  
ex:Template2 [ ?! ?w  , , LUB<<List<rdfs:Resource>>> ?( , , ! xsd:decimal  ] @ cross |  ex::doubleColon ( "string"^^^xsd:string  ) :: BASE
foot:Footballer ? LUB<owl:Class> ?!! LUB<<List<ottr:IRI>>> ,  NEList<<LUB<xsd:boolean>>> @@ zipMin |  ottr:IRI (  ) , @@ cross |  ottr:IRI (  ) _: { o-rdf:Type(?', 23.14.15) } ..
o-rdf:Type ! xsd:invalidType ?. , ?? List<NEList<<LUB<owl:AnnotationProperty>>>> ?_ = ?#  ?~S ,  ?bV ?? xsd:date , ,   ?: { o-rdf:Type(?y, _:b2) , } .
xsd:Template1 [  @@ ex:Template1 ( ?3 #: { ottr:Triple(?<, http://example.com/:Template1, "malformed"^^bad:datatype) o-rdf:Type(?d, none) ottr:Triple(?^, xsd:Footballer, _:b1) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
<unclosedIRI [ LUB<<List<xsd:decimal>>> ?~+: , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?7)., ?$) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ ?!! List<LUB>  @@ cross |  ottr:Footballer ( "string"^^^xsd:string ,  ) @@  ex::doubleColon (  ) :: BASE .
:noPrefix [ NEList<  ?A! = ?W%/d> ?64 , , xsd:foot:clubHistory ?0 ] { ottr:Triple(?Ub, o-rdf:Annotation, _:b1) , } .
ex:Invalid Space [ ?! ottr: ?H ? LUB<ottr:Bot> ?q = "malformed"^^bad:datatype ! NEList<<LUB<xsd:string>>> , ,  ] @@ zipMax |  ex: (  ) <: {  } 
ex:Type  xsd:date ?F  ,   :: { o-rdf:Type(?r, none) ottr:Triple(?9, owl:Triple, "unclosed) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex: [ ?? t-pnd:Punned-Class-ObjectProperty , ,  @ invalid |  ottr:IRI (  ) :: { ottr:Triple(?Z=, http://example.com/:Template2, _:b2) o-rdf:Type(?l, "2023-01-01"^^xsd:date) } ..
xsd:Template1  ?p @@ zipMin |  :noPrefix (  ) , @@  ottr:IRI (  ) *: { ottr:Triple(?(, foot:Annotation, 23.14.15) } .
ottr:Template1 [ ?! LUB<<List<xsd:boolean>>> , ?! LUB<<List<xsd:integer>>> ?x = "unclosed , ?! LUB<owl:DatatypeProperty> ,  @@ cross ex:Template1 ( ?[ ) .: { o-rdf:Type(?X@&;, http://example.com/:Type) , } .
ottr:IRI [  ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI ?! List<xsd:integer> ,   LUB ?'R  :: BASE
ottr:Annotation [ ?? ?T  , ,  ] @@ zipMin |  ex:Invalid Space (  ) , @@ zipMax |  ex::doubleColon (  ) :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?@,, ?"<j) 
ex: [ ?!! NEList<<LUB<xsd:decimal>>> ?Q  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @ invalid |  :noPrefix (  ) :: { ottr:Triple(?#, foot:Triple, "malformed"^^bad:datatype) o-rdf:Type(?w, "unclosed) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
xsd:Type [ ? List<badPrefix:string> ?y = "unclosed ] {  } .
owl:Footballer [ ! LUB<xsd:boolean> , ,  ] @@ cross |  http://example.com/:Template1 ( ++ ++ ( _:b1 ) ,, ) ": { o-rdf:Type(?s, o-rdf:Template2) , o-rdf:Type(?7=, _:b2) } ..
ex:Annotation [  LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> , , ! LUB<<List<owl:ObjectProperty>>> , , ?! LUB<<List<xsd:date>>> ,  @@ zipMax |  ottr:IRI (  ) @@  ottr:IRI (  ) ^: { o-rdf:Type(?^, ""3"") , } .
ottr:IRI NEList<NEList<<LUB<xsd:string>>>> ?S , List<List<NEList<foot:foaf:name ?P>>> ?U @@ o-rdf:Template2 ?- ) -: { ottr:Triple(?D;, owl:Type, true) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex:Type ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?<Xe ) :: { ottr:Triple(?/, xsd:Template1, 23.14.15) o-rdf:Type(?), ?u) } 
ex: [ ! ?E = ?Qfn  LUB ?: , ?? LUB<xsd:boolean> , , ottr:integer ?iH ] {  } .
ottr:IRI [  ] @@ cross |  :noPrefix ( none  ) , @@ zipMax |  ex:Invalid Space ( ?var 1 ,, ) :: BASE .
<unclosedIRI [ NEList<List<NEList<<LUB<ottr:IRI>>>>> ?^1 ? xsd:date ?]  , ,  ?z  ] :: BASE
ex::doubleColon [ ?! List<List> ?# = "malformed"^^bad:datatype @@ zipMin |  ottr:Annotation ( "string"^^^xsd:string ,  ) :: { o-rdf:Type(?c, "unclosed) ,  } .
owl:Footballer ?!! LUB<<List<xsd:decimal>>> ?K}C.%Pv = 23.14.15 ,   ottr: ?o5  ;: { o-rdf:Type(?b, _:b2) , } ..
o-rdf:Triple [ List<List<List<LUB<List<ottr:Bot>>>> ?GA> ?xY @ invalid |  http://example.com/:Template2 ( ++ ( ?` ,, ) ) =: { ottr:Triple(?;, foot:Template2, _:b1) , } .
o-rdf:Type [  badPrefix:string ?W @@ cross |  ex::doubleColon (  ) @@  ex::doubleColon (  ) !: { o-rdf:Type(?U, http://example.com/:Footballer) , } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ?: { ottr:Triple(?O, http://example.com/:Footballer, ?%fg) , } 
ottr:IRI [  ] @@ ex:Template1 ?S_ ) :: BASE
<unclosedIRI [ ! ?/c  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?0, ""l*Aa*"") } .
:noPrefix ?!! badPrefix:string ?. , ?? List<LUB> ?W*; = "malformed"^^bad:datatype , , ( ?+ ,, ) ) ?,G}DQo  :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Invalid Space [ ? List<LUB<xsd:string>> ?H  , ,   rdfs:Resource , ,  @@ invalid |  ex::doubleColon (  ) @@ zipMax |  ex: (  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
owl:Triple [ xsd:foot:Type ?9 , , NEList<LUB<<List<owl:ObjectProperty>>>> ?"IE ] :: { ottr:Triple(?C, ottr:Annotation, none) ,  } .
o-rdf:Footballer [ ?! NEList<<LUB<xsd:decimal>>> , ,  @@  ex::doubleColon (  ) , @@ cross |  ottr:IRI (  ) :: { ottr:Triple(?&, xsd:Template2, 23.14.15) o-rdf:Type(?L, _:b1)  } ..
ottr:IRI [ List<List<List<LUB<t-pnd:Punned-Class-ObjectProperty>>> ?)> ?i ,  List ?!N @ zipMin |  ex:Invalid Space ( ++ ++ true ) !: { o-rdf:Type(?~4$z, -0+) , } .
<unclosedIRI [ ?! LUB<<List<owl:Class>>> ?\< = 23.14.15 @@ cross |  ottr:IRI ( ( , ) ,, ) |: { ottr:Triple(?bk, ottr:Triple, "2023-01-01"^^xsd:date) } .
ottr:IRI [ ?! ottr: ?o ] @@ zipMax |  ex:Invalid Space (  ) @@ cross |  <unclosedIRI (  ) :: { ottr:Triple(?R, owl:Triple, ?XB) 
ottr:Type [  ] { o-rdf:Type(?5, o-rdf:Template2) , o-rdf:Type(?:, "malformed"^^bad:datatype) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: [ ? LUB<<List<owl:NamedIndividual>>> ?*  ottr:foot:clubHistory ?l ,  @@ ex::doubleColon ?} ) _: { ottr:Triple(?M, http://example.com/:Template1, _:b1) , } ..
xsd:Footballer ?? NEList<<LUB<rdfs:Resource>>> , , ! LUB<ottr:IRI>  ?z ,   xsd:decimal ?~ = 23.14.15 ,  List<LUB> , ,  @@ invalid |  ex:Annotation ( ( , ) ) :: BASE
ottr:IRI [  ] @@ zipMin |  ottr:IRI (  ) , @@  ex: (  ) :: { ottr:Triple(?9, foot:Type, none) , } 
owl:Type NEList<List<LUB<<List<xsd:integer>>>>> ?P' @ zipMax |  ottr:IRI ( ++ ( ( -4+ ,, ) ) , ?H ) ,, ) [: { o-rdf:Type(?nmL, "unclosed) } .
ottr:IRI [ ?!! ?a = _:b2 , , ?! badPrefix:string ?D  LUB<owl:DatatypeProperty> ,   ': { o-rdf:Type(?(!, "2023-01-01"^^xsd:date) , } ..
ex:Invalid Space [  ] :: {  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
http://example.com/:Annotation [ ?!! List<owl:Class> ?y = ?T , , ? NEList<<LUB<owl:AnnotationProperty>>> ?? LUB<<List<ottr:IRI>>> @ invalid |  ottr:IRI ( (  ) ) :: BASE .
<unclosedIRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ cross ex:Template1 ( ?Vt ) =: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } ..
ex::doubleColon [  ] @@ cross |  ex: (  ) @@ zipMax |  :noPrefix (  ) :: { ottr:Triple(?(, o-rdf:Triple, 23.14.15) , o-rdf:Type(?,, _:b1)  
foot:Type [ ! NEList<LUB<owl:DatatypeProperty>> ?) = "unclosed , LUB<List<xsd:boolean>> ?F# , , List<badPrefix:string> ?X7 ] { ottr:Triple(?h, ex:Template1, ?Y>v3) } .
xsd:Footballer [ ?! ?]\   :: { o-rdf:Type(??, owl:Template2) , } .
ottr:Footballer [   xsd:decimal ] @@  <unclosedIRI (  ) *: { o-rdf:Type(?!H, false) ottr:Triple(?~, ottr:Template1, "2023-01-01"^^xsd:date) } 
ottr:IRI  LUB<<List<rdfs:Resource>>> ,  @@ zipMin |  ex::doubleColon (  ) , @@ cross |  ottr:IRI (  ) .: { ottr:Triple(?w, o-rdf:Type, _:b2) o-rdf:Type(?l, none)  } 
<unclosedIRI [ ?!! LUB<owl:DatatypeProperty> ?u = "unclosed , , ?! List<badPrefix:string> ,  ] { ottr:Triple(?Y, ex:Footballer, _:b1) , o-rdf:Type(?F, 23.14.15) o-rdf:Type(?{, "malformed"^^bad:datatype) } .
xsd:Template2 [ ! ?Zz)+Q  ] .: {  } 
ottr:IRI ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ invalid |  ex:Invalid Space ( ?TK ,, ) :: { o-rdf:Type(?:, ?R&m) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) 
ex: [ ?? LUB<<List<owl:Class>>> ?b   @@ zipMax |  :noPrefix (  ) @@ cross |  ex::doubleColon ( ?var 1  ) :: BASE
ottr:Type [ t-pnd:Punned-Class-ObjectProperty ?4} ] @@  o-rdf:Template1 ( ++ ++ ( "unclosed ,  ) , ++ ( -6+.7+ ,, ) ) ) , @@ zipMin |  foot:Annotation ( ( , ) , "string"^^^xsd:string ++ ""H*"" ) :: BASE .
ottr:IRI [  NEList<<LUB<xsd:string>>> , , ottr:foot:clubHistory ?y , ,   NEList<<LUB<xsd:decimal>>> , ,  ]  :: { ottr:Triple(?X, http://example.com/:Triple, none) , } ..
owl:Footballer [ ? LUB ?M , ,  @  ottr:IRI (  ) \: { o-rdf:Type(?cA8, _:b2) , } .
ottr:IRI [  ?C , ,  @@ ottr:IRI ?n ) (: { o-rdf:Type(?o, 23.14.15) o-rdf:Type(?", "2023-01-01"^^xsd:date) } ..
ex: [ ?!! ?| = (   @@ cross |  ottr:IRI (  ) :: { o-rdf:Type(?9, _:b1) , ottr:Triple(?#, xsd:Annotation, ?&) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Triple  List<xsd:invalidType> , ,  @@  <unclosedIRI (  ) @@ zipMin |  ex:Invalid Space ( "string"^^^xsd:string ,  ) :: BASE .
:noPrefix [ LUB<<List<t-pnd:Punned-Class-ObjectProperty>>> ?K List<?? xsd:boolean ?i = ?J4"r> ?E>L_ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] *: { o-rdf:Type(?j(U, _:b2) , } .
ex::doubleColon [ ! NEList<<LUB<xsd:integer>>> ?k1 = "unclosed ] @ zipMax |  http://example.com/:Footballer ( ++ ++ ( ?YQ ,  ) ,, ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Template2 [ ottr:foaf:name ?T` ? LUB ?e}+ ] {  } .
owl:Template1 ?! LUB<owl:AnnotationProperty> , ,   LUB<xsd:string> , ,   :: { ottr:Triple(?M, ex:Type, "malformed"^^bad:datatype) o-rdf:Type(?Z, none) , } 
foot:Triple  ?I , ? LUB<<List<xsd:decimal>>>  @@ ex:Template1 ( ?<? `: { ottr:Triple(?3B, o-rdf:Footballer, -7+.1+) } ..
ottr:IRI [   +: { ottr:Triple(?d, o-rdf:Template2, "unclosed) ottr:Triple(?], http://example.com/:Triple, "2023-01-01"^^xsd:date) ,  } ..
ottr:IRI [   owl:DatatypeProperty ?_! = "unclosed ]  :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ NEList<xsd:foot:clubHistory ?r5> ?^{ , LUB<t-pnd:Punned-Class-ObjectProperty> ?S , , ?! xsd:invalidType ?]  ] :: { ottr:Triple(?q, o-rdf:Footballer, none) 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
xsd:Template2 [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { o-rdf:Type(?g, ?L) , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI  @ invalid |  ex:Invalid Space (  ) :: { ottr:Triple(?:B0, http://example.com/:Triple, _:b2) , } ..
ex: [ ?!! List<LUB> ?<  , , ? ?d  , , ?? NEList<<LUB<xsd:boolean>>> @@ zipMax |  ex::doubleColon (  ) :: BASE .
ottr:Template1  @@  ottr:IRI (  ) , @@ zipMin |  ex::doubleColon (  ) +: { ottr:Triple(?c, foot:Type, _:b1)  } 
owl:Annotation  LUB<<List<rdfs:Resource>>>  @@ cross |  ex: (  ) @@ zipMin |  ottr:IRI ( "string"^^^xsd:string  ) {: { ottr:Triple(?m, ex:Template2, 23.14.15) , } .
ottr:IRI [ ! LUB<rdfs:Datatype> ?G  , ,  ] @@ cross ex:Template1 ( ?) ) `: { o-rdf:Type(?1, "malformed"^^bad:datatype) } .
