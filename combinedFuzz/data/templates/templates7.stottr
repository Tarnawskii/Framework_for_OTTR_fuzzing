@prefix ottr: <http://ns.ottr.xyz/0.4/> .
@prefix o-rdf: <http://tpl.ottr.xyz/rdf/0.1/> .
@prefix foot: <http://example.org/football#> .
@prefix schema: <http://schema.org/> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
ottr:Annotation [  ] :: { ottr:Triple(?]}, http://example.com/:Template2, 7+) , 
ex:Invalid Space [ List<List<List< LUB<<List<owl:AnnotationProperty>>> ?. = ?p">>> ?^ ? xsd:boolean , ,   badPrefix:string ?- ,   :: BASE .
ottr:IRI [ foot:foot:clubHistory ?YQ ] { o-rdf:Type(?&5, ?b) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@ cross |  :noPrefix (  ) @@ zipMin |  ex::doubleColon (  ) $: { ottr:Triple(?%, ex:Template1, "unclosed) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ex: ?!! List<LUB<ottr:IRI>> ?q\{~e = 23.14.15 @@ zipMax |  ex: ( ++ ++ (  ) ) , ++ "":"" ( ?DfI ) ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Triple [ ?? List<xsd:invalidType>  @  ottr:IRI (  ) :: { ottr:Triple(?C, owl:Footballer, _:b1) , ottr:Triple(?4, xsd:Type, none)  } .
o-rdf:Template1 NEList<<LUB<owl:ObjectProperty>>> ?la , , ! ?M = (   , , ?! LUB<<List<xsd:date>>> , , ?? LUB<owl:NamedIndividual> ?< = "unclosed @@ ex:Template1 ( ?JX <: { ottr:Triple(?y, foot:Triple, 23.14.15) , } ..
ex:Invalid Space [  LUB<rdfs:Datatype> @@ invalid |  ottr:IRI (  ) , @@ zipMax |  ex:Invalid Space (  ) |: { ottr:Triple(?;, owl:Type, owl:Annotation) , } .
<unclosedIRI [ ?!! List<xsd:invalidType> , ,  LUB<xsd:integer> ?& = "unclosed ! NEList<<LUB<owl:NamedIndividual>>> ,  ] { ottr:Triple(?>r, foot:Type, _:b1) , o-rdf:Type(?\, 23.14.15) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Annotation [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } .
ottr:IRI [ ?! ?t = none ] @@ zipMax |  ex:Invalid Space ( ++ ( (  ) ,, ) ) "string"^^^xsd:string ) :: BASE .
:noPrefix none:foot:clubHistory ?v" , List<NEList<LUB<<List<xsd:decimal>>>>> ?/K  :: { o-rdf:Type(?s, ?a() , 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon [ ? owl:ObjectProperty ,  @@ zipMin |  ex: (  ) @@ invalid |  ex: (  ) :: { o-rdf:Type(?xe, "unclosed) } 
o-rdf:Triple [ "malformed"^^bad:datatype ?*` ] @ cross |  ottr:Footballer ( ++ ++ ?hz$ , -5+ ,, ) .: { o-rdf:Type(?G, http://example.com/:Template2) } .
ex: [   LUB<rdfs:Datatype> ?Y  , ,  ] @@ ex:Template1 ( ?^H ): { o-rdf:Type(?06, "2023-01-01"^^xsd:date) , } ..
ottr:IRI [ ?? NEList<<LUB<t-pnd:Punned-Class-ObjectProperty>>> ,  ] @@  ex: (  ) , @@  :noPrefix (  ) :: { o-rdf:Type(?@, _:b2) o-rdf:Type(?|, _:b2)  } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: {  } ..
<unclosedIRI [  ?R  ] @@ zipMin |  ex:Invalid Space (  ) @@  ottr:IRI (  ) :: BASE
o-rdf:Annotation [ ?? xsd:invalidType ?P\ , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
:noPrefix [ ottr:foaf:name ?q @@ cross |  ex: (  ) , @@ zipMax |  ex::doubleColon (  ) :: { o-rdf:Type(?G, _:b1) , o-rdf:Type(?(, none)  
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:Type ? ?y  , ,  @@ ottr:IRI ?N ) :: { ottr:Triple(?J, http://example.com/:Template2, ?2) , } .
foot:Template1 [  LUB<<List<xsd:date>>> ?s = 23.14.15 , , NEList<owl:AnnotationProperty> ?k ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex:Footballer [   List<List<badPrefix:string>>  @ invalid |  ottr:IRI (  ) /: { o-rdf:Type(?p, ""z"") } .
xsd:Footballer [ ?! LUB<owl:DatatypeProperty> ?m  ]  ]: { ottr:Triple(?b, owl:Triple, "2023-01-01"^^xsd:date) , } 
ottr:IRI [ ! NEList<<LUB<ottr:IRI>>> , ,   LUB<<List<owl:ObjectProperty>>> , , ?!! LUB<xsd:string> ?!! LUB<<List<xsd:boolean>>>  ]  !: { ottr:Triple(?V, xsd:Template2, "malformed"^^bad:datatype) } 
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Invalid Space [ ottr:foaf:name ?~Dl   List<badPrefix:string> , ,  owl:DatatypeProperty , ?! NEList<<LUB<owl:AnnotationProperty>>> ?\ = "malformed"^^bad:datatype ] { o-rdf:Type(?a, ?g) ,  } .
ottr:IRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @@ zipMin |  ex: ( ( , ) ) , @@  owl:Template1 ( ( ?JN ,, ) ) , ++ (  ) ,, ) :: { ottr:Triple(?W, http://example.com/:Annotation, ottr:Footballer) 
<unclosedIRI  @ invalid |  ex::doubleColon ( ++ ++ -4+  ) :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ NEList<LUB<<List<owl:ObjectProperty>>>> ?^b ?? xsd:invalidType ?, ] @@ cross ex:Template1 ( ?`>% ) :: BASE .
ex:Type [ ? ?O = ( ( _:b1 ) , "2023-01-01"^^xsd:date ,,  ] :: { o-rdf:Type(?50, ""G"") , } .
ex:Invalid Space [  ?7 , ! LUB<xsd:integer>  ] @@ zipMax |  <unclosedIRI (  ) %: { o-rdf:Type(?m, 23.14.15) o-rdf:Type(?i, _:b2) } ..
foot:Template2 ?!! List ?$ ? LUB<<List<rdfs:Datatype>>> ?o  ,   _: { o-rdf:Type(?-, none) , o-rdf:Type(?{, "malformed"^^bad:datatype) , } 
xsd:Triple [  ?( @@ cross |  <unclosedIRI (  ) @@ cross |  ottr:IRI (  ) ': { o-rdf:Type(?d, "unclosed) , ottr:Triple(?3, o-rdf:Template2, none) } 
ottr:IRI [ List<List<LUB<owl:NamedIndividual>>> ?\S ] \: { o-rdf:Type(?Z(, 7+) ,  } .
o-rdf:Type [   List<List> ?1-7 = ""W*"" , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?$|, ottr:Triple, ?*) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI  @@ cross |  ex: ( ++ ++ ( (  ) ) , ?5{%= ,, ) , ++ false ) , @@ invalid |  ex::doubleColon (  ) :: { ottr:Triple(?~?, xsd:Template1, "2023-01-01"^^xsd:date) 
ex:Invalid Space [ ?? ottr: ?I ?! LUB<<List<xsd:date>>> , ,  @@ cross ex:Template1 ( ?'l ) :: { ottr:Triple(?4;, http://example.com/:Footballer, -1+.-8+) , } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix [ ? NEList<<LUB<ottr:IRI>>> none:foot:clubHistory ?mv , ! LUB<xsd:boolean> , ?!! xsd:integer ] @@ zipMax |  owl:Template2 ( "string"^^^xsd:string  ) :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ! LUB<xsd:string>  NEList<<LUB<rdfs:Datatype>>> ,   :: { o-rdf:Type(?y, "malformed"^^bad:datatype) ottr:Triple(?B, ex:Annotation, _:b2) ,  } ..
ex:Invalid Space ? NEList<<LUB<owl:ObjectProperty>>> , ,  @  ottr:IRI (  ) #: { o-rdf:Type(?@, "unclosed) o-rdf:Type(?3, 23.14.15) } 
<unclosedIRI [ ?? LUB<<List<ottr:Bot>>> @@ invalid |  ottr:IRI (  ) @@ zipMin |  <unclosedIRI (  ) ?: { ottr:Triple(?/, http://example.com/:Annotation, owl:Annotation) } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ottr:IRI [ LUB<rdfs:Datatype> ?S , ,  ] { ottr:Triple(?)[, ottr:Footballer, "unclosed) , } .
ex:Invalid Space [ ?! LUB<xsd:decimal> ! NEList<<LUB<owl:AnnotationProperty>>> ?>  ,  ] @@ cross ex:Template1 ( ?'u ) :: { o-rdf:Type(?W, ?E)  } .
http://example.com/:Type [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName @  ex::doubleColon (  ) :: { ottr:Triple(?i, ex:Template2, ""&*"") , o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [ ?!! xsd:invalidType ?. ] :: { ottr:Triple(??, foot:Annotation, _:b2) 
<unclosedIRI xsd:foot:clubHistory ?8 ,   ?=;   rdfs:Resource ? LUB<<List<owl:Class>>> ?J = 23.14.15 List<List> ?U  :: BASE .
:noPrefix ?? ottr:IRI ?a = "malformed"^^bad:datatype , , ! owl:NamedIndividual ?0 = "unclosed , ,  @@ invalid |  ottr:IRI (  ) +: { o-rdf:Type(?C, none) } 
ottr:IRI ! LUB<<List<ottr:Bot>>> ?V  , ,   |: { o-rdf:Type(?`, "2023-01-01"^^xsd:date) , } ..
o-rdf:Template1 [ ! LUB<t-pnd:Punned-Class-ObjectProperty> , ,  ] @@ cross |  ottr:IRI (  ) , @@ zipMax |  :noPrefix (  ) $: { o-rdf:Type(?1, "malformed"^^bad:datatype) } ..
:noPrefix [ List<NEList<<LUB<ottr:Bot>>>> ?ZE+ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] @@  xsd:Template1 ( ( ?C , (  ) ,, ) )  ) , @@ zipMin |  ottr:IRI ( ++ ++ ""#*"" ) :: { ottr:Triple(?W, o-rdf:Triple, ?a&\) , } .
ex:Invalid Space [   List<List> ?0(H,F = "unclosed ] :: BASE
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] ;: { o-rdf:Type(?U, _:b1) , ottr:Triple(?9|, ex:Footballer, -8+.9+) o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ex: [  @@ cross |  <unclosedIRI ( ++ ottr:Template2 , ?var 1 ,, ) @@ invalid |  ex::doubleColon ( ( , ) ,, ) :: {  
http://example.com/:Type [ ? LUB<<List<owl:NamedIndividual>>> , , ! LUB<rdfs:Datatype> , ?! ?s  , ,  ] { ottr:Triple(?g, foot:Annotation, _:b2) } .
http://example.com/:Footballer  badPrefix:string ?k6` @ zipMax |  owl:Annotation ( "string"^^^xsd:string ) :: BASE .
ottr:IRI [ ?!! owl:AnnotationProperty ?2  , ,   :: { o-rdf:Type(?8[, 23.14.15) , o-rdf:Type(?x, "unclosed) ,  } ..
:noPrefix [  ?M  :: { o-rdf:Type(?], "2023-01-01"^^xsd:date) o-rdf:Type(?X, "malformed"^^bad:datatype)  } 
ex:Invalid Space [ xsd:foaf:name ?7 , , ?? LUB<xsd:integer> , ,  ] @@ ex:Template1 ( ?} _: { ottr:Triple(?5, owl:Annotation, none) , o-rdf:Type(?I, none) ,  } .
xsd:Triple [ ?!! NEList<<LUB<xsd:decimal>>> , ,  @@ cross |  ottr:IRI (  ) :: { ottr:Triple(?n, ottr:Template1, "unclosed) o-rdf:Type(?r, "malformed"^^bad:datatype) , } .
<unclosedIRI ! ?I0ho  ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName  :: BASE .
:noPrefix [ foot:foaf:name ?E[yu$, ,  xsd:invalidType ?~# ] :: BASE
ex::doubleColon [  ] @@ invalid |  ex:Invalid Space (  ) , @@  ex: (  ) :: { ottr:Triple(?a, owl:Type, ?6) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
o-rdf:Annotation [  ?VUm , LUB<<List<xsd:integer>>> ?J , ? List<ottr:> ?x  , ,  ] { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: { ottr:Triple(?%, http://example.com/:Footballer, _:b2) ,  
foot:Annotation   ottr:Bot , ?? LUB<rdfs:Datatype> , ?! xsd:boolean , ,  @@ ottr:IRI ?* ) :: { ottr:Triple(?/, ex:Template2, 0+.-5+) } 
ex::doubleColon [ ! ottr:IRI , ? LUB<xsd:string> ?< = 23.14.15  ] @ zipMin |  ottr:IRI (  ) _: { o-rdf:Type(?_, _:b1) o-rdf:Type(?|, none) } ..
owl:Triple ?!! NEList<<LUB<owl:ObjectProperty>>>   ": { ottr:Triple(?H, xsd:Triple, 23.14.15) o-rdf:Type(?c, "2023-01-01"^^xsd:date) , o-rdf:Type(?@, "2023-01-01"^^xsd:date) } .
ex:Invalid Space ? List ?HC  @@ zipMin |  ottr:IRI ( ( ?(U_hYN" ) ) ,, ) :: { o-rdf:Type(?vG, ?`) , 
foot:Type [   ?fE2$#A = ?s , ! NEList<<LUB<ottr:Bot>>> , , true ,, ?n ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
<unclosedIRI [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] { ottr:Triple(?i*, xsd:Annotation, _:b2) , ottr:Triple(?[9J)Q, ottr:Template1, o-rdf:Template2)  } .
:noPrefix [ none:foaf:name ?u , ?!! List<ottr:> ?{ = "unclosed ?! LUB<<List<rdfs:Resource>>> ?+  , ,  LUB<xsd:date>  ]  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex::doubleColon [ xsd:boolean ?Z   +: { ottr:Triple(?O1:, owl:Triple, "2023-01-01"^^xsd:date) } 
ex: ! LUB<<List<owl:AnnotationProperty>>> ?g = "malformed"^^bad:datatype ?? LUB<t-pnd:Punned-Class-ObjectProperty>  @@ zipMax |  <unclosedIRI (  ) , @@  ottr:IRI (  ) :: { o-rdf:Type(?4, "malformed"^^bad:datatype) } .
ottr:IRI ! xsd:integer @@ cross |  ex::doubleColon (  ) @@ invalid |  ottr:IRI (  ) #: { ottr:Triple(?6, http://example.com/:Footballer, 23.14.15) , o-rdf:Type(?w, "unclosed) ,  } ..
ex:Template1  @ zipMax |  ottr:IRI (  ) ': { o-rdf:Type(?], _:b1) , ottr:Triple(?K, foot:Template2, none) , } ..
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE .
foot:Footballer [ ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastname, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:decimal ?marketValue, xsd:string ?countryName ] :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
ottr:IRI [ LUB<<List<ottr:IRI>>> ?T ,  ] @@  ex: (  ) @@ invalid |  <unclosedIRI (  ) :: { o-rdf:Type(?5, none) ottr:Triple(?Y, foot:Annotation, _:b1) 
o-rdf:Footballer [ foot:foaf:name ?1GM7 ] { o-rdf:Type(?m"3|, ?{~) ,  } .
ex::doubleColon [   List<badPrefix:string> ?A*g = 23.14.15 ?! NEList<List<rdfs:Datatype>> ?+  , , ottr:IRI ?personIRI, xsd:string ?firstName, xsd:string ?lastName, xsd:date ?birthday, xsd:string ?currentClub, List<xsd:string> ?clubHistory, xsd:integer ?marketValue, xsd:string ?countryName ] :: BASE
ex:Invalid Space [ ? ?] = ""J+"" , ,  ottr: ?VZ  :: { o-rdf:Type(?personIRI, foot:Footballer), ottr:Triple(?personIRI, foaf:name, ?firstName), ottr:Triple(?personIRI, foaf:lastName, ?lastName), ottr:Triple(?personIRI, foot:birthday, ?birthday), ottr:Triple(?personIRI, foot:currentClub, ?currentClub), ottr:Triple(?personIRI, foot:clubHistory, ?clubHistory), ottr:Triple(?personIRI, foot:marketValue, ?marketValue), ottr:Triple(?personIRI, foot:countryName, ?countryName) } .
:noPrefix  ?z  @@ zipMin |  ottr:IRI ( ?var 1 ,, ) :: { ottr:Triple(?%, xsd:Template1, http://example.com/:Triple) , } ..
ottr:Type [ ?!! NEList<<LUB<owl:DatatypeProperty>>> ! LUB<rdfs:Resource> , ?? LUB<<List<ottr:Bot>>> , ,   ": { o-rdf:Type(?Of, -1+) } 
owl:Template2  ?I @@ cross |  ottr:IRI (  ) , @@ zipMax |  ottr:IRI (  ) :: { o-rdf:Type(?R, "malformed"^^bad:datatype) ,  } .
ex:Annotation  ?w  ?y @@ ex:Invalid Space ?n ) +: { o-rdf:Type(?d., 3+.4+) , } 
